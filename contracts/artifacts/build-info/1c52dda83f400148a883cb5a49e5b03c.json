{
	"id": "1c52dda83f400148a883cb5a49e5b03c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TikToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TikToken is ERC20, Ownable {\r\n    uint256 private constant _maxSupply = 1 * 10**24; //Max supply of 1 TikToken should mean the value of the TikToken is also the market cap\r\n    uint256 private constant _initialSupply = 0.8192 * 10**24; //Non-Owner supply should equal 0.8192 on contract deployment\r\n    uint256 private constant _minReward = 0.000000000000000000000001 * 10**24; //minimum reward so halving doesn't occur\r\n    uint256 private _remainingSupply = _initialSupply; //Rolling value of remaining TikTokens\r\n    uint256 private _currentReward = 0.00001 * 10**24; //Current minimum reward and reward per 1000 followers\r\n    uint256 private _halvingCount = 1; //number of halvings (plus 1 for calculations)\r\n\r\n    mapping(uint256 => bool) private _minted; //Unique TikTok user ID that minted the token\r\n\r\n    constructor() ERC20(\"TikToken\", \"TIK\") {\r\n        uint256 initialMintAmount = _maxSupply - _initialSupply; //18% to contract owner which will be sold to fund future web3 project\r\n        _mint(msg.sender, initialMintAmount); //Mint and send owner tokens\r\n    }\r\n\r\n    /** The minting function is designed to give a large amount of tokens to early adopters and cut the rewards so that there is a fair\r\n    distribution of tokens and that even if people are late to the party they can earn some TikTokens. At the time of contract deployment\r\n    there will be 0.8192 tokens remaining and every time this number halves (until it reaches 0.0001) the rewards get cut by 1 decimal place\r\n    Every user will have the opportunity to earn 0.00001 tokens per 1000 followers (0.01 per 1M followers) before the first halving cycle. \r\n    After the first halving cycle the rewards will be 0.000001 per 1000 followers (0.001 per 1M followers) and this process will continue\r\n    every time the remaining supply halves until the rewards get to be 0.000000000000000000000001 per 1000 followers as the minimum rewards.\r\n    */\r\n    function mint(address account, uint256 followers, uint256 id) external onlyOwner {\r\n        require(_remainingSupply > 0, \"No more tokens to mint\"); //Ensures supply exists\r\n        require(!_minted[id], \"User has already minted tokens\"); //Checks user hasn't already minted\r\n\r\n        uint256 amountToMint = (followers / 1000) * _currentReward + _currentReward; //Rewards calculated based on follower count\r\n        uint256 nextHalving = _initialSupply / (2 ** _halvingCount); //calculates next halving amount\r\n        uint256 amountToHalving = _remainingSupply - nextHalving; //calculates token supply until nextHalving\r\n\r\n        //Ensures a user with too many followers doesn't earn too much unless halving is complete\r\n        if (amountToHalving <= amountToMint && _currentReward > _minReward) {\r\n            amountToMint = amountToHalving; //mint the remaining tokens in this halving cycle\r\n            uint256 remainingFollowers = followers - (amountToMint * 1000 / (_currentReward)); //calculate any followers not compensated\r\n            uint256 additionalReward = (remainingFollowers / 1000) * (_currentReward / 2) + (_currentReward / 2); //calculate additional reward for remainingFollowers at the next halving rate\r\n\r\n            //ensure the remaining reward doesn't create a double halving event\r\n            if (additionalReward >= nextHalving / 2) {\r\n                additionalReward = (nextHalving / 2) - _currentReward; //create a buffer of 1 reward until the next halving, unfortunately this user will have rewards capped off, this can only happen to creators with mote than 10M followers.\r\n            }\r\n            amountToMint += additionalReward; //adds the additional reward to the mint amount\r\n        }\r\n\r\n        //reduces supply to remaining supply\r\n        if (_remainingSupply < amountToMint) {\r\n            amountToMint = _remainingSupply;\r\n        }\r\n\r\n        //mint the tokens, adjust remaining supply and log the user id\r\n        _mint(account, amountToMint);\r\n        _remainingSupply -= amountToMint;\r\n        _minted[id] = true;\r\n\r\n        //performs a halving function, adding a new 0 after the decimal place to the current reward per 1000 followers assuming halving hasn't maxed out.\r\n        if (_remainingSupply <= nextHalving && _currentReward > _minReward) {\r\n            _currentReward /= 10; \r\n            _halvingCount++;\r\n        }\r\n    }\r\n\r\n    //save gas for batch minting\r\n    function batchMint(address[] calldata accounts, uint256[] calldata followers, uint256[] calldata ids) external onlyOwner {\r\n        require(accounts.length == followers.length, \"Mismatched input arrays\");\r\n        require(accounts.length == ids.length, \"Mismatched input arrays\");\r\n\r\n        for (uint256 i = 0; i < accounts.length; i++) {\r\n            require(_remainingSupply > 0, \"No more tokens to mint\"); //Ensures supply exists\r\n            require(!_minted[ids[i]], \"User has already minted tokens\"); //Checks user hasn't already minted\r\n\r\n            uint256 amountToMint = (followers[i] / 1000) * _currentReward + _currentReward; //Rewards calculated based on follower count\r\n            uint256 nextHalving = _initialSupply / (2 ** _halvingCount); //calculates next halving amount\r\n            uint256 amountToHalving = _remainingSupply - nextHalving; //calculates token supply until nextHalving\r\n\r\n            //Ensures a user with too many followers doesn't earn too much unless halving is complete\r\n            if (amountToHalving <= amountToMint && _currentReward > _minReward) {\r\n                amountToMint = amountToHalving; //mint the remaining tokens in this halving cycle\r\n                uint256 remainingFollowers = followers[i] - (amountToMint * 1000 / (_currentReward)); //calculate any followers not compensated\r\n                uint256 additionalReward = (remainingFollowers / 1000) * (_currentReward / 2) + (_currentReward / 2); //calculate additional reward for remainingFollowers at the next halving rate\r\n\r\n                //ensure the remaining reward doesn't create a double halving event\r\n                if (additionalReward >= nextHalving / 2) {\r\n                    additionalReward = (nextHalving / 2) - _currentReward; //create a buffer of 1 reward until the next halving, unfortunately this user will have rewards capped off, this can only happen to creators with mote than 10M followers.\r\n                }\r\n                amountToMint += additionalReward; //adds the additional reward to the mint amount\r\n            }\r\n\r\n            //reduces supply to remaining supply\r\n            if (_remainingSupply < amountToMint) {\r\n                amountToMint = _remainingSupply;\r\n            }\r\n\r\n            //mint the tokens, adjust remaining supply and log the user id\r\n            _mint(accounts[i], amountToMint);\r\n            _remainingSupply -= amountToMint;\r\n            _minted[ids[i]] = true;\r\n\r\n            //performs a halving function, adding a new 0 after the decimal place to the current reward per 1000 followers assuming halving hasn't maxed out.\r\n            if (_remainingSupply <= nextHalving && _currentReward > _minReward) {\r\n                _currentReward /= 10; \r\n                _halvingCount++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function remainingSupply() external view returns (uint256) {\r\n        return _remainingSupply; //amount of TikTokens remaining to be minted\r\n    }\r\n\r\n    function currentReward() external view returns (uint256) {\r\n        return _currentReward; //provides the the reward value per 1000 followers also the minimum reward\r\n    }\r\n\r\n    function hasMinted(uint256 id) external view returns (bool) {\r\n        return _minted[id]; //determines if the user has minted already\r\n    }\r\n\r\n    function getHalvingCount() external view returns (uint256) {\r\n        return _halvingCount - 1; //provides the actual number of halvings the rewards have gone through\r\n    }\r\n    \r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 24;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_146:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_140:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_148:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_150:\n        /* \"#utility.yul\":962:991   */\n      tag_151\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_155:\n        /* \"#utility.yul\":1612:1641   */\n      tag_156\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_157\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_160:\n        /* \"#utility.yul\":2100:2129   */\n      tag_161\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_163:\n        /* \"#utility.yul\":2308:2337   */\n      tag_164\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_165\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_167:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_168:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_170:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ff3d549d1f590bae68fb995f6d42600854783cc1eb66729f223a9cd94a231a7464736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:6"
															},
															"nodeType": "YulIf",
															"src": "220:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:6"
															},
															"nodeType": "YulIf",
															"src": "353:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:6"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:6"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:6"
															},
															"nodeType": "YulIf",
															"src": "536:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:6"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:6"
															},
															"nodeType": "YulIf",
															"src": "698:53:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:6"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:6"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:6",
																"statements": []
															},
															"src": "779:133:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:6"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:6"
															},
															"nodeType": "YulIf",
															"src": "921:80:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:6",
														"type": ""
													}
												],
												"src": "146:885:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:6"
															},
															"nodeType": "YulIf",
															"src": "1164:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:6"
															},
															"nodeType": "YulIf",
															"src": "1301:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:6"
															},
															"nodeType": "YulIf",
															"src": "1474:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:6",
														"type": ""
													}
												],
												"src": "1036:562:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:6"
															},
															"nodeType": "YulIf",
															"src": "1746:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:6"
															},
															"nodeType": "YulIf",
															"src": "1816:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:6",
														"type": ""
													}
												],
												"src": "1603:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000aef38038062000aef8339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61085d80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610801565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b602082108114156107fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082257634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220ff3d549d1f590bae68fb995f6d42600854783cc1eb66729f223a9cd94a231a7464736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xAEF CODESIZE SUB DUP1 PUSH3 0xAEF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x85D DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AF DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD PUSH1 0x20 DUP5 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x7FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x822 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT RETURNDATASIZE SLOAD SWAP14 0x1F MSIZE SIGNEXTEND 0xAE PUSH9 0xFB995F6D4260085478 EXTCODECOPY 0xC1 0xEB PUSH7 0x729F223A9CD94A 0x23 BYTE PUSH21 0x64736F6C6343000809003300000000000000000000 ",
							"sourceMap": "1532:11312:1:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2069:17:1;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1532:11312:1;;;-1:-1:-1;1532:11312:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:6;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:6;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:6:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:6;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1532:11312:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_698": {
									"entryPoint": null,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_633": {
									"entryPoint": 856,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_687": {
									"entryPoint": null,
									"id": 687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_814": {
									"entryPoint": null,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_676": {
									"entryPoint": 1148,
									"id": 676,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_459": {
									"entryPoint": 1270,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_254": {
									"entryPoint": 813,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_279": {
									"entryPoint": 562,
									"id": 279,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_187": {
									"entryPoint": null,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_382": {
									"entryPoint": 671,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 622,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_167": {
									"entryPoint": 416,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_177": {
									"entryPoint": 656,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_312": {
									"entryPoint": 586,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_236": {
									"entryPoint": 799,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:6"
															},
															"nodeType": "YulIf",
															"src": "443:91:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:597:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:6"
															},
															"nodeType": "YulIf",
															"src": "713:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:6",
														"type": ""
													}
												],
												"src": "616:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:6"
															},
															"nodeType": "YulIf",
															"src": "891:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:6",
														"type": ""
													}
												],
												"src": "794:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:6",
														"type": ""
													}
												],
												"src": "1053:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:6",
														"type": ""
													}
												],
												"src": "1245:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:6"
															},
															"nodeType": "YulIf",
															"src": "1541:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:6",
														"type": ""
													}
												],
												"src": "1427:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:6",
														"type": ""
													}
												],
												"src": "1760:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:6"
															},
															"nodeType": "YulIf",
															"src": "2029:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:6",
														"type": ""
													}
												],
												"src": "1949:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:6"
															},
															"nodeType": "YulIf",
															"src": "2237:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:6",
														"type": ""
													}
												],
												"src": "2140:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:6"
															},
															"nodeType": "YulIf",
															"src": "2548:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:6"
															},
															"nodeType": "YulIf",
															"src": "2618:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:6",
														"type": ""
													}
												],
												"src": "2405:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:6"
															},
															"nodeType": "YulIf",
															"src": "2848:136:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:6",
														"type": ""
													}
												],
												"src": "2790:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:6",
														"type": ""
													}
												],
												"src": "3020:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:6",
														"type": ""
													}
												],
												"src": "3426:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:6",
														"type": ""
													}
												],
												"src": "3831:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:6",
														"type": ""
													}
												],
												"src": "4234:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:6",
														"type": ""
													}
												],
												"src": "4592:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:6",
														"type": ""
													}
												],
												"src": "4998:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:6",
														"type": ""
													}
												],
												"src": "5402:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069a565b60405180910390f35b6100df6100da36600461070b565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610735565b61024a565b604051601281526020016100c3565b6100df61013136600461070b565b61026e565b6100f3610144366004610771565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461070b565b61029f565b6100df61018836600461070b565b61031f565b6100f361019b366004610793565b61032d565b6060600380546101af906107c6565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c6565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b9190610801565b610358565b6060600480546101af906107c6565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f0565b600060208083528351808285015260005b818110156106c7578581018301518582016040015282016106ab565b818111156106d9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070657600080fd5b919050565b6000806040838503121561071e57600080fd5b610727836106ef565b946020939093013593505050565b60008060006060848603121561074a57600080fd5b610753846106ef565b9250610761602085016106ef565b9150604084013590509250925092565b60006020828403121561078357600080fd5b61078c826106ef565b9392505050565b600080604083850312156107a657600080fd5b6107af836106ef565b91506107bd602084016106ef565b90509250929050565b600181811c908216806107da57607f821691505b602082108114156107fb57634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561082257634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220ff3d549d1f590bae68fb995f6d42600854783cc1eb66729f223a9cd94a231a7464736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AB JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x74A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x753 DUP5 PUSH2 0x6EF JUMP JUMPDEST SWAP3 POP PUSH2 0x761 PUSH1 0x20 DUP6 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x783 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x78C DUP3 PUSH2 0x6EF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AF DUP4 PUSH2 0x6EF JUMP JUMPDEST SWAP2 POP PUSH2 0x7BD PUSH1 0x20 DUP5 ADD PUSH2 0x6EF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x7FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x822 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT RETURNDATASIZE SLOAD SWAP14 0x1F MSIZE SIGNEXTEND 0xAE PUSH9 0xFB995F6D4260085478 EXTCODECOPY 0xC1 0xEB PUSH7 0x729F223A9CD94A 0x23 BYTE PUSH21 0x64736F6C6343000809003300000000000000000000 ",
							"sourceMap": "1532:11312:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:6;;1211:22;1193:41;;1181:2;1166:18;4444:197:1;1053:187:6;3255:106:1;3342:12;;3255:106;;;1391:25:6;;;1379:2;1364:18;3255:106:1;1245:177:6;5203:256:1;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1902:36:6;;1890:2;1875:18;3104:91:1;1760:184:6;5854:234:1;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:4;4581:32:1;719:10:4;4597:7:1;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:1;;4444:197;-1:-1:-1;;;4444:197:1:o;5203:256::-;5300:4;719:10:4;5356:38:1;5372:4;719:10:4;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;5854:234::-;5942:4;719:10:4;5996:64:1;719:10:4;6012:7:1;6049:10;6021:25;719:10:4;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:4;6668:4:1;6749:25;719:10:4;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;3222:2:6;6784:85:1;;;3204:21:6;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:6;;;3344:35;3396:19;;6784:85:1;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:4;3873:28:1;719:10:4;3890:2:1;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;3628:2:6;10550:68:1;;;3610:21:6;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:6;;;3750:34;3801:19;;10550:68:1;3426:400:6;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;4033:2:6;10628:68:1;;;4015:21:6;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:6;;;4155:32;4204:19;;10628:68:1;3831:398:6;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1391:25:6;;;10758:32:1;;1364:18:6;10758:32:1;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;4436:2:6;11297:68:1;;;4418:21:6;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11297:68:1;4234:353:6;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;4794:2:6;7544:68:1;;;4776:21:6;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:6;;;4916:35;4968:19;;7544:68:1;4592:401:6;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;5200:2:6;7622:64:1;;;5182:21:6;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:6;;;5322:33;5372:19;;7622:64:1;4998:399:6;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;5604:2:6;7793:72:1;;;5586:21:6;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:6;;;5726:36;5779:19;;7793:72:1;5402:402:6;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1391:25:6;;;8114:13:1;;8163:26;;1364:18:6;8163:26:1;;;;;;;8200:37;12073:91;14:597:6;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:6;574:15;-1:-1:-1;;570:29:6;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:6:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:6;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:6:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:6:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:6;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "428200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51134",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff3d549d1f590bae68fb995f6d42600854783cc1eb66729f223a9cd94a231a7464736f6c63430008090033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TikToken.sol": {
				"TikToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "followers",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHalvingCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "hasMinted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "followers",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TikToken.sol\":175:8107  contract TikToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TikToken.sol\":403:418  0.8192 * 10**24 */\n  0xad78ebc5ac6200000000\n    /* \"contracts/TikToken.sol\":609:658  uint256 private _remainingSupply = _initialSupply */\n  0x06\n  sstore\n    /* \"contracts/TikToken.sol\":737:753  0.00001 * 10**24 */\n  0x8ac7230489e80000\n    /* \"contracts/TikToken.sol\":704:753  uint256 private _currentReward = 0.00001 * 10**24 */\n  0x07\n  sstore\n    /* \"contracts/TikToken.sol\":847:848  1 */\n  0x01\n    /* \"contracts/TikToken.sol\":815:848  uint256 private _halvingCount = 1 */\n  0x08\n  sstore\n    /* \"contracts/TikToken.sol\":999:1259  constructor() ERC20(\"TikToken\", \"TIK\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xc1, 0x2a34b5aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x54494b)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"contracts/TikToken.sol\":1049:1074  uint256 initialMintAmount */\n  0x00\n    /* \"contracts/TikToken.sol\":1077:1104  _maxSupply - _initialSupply */\n  tag_15\n    /* \"contracts/TikToken.sol\":403:418  0.8192 * 10**24 */\n  0xad78ebc5ac6200000000\n    /* \"contracts/TikToken.sol\":256:266  1 * 10**24 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/TikToken.sol\":1077:1104  _maxSupply - _initialSupply */\n  tag_16\n  jump\t// in\ntag_15:\n    /* \"contracts/TikToken.sol\":1049:1104  uint256 initialMintAmount = _maxSupply - _initialSupply */\n  swap1\n  pop\n    /* \"contracts/TikToken.sol\":1186:1222  _mint(msg.sender, initialMintAmount) */\n  tag_17\n    /* \"contracts/TikToken.sol\":1192:1202  msg.sender */\n  caller\n    /* \"contracts/TikToken.sol\":1049:1104  uint256 initialMintAmount = _maxSupply - _initialSupply */\n  dup3\n    /* \"contracts/TikToken.sol\":1186:1191  _mint */\n  tag_18\n    /* \"contracts/TikToken.sol\":1186:1222  _mint(msg.sender, initialMintAmount) */\n  jump\t// in\ntag_17:\n    /* \"contracts/TikToken.sol\":1038:1259  {... */\n  pop\n    /* \"contracts/TikToken.sol\":175:8107  contract TikToken is ERC20, Ownable {... */\n  jump(tag_48)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_18:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":478:480   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":460:481   */\n  mstore\n    /* \"#utility.yul\":517:519   */\n  0x1f\n    /* \"#utility.yul\":497:515   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":490:520   */\n  mstore\n    /* \"#utility.yul\":556:589   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":536:554   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":529:590   */\n  mstore\n    /* \"#utility.yul\":607:625   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_28\n  swap2\n  swap1\n  tag_29\n  jump\t// in\ntag_28:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":915:940   */\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":888:906   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TikToken.sol\":175:8107  contract TikToken is ERC20, Ownable {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_36\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_39\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_42)\ntag_39:\n  dup3\n  0x1f\n  lt\n  tag_40\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_42)\ntag_40:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_42\n  jumpi\n  swap2\n  dup3\n  add\ntag_41:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_42\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_41)\ntag_42:\n  pop\n  tag_43\n  swap3\n  swap2\n  pop\n  tag_44\n  jump\t// in\ntag_43:\n  pop\n  swap1\n  jump\t// out\ntag_44:\ntag_45:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_43\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_45)\n    /* \"#utility.yul\":14:141   */\ntag_47:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:271   */\ntag_16:\n    /* \"#utility.yul\":186:190   */\n  0x00\n    /* \"#utility.yul\":214:215   */\n  dup3\n    /* \"#utility.yul\":211:212   */\n  dup3\n    /* \"#utility.yul\":208:216   */\n  lt\n    /* \"#utility.yul\":205:239   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":219:237   */\n  tag_52\n  tag_47\n  jump\t// in\ntag_52:\n  pop\n    /* \"#utility.yul\":256:265   */\n  sub\n  swap1\n    /* \"#utility.yul\":146:271   */\n  jump\t// out\n    /* \"#utility.yul\":636:764   */\ntag_29:\n    /* \"#utility.yul\":676:679   */\n  0x00\n    /* \"#utility.yul\":707:708   */\n  dup3\n    /* \"#utility.yul\":703:709   */\n  not\n    /* \"#utility.yul\":700:701   */\n  dup3\n    /* \"#utility.yul\":697:710   */\n  gt\n    /* \"#utility.yul\":694:733   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":713:731   */\n  tag_56\n  tag_47\n  jump\t// in\ntag_56:\n  pop\n    /* \"#utility.yul\":749:758   */\n  add\n  swap1\n    /* \"#utility.yul\":636:764   */\n  jump\t// out\n    /* \"#utility.yul\":951:1331   */\ntag_37:\n    /* \"#utility.yul\":1030:1031   */\n  0x01\n    /* \"#utility.yul\":1026:1038   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1073:1085   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1094:1155   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1148:1152   */\n  0x7f\n    /* \"#utility.yul\":1140:1146   */\n  dup3\n    /* \"#utility.yul\":1136:1153   */\n  and\n    /* \"#utility.yul\":1126:1153   */\n  swap2\n  pop\n    /* \"#utility.yul\":1094:1155   */\ntag_59:\n    /* \"#utility.yul\":1201:1203   */\n  0x20\n    /* \"#utility.yul\":1193:1199   */\n  dup3\n    /* \"#utility.yul\":1190:1204   */\n  lt\n    /* \"#utility.yul\":1170:1188   */\n  dup2\n    /* \"#utility.yul\":1167:1205   */\n  eq\n    /* \"#utility.yul\":1164:1325   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1247:1257   */\n  0x4e487b71\n    /* \"#utility.yul\":1242:1245   */\n  0xe0\n    /* \"#utility.yul\":1238:1258   */\n  shl\n    /* \"#utility.yul\":1235:1236   */\n  0x00\n    /* \"#utility.yul\":1228:1259   */\n  mstore\n    /* \"#utility.yul\":1282:1286   */\n  0x22\n    /* \"#utility.yul\":1279:1280   */\n  0x04\n    /* \"#utility.yul\":1272:1287   */\n  mstore\n    /* \"#utility.yul\":1310:1314   */\n  0x24\n    /* \"#utility.yul\":1307:1308   */\n  0x00\n    /* \"#utility.yul\":1300:1315   */\n  revert\n    /* \"#utility.yul\":1164:1325   */\ntag_60:\n  pop\n    /* \"#utility.yul\":951:1331   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_48:\n    /* \"contracts/TikToken.sol\":175:8107  contract TikToken is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TikToken.sol\":175:8107  contract TikToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd559f05b\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd559f05b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xda0239a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xe5b95595\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x331d17c1\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07621eca\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x156e29f6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TikToken.sol\":7497:7669  function currentReward() external view returns (uint256) {... */\n    tag_4:\n        /* \"contracts/TikToken.sol\":7572:7586  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":7497:7669  function currentReward() external view returns (uint256) {... */\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":762:787   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":750:752   */\n      0x20\n        /* \"#utility.yul\":735:753   */\n      add\n        /* \"contracts/TikToken.sol\":7497:7669  function currentReward() external view returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":616:793   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":1400:1414   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1393:1415   */\n      iszero\n        /* \"#utility.yul\":1375:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1363:1365   */\n      0x20\n        /* \"#utility.yul\":1348:1366   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1235:1422   */\n      jump\n        /* \"contracts/TikToken.sol\":2115:4503  function mint(address account, uint256 followers, uint256 id) external onlyOwner {... */\n    tag_6:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_30)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_8:\n      tag_34\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"contracts/TikToken.sol\":8011:8104  function decimals() public view virtual override returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"contracts/TikToken.sol\":8094:8096  24 */\n      0x18\n        /* \"#utility.yul\":2229:2265   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2217:2219   */\n      0x20\n        /* \"#utility.yul\":2202:2220   */\n      add\n        /* \"contracts/TikToken.sol\":8011:8104  function decimals() public view virtual override returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":2087:2271   */\n      jump\n        /* \"contracts/TikToken.sol\":7826:7999  function getHalvingCount() external view returns (uint256) {... */\n    tag_10:\n      tag_30\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_34\n      tag_60\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_30\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_40\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2613:2664   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2601:2603   */\n      0x20\n        /* \"#utility.yul\":2586:2604   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":2467:2670   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_26\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_16:\n      tag_34\n      tag_78\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_17:\n      tag_34\n      tag_82\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/TikToken.sol\":4545:7335  function batchMint(address[] calldata accounts, uint256[] calldata followers, uint256[] calldata ids) external onlyOwner {... */\n    tag_18:\n      tag_40\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"contracts/TikToken.sol\":7343:7489  function remainingSupply() external view returns (uint256) {... */\n    tag_19:\n        /* \"contracts/TikToken.sol\":7420:7436  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":7343:7489  function remainingSupply() external view returns (uint256) {... */\n      jump(tag_30)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_20:\n      tag_30\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"contracts/TikToken.sol\":7677:7818  function hasMinted(uint256 id) external view returns (bool) {... */\n    tag_21:\n      tag_34\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/TikToken.sol\":7731:7735  bool */\n      0x00\n        /* \"contracts/TikToken.sol\":7755:7766  _minted[id] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/TikToken.sol\":7755:7762  _minted */\n      0x09\n        /* \"contracts/TikToken.sol\":7755:7766  _minted[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/TikToken.sol\":7677:7818  function hasMinted(uint256 id) external view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_40\n      tag_103\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_116\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_113:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TikToken.sol\":2115:4503  function mint(address account, uint256 followers, uint256 id) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/TikToken.sol\":2234:2235  0 */\n      0x00\n        /* \"contracts/TikToken.sol\":2215:2231  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":2215:2235  _remainingSupply > 0 */\n      gt\n        /* \"contracts/TikToken.sol\":2207:2262  require(_remainingSupply > 0, \"No more tokens to mint\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5177:5179   */\n      0x20\n        /* \"contracts/TikToken.sol\":2207:2262  require(_remainingSupply > 0, \"No more tokens to mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5159:5180   */\n      mstore\n        /* \"#utility.yul\":5216:5218   */\n      0x16\n        /* \"#utility.yul\":5196:5214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5189:5219   */\n      mstore\n      shl(0x52, 0x139bc81b5bdc99481d1bdad95b9cc81d1bc81b5a5b9d)\n        /* \"#utility.yul\":5235:5253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5228:5280   */\n      mstore\n        /* \"#utility.yul\":5297:5315   */\n      0x64\n      add\n        /* \"contracts/TikToken.sol\":2207:2262  require(_remainingSupply > 0, \"No more tokens to mint\") */\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/TikToken.sol\":2306:2317  _minted[id] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/TikToken.sol\":2306:2313  _minted */\n      0x09\n        /* \"contracts/TikToken.sol\":2306:2317  _minted[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/TikToken.sol\":2305:2317  !_minted[id] */\n      iszero\n        /* \"contracts/TikToken.sol\":2297:2352  require(!_minted[id], \"User has already minted tokens\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5528:5530   */\n      0x20\n        /* \"contracts/TikToken.sol\":2297:2352  require(!_minted[id], \"User has already minted tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5510:5531   */\n      mstore\n        /* \"#utility.yul\":5567:5569   */\n      0x1e\n        /* \"#utility.yul\":5547:5565   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5540:5570   */\n      mstore\n        /* \"#utility.yul\":5606:5638   */\n      0x557365722068617320616c7265616479206d696e74656420746f6b656e730000\n        /* \"#utility.yul\":5586:5604   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5579:5639   */\n      mstore\n        /* \"#utility.yul\":5656:5674   */\n      0x64\n      add\n        /* \"contracts/TikToken.sol\":2297:2352  require(!_minted[id], \"User has already minted tokens\") */\n      tag_123\n        /* \"#utility.yul\":5326:5680   */\n      jump\n        /* \"contracts/TikToken.sol\":2297:2352  require(!_minted[id], \"User has already minted tokens\") */\n    tag_125:\n        /* \"contracts/TikToken.sol\":2462:2476  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":2401:2421  uint256 amountToMint */\n      0x00\n      swap1\n        /* \"contracts/TikToken.sol\":2462:2476  _currentReward */\n      dup1\n        /* \"contracts/TikToken.sol\":2425:2441  followers / 1000 */\n      tag_128\n        /* \"contracts/TikToken.sol\":2437:2441  1000 */\n      0x03e8\n        /* \"contracts/TikToken.sol\":2425:2434  followers */\n      dup7\n        /* \"contracts/TikToken.sol\":2425:2441  followers / 1000 */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/TikToken.sol\":2424:2459  (followers / 1000) * _currentReward */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/TikToken.sol\":2424:2476  (followers / 1000) * _currentReward + _currentReward */\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/TikToken.sol\":2401:2476  uint256 amountToMint = (followers / 1000) * _currentReward + _currentReward */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":2532:2551  uint256 nextHalving */\n      0x00\n        /* \"contracts/TikToken.sol\":2577:2590  _halvingCount */\n      sload(0x08)\n        /* \"contracts/TikToken.sol\":2572:2573  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":2572:2590  2 ** _halvingCount */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"contracts/TikToken.sol\":2554:2591  _initialSupply / (2 ** _halvingCount) */\n      tag_136\n      swap1\n        /* \"contracts/TikToken.sol\":403:418  0.8192 * 10**24 */\n      0xad78ebc5ac6200000000\n        /* \"contracts/TikToken.sol\":2554:2591  _initialSupply / (2 ** _halvingCount) */\n      tag_129\n      jump\t// in\n    tag_136:\n        /* \"contracts/TikToken.sol\":2532:2591  uint256 nextHalving = _initialSupply / (2 ** _halvingCount) */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":2635:2658  uint256 amountToHalving */\n      0x00\n        /* \"contracts/TikToken.sol\":2680:2691  nextHalving */\n      dup2\n        /* \"contracts/TikToken.sol\":2661:2677  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":2661:2691  _remainingSupply - nextHalving */\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/TikToken.sol\":2635:2691  uint256 amountToHalving = _remainingSupply - nextHalving */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":2870:2882  amountToMint */\n      dup3\n        /* \"contracts/TikToken.sol\":2851:2866  amountToHalving */\n      dup2\n        /* \"contracts/TikToken.sol\":2851:2882  amountToHalving <= amountToMint */\n      gt\n      iszero\n        /* \"contracts/TikToken.sol\":2851:2913  amountToHalving <= amountToMint && _currentReward > _minReward */\n      dup1\n      iszero\n      tag_139\n      jumpi\n      pop\n        /* \"contracts/TikToken.sol\":525:560  0.000000000000000000000001 * 10**24 */\n      0x01\n        /* \"contracts/TikToken.sol\":2886:2900  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":2886:2913  _currentReward > _minReward */\n      gt\n        /* \"contracts/TikToken.sol\":2851:2913  amountToHalving <= amountToMint && _currentReward > _minReward */\n    tag_139:\n        /* \"contracts/TikToken.sol\":2847:3845  if (amountToHalving <= amountToMint && _currentReward > _minReward) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/TikToken.sol\":2945:2960  amountToHalving */\n      dup1\n        /* \"contracts/TikToken.sol\":2930:2960  amountToMint = amountToHalving */\n      swap3\n      pop\n        /* \"contracts/TikToken.sol\":3025:3051  uint256 remainingFollowers */\n      0x00\n        /* \"contracts/TikToken.sol\":3090:3104  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":3067:3079  amountToMint */\n      dup5\n        /* \"contracts/TikToken.sol\":3082:3086  1000 */\n      0x03e8\n        /* \"contracts/TikToken.sol\":3067:3086  amountToMint * 1000 */\n      tag_141\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_141:\n        /* \"contracts/TikToken.sol\":3067:3105  amountToMint * 1000 / (_currentReward) */\n      tag_142\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_142:\n        /* \"contracts/TikToken.sol\":3054:3106  followers - (amountToMint * 1000 / (_currentReward)) */\n      tag_143\n      swap1\n        /* \"contracts/TikToken.sol\":3054:3063  followers */\n      dup8\n        /* \"contracts/TikToken.sol\":3054:3106  followers - (amountToMint * 1000 / (_currentReward)) */\n      tag_138\n      jump\t// in\n    tag_143:\n        /* \"contracts/TikToken.sol\":3025:3106  uint256 remainingFollowers = followers - (amountToMint * 1000 / (_currentReward)) */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":3163:3187  uint256 additionalReward */\n      0x00\n        /* \"contracts/TikToken.sol\":3261:3262  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":3244:3258  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":3244:3262  _currentReward / 2 */\n      tag_144\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_144:\n        /* \"contracts/TikToken.sol\":3238:3239  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":3221:3235  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":3221:3239  _currentReward / 2 */\n      tag_145\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_145:\n        /* \"contracts/TikToken.sol\":3191:3216  remainingFollowers / 1000 */\n      tag_146\n        /* \"contracts/TikToken.sol\":3212:3216  1000 */\n      0x03e8\n        /* \"contracts/TikToken.sol\":3191:3209  remainingFollowers */\n      dup6\n        /* \"contracts/TikToken.sol\":3191:3216  remainingFollowers / 1000 */\n      tag_129\n      jump\t// in\n    tag_146:\n        /* \"contracts/TikToken.sol\":3190:3240  (remainingFollowers / 1000) * (_currentReward / 2) */\n      tag_147\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_147:\n        /* \"contracts/TikToken.sol\":3190:3263  (remainingFollowers / 1000) * (_currentReward / 2) + (_currentReward / 2) */\n      tag_148\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_148:\n        /* \"contracts/TikToken.sol\":3163:3263  uint256 additionalReward = (remainingFollowers / 1000) * (_currentReward / 2) + (_currentReward / 2) */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":3463:3478  nextHalving / 2 */\n      tag_149\n        /* \"contracts/TikToken.sol\":3477:3478  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":3463:3474  nextHalving */\n      dup6\n        /* \"contracts/TikToken.sol\":3463:3478  nextHalving / 2 */\n      tag_129\n      jump\t// in\n    tag_149:\n        /* \"contracts/TikToken.sol\":3443:3459  additionalReward */\n      dup2\n        /* \"contracts/TikToken.sol\":3443:3478  additionalReward >= nextHalving / 2 */\n      lt\n        /* \"contracts/TikToken.sol\":3439:3739  if (additionalReward >= nextHalving / 2) {... */\n      tag_150\n      jumpi\n        /* \"contracts/TikToken.sol\":3538:3552  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":3519:3534  nextHalving / 2 */\n      tag_151\n        /* \"contracts/TikToken.sol\":3533:3534  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":3519:3530  nextHalving */\n      dup7\n        /* \"contracts/TikToken.sol\":3519:3534  nextHalving / 2 */\n      tag_129\n      jump\t// in\n    tag_151:\n        /* \"contracts/TikToken.sol\":3518:3552  (nextHalving / 2) - _currentReward */\n      tag_152\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_152:\n        /* \"contracts/TikToken.sol\":3499:3552  additionalReward = (nextHalving / 2) - _currentReward */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":3439:3739  if (additionalReward >= nextHalving / 2) {... */\n    tag_150:\n        /* \"contracts/TikToken.sol\":3753:3785  amountToMint += additionalReward */\n      tag_153\n        /* \"contracts/TikToken.sol\":3769:3785  additionalReward */\n      dup2\n        /* \"contracts/TikToken.sol\":3753:3785  amountToMint += additionalReward */\n      dup7\n      tag_133\n      jump\t// in\n    tag_153:\n      swap5\n      pop\n        /* \"contracts/TikToken.sol\":2915:3845  {... */\n      pop\n      pop\n        /* \"contracts/TikToken.sol\":2847:3845  if (amountToHalving <= amountToMint && _currentReward > _minReward) {... */\n    tag_140:\n        /* \"contracts/TikToken.sol\":3926:3938  amountToMint */\n      dup3\n        /* \"contracts/TikToken.sol\":3907:3923  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":3907:3938  _remainingSupply < amountToMint */\n      lt\n        /* \"contracts/TikToken.sol\":3903:3998  if (_remainingSupply < amountToMint) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"contracts/TikToken.sol\":3970:3986  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":3955:3986  amountToMint = _remainingSupply */\n      swap3\n      pop\n        /* \"contracts/TikToken.sol\":3903:3998  if (_remainingSupply < amountToMint) {... */\n    tag_154:\n        /* \"contracts/TikToken.sol\":4082:4110  _mint(account, amountToMint) */\n      tag_155\n        /* \"contracts/TikToken.sol\":4088:4095  account */\n      dup7\n        /* \"contracts/TikToken.sol\":4097:4109  amountToMint */\n      dup5\n        /* \"contracts/TikToken.sol\":4082:4087  _mint */\n      tag_156\n        /* \"contracts/TikToken.sol\":4082:4110  _mint(account, amountToMint) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/TikToken.sol\":4141:4153  amountToMint */\n      dup3\n        /* \"contracts/TikToken.sol\":4121:4137  _remainingSupply */\n      0x06\n      0x00\n        /* \"contracts/TikToken.sol\":4121:4153  _remainingSupply -= amountToMint */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_157:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/TikToken.sol\":4164:4175  _minted[id] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/TikToken.sol\":4164:4171  _minted */\n      0x09\n        /* \"contracts/TikToken.sol\":4164:4175  _minted[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/TikToken.sol\":4164:4182  _minted[id] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/TikToken.sol\":4178:4182  true */\n      0x01\n        /* \"contracts/TikToken.sol\":4164:4182  _minted[id] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/TikToken.sol\":4354:4370  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":4354:4385  _remainingSupply <= nextHalving */\n      dup3\n      lt\n      dup1\n      iszero\n      swap1\n        /* \"contracts/TikToken.sol\":4354:4416  _remainingSupply <= nextHalving && _currentReward > _minReward */\n      tag_158\n      jumpi\n      pop\n        /* \"contracts/TikToken.sol\":525:560  0.000000000000000000000001 * 10**24 */\n      0x01\n        /* \"contracts/TikToken.sol\":4389:4403  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":4389:4416  _currentReward > _minReward */\n      gt\n        /* \"contracts/TikToken.sol\":4354:4416  _remainingSupply <= nextHalving && _currentReward > _minReward */\n    tag_158:\n        /* \"contracts/TikToken.sol\":4350:4496  if (_remainingSupply <= nextHalving && _currentReward > _minReward) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"contracts/TikToken.sol\":4451:4453  10 */\n      0x0a\n        /* \"contracts/TikToken.sol\":4433:4447  _currentReward */\n      0x07\n      0x00\n        /* \"contracts/TikToken.sol\":4433:4453  _currentReward /= 10 */\n      dup3\n      dup3\n      sload\n      tag_160\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_160:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/TikToken.sol\":4469:4482  _halvingCount */\n      0x08\n        /* \"contracts/TikToken.sol\":4469:4484  _halvingCount++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/TikToken.sol\":4469:4482  _halvingCount */\n      0x00\n        /* \"contracts/TikToken.sol\":4469:4484  _halvingCount++ */\n      tag_161\n      dup4\n      tag_162\n      jump\t// in\n    tag_161:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/TikToken.sol\":4350:4496  if (_remainingSupply <= nextHalving && _currentReward > _minReward) {... */\n    tag_159:\n        /* \"contracts/TikToken.sol\":2196:4503  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/TikToken.sol\":2115:4503  function mint(address account, uint256 followers, uint256 id) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_168:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TikToken.sol\":7826:7999  function getHalvingCount() external view returns (uint256) {... */\n    tag_57:\n        /* \"contracts/TikToken.sol\":7876:7883  uint256 */\n      0x00\n        /* \"contracts/TikToken.sol\":7919:7920  1 */\n      0x01\n        /* \"contracts/TikToken.sol\":7903:7916  _halvingCount */\n      sload(0x08)\n        /* \"contracts/TikToken.sol\":7903:7920  _halvingCount - 1 */\n      tag_172\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_172:\n        /* \"contracts/TikToken.sol\":7896:7920  return _halvingCount - 1 */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":7826:7999  function getHalvingCount() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_116\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_176\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_177\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_193\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8191:8193   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8173:8194   */\n      mstore\n        /* \"#utility.yul\":8230:8232   */\n      0x25\n        /* \"#utility.yul\":8210:8228   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8203:8233   */\n      mstore\n        /* \"#utility.yul\":8269:8303   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":8249:8267   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8242:8304   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":8320:8338   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8313:8348   */\n      mstore\n        /* \"#utility.yul\":8365:8384   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_123\n        /* \"#utility.yul\":7989:8390   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_116\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/TikToken.sol\":4545:7335  function batchMint(address[] calldata accounts, uint256[] calldata followers, uint256[] calldata ids) external onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/TikToken.sol\":4685:4720  accounts.length == followers.length */\n      dup5\n      dup4\n      eq\n        /* \"contracts/TikToken.sol\":4677:4748  require(accounts.length == followers.length, \"Mismatched input arrays\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8597:8599   */\n      0x20\n        /* \"contracts/TikToken.sol\":4677:4748  require(accounts.length == followers.length, \"Mismatched input arrays\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8579:8600   */\n      mstore\n        /* \"#utility.yul\":8636:8638   */\n      0x17\n        /* \"#utility.yul\":8616:8634   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8609:8639   */\n      mstore\n      shl(0x48, 0x4d69736d61746368656420696e70757420617272617973)\n        /* \"#utility.yul\":8655:8673   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8648:8701   */\n      mstore\n        /* \"#utility.yul\":8718:8736   */\n      0x64\n      add\n        /* \"contracts/TikToken.sol\":4677:4748  require(accounts.length == followers.length, \"Mismatched input arrays\") */\n      tag_123\n        /* \"#utility.yul\":8395:8742   */\n      jump\n        /* \"contracts/TikToken.sol\":4677:4748  require(accounts.length == followers.length, \"Mismatched input arrays\") */\n    tag_204:\n        /* \"contracts/TikToken.sol\":4767:4796  accounts.length == ids.length */\n      dup5\n      dup2\n      eq\n        /* \"contracts/TikToken.sol\":4759:4824  require(accounts.length == ids.length, \"Mismatched input arrays\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8597:8599   */\n      0x20\n        /* \"contracts/TikToken.sol\":4759:4824  require(accounts.length == ids.length, \"Mismatched input arrays\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8579:8600   */\n      mstore\n        /* \"#utility.yul\":8636:8638   */\n      0x17\n        /* \"#utility.yul\":8616:8634   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8609:8639   */\n      mstore\n      shl(0x48, 0x4d69736d61746368656420696e70757420617272617973)\n        /* \"#utility.yul\":8655:8673   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8648:8701   */\n      mstore\n        /* \"#utility.yul\":8718:8736   */\n      0x64\n      add\n        /* \"contracts/TikToken.sol\":4759:4824  require(accounts.length == ids.length, \"Mismatched input arrays\") */\n      tag_123\n        /* \"#utility.yul\":8395:8742   */\n      jump\n        /* \"contracts/TikToken.sol\":4759:4824  require(accounts.length == ids.length, \"Mismatched input arrays\") */\n    tag_207:\n        /* \"contracts/TikToken.sol\":4842:4851  uint256 i */\n      0x00\n        /* \"contracts/TikToken.sol\":4837:7328  for (uint256 i = 0; i < accounts.length; i++) {... */\n    tag_209:\n        /* \"contracts/TikToken.sol\":4857:4876  i < accounts.length */\n      dup6\n      dup2\n      lt\n        /* \"contracts/TikToken.sol\":4837:7328  for (uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"contracts/TikToken.sol\":4925:4926  0 */\n      0x00\n        /* \"contracts/TikToken.sol\":4906:4922  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":4906:4926  _remainingSupply > 0 */\n      gt\n        /* \"contracts/TikToken.sol\":4898:4953  require(_remainingSupply > 0, \"No more tokens to mint\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5177:5179   */\n      0x20\n        /* \"contracts/TikToken.sol\":4898:4953  require(_remainingSupply > 0, \"No more tokens to mint\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5159:5180   */\n      mstore\n        /* \"#utility.yul\":5216:5218   */\n      0x16\n        /* \"#utility.yul\":5196:5214   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5189:5219   */\n      mstore\n      shl(0x52, 0x139bc81b5bdc99481d1bdad95b9cc81d1bc81b5a5b9d)\n        /* \"#utility.yul\":5235:5253   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5228:5280   */\n      mstore\n        /* \"#utility.yul\":5297:5315   */\n      0x64\n      add\n        /* \"contracts/TikToken.sol\":4898:4953  require(_remainingSupply > 0, \"No more tokens to mint\") */\n      tag_123\n        /* \"#utility.yul\":4975:5321   */\n      jump\n        /* \"contracts/TikToken.sol\":4898:4953  require(_remainingSupply > 0, \"No more tokens to mint\") */\n    tag_212:\n        /* \"contracts/TikToken.sol\":5001:5008  _minted */\n      0x09\n        /* \"contracts/TikToken.sol\":5001:5016  _minted[ids[i]] */\n      0x00\n        /* \"contracts/TikToken.sol\":5009:5012  ids */\n      dup5\n      dup5\n        /* \"contracts/TikToken.sol\":5013:5014  i */\n      dup5\n        /* \"contracts/TikToken.sol\":5009:5015  ids[i] */\n      dup2\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_216\n      jump\t// in\n    tag_215:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/TikToken.sol\":5001:5016  _minted[ids[i]] */\n      dup4\n      mstore\n      pop\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/TikToken.sol\":5000:5016  !_minted[ids[i]] */\n      iszero\n        /* \"contracts/TikToken.sol\":4992:5051  require(!_minted[ids[i]], \"User has already minted tokens\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5528:5530   */\n      0x20\n        /* \"contracts/TikToken.sol\":4992:5051  require(!_minted[ids[i]], \"User has already minted tokens\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5510:5531   */\n      mstore\n        /* \"#utility.yul\":5567:5569   */\n      0x1e\n        /* \"#utility.yul\":5547:5565   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5540:5570   */\n      mstore\n        /* \"#utility.yul\":5606:5638   */\n      0x557365722068617320616c7265616479206d696e74656420746f6b656e730000\n        /* \"#utility.yul\":5586:5604   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5579:5639   */\n      mstore\n        /* \"#utility.yul\":5656:5674   */\n      0x64\n      add\n        /* \"contracts/TikToken.sol\":4992:5051  require(!_minted[ids[i]], \"User has already minted tokens\") */\n      tag_123\n        /* \"#utility.yul\":5326:5680   */\n      jump\n        /* \"contracts/TikToken.sol\":4992:5051  require(!_minted[ids[i]], \"User has already minted tokens\") */\n    tag_217:\n        /* \"contracts/TikToken.sol\":5104:5124  uint256 amountToMint */\n      0x00\n        /* \"contracts/TikToken.sol\":5168:5182  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":5151:5165  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":5143:5147  1000 */\n      0x03e8\n        /* \"contracts/TikToken.sol\":5128:5137  followers */\n      dup9\n      dup9\n        /* \"contracts/TikToken.sol\":5138:5139  i */\n      dup7\n        /* \"contracts/TikToken.sol\":5128:5140  followers[i] */\n      dup2\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_216\n      jump\t// in\n    tag_220:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/TikToken.sol\":5128:5147  followers[i] / 1000 */\n      tag_221\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_221:\n        /* \"contracts/TikToken.sol\":5127:5165  (followers[i] / 1000) * _currentReward */\n      tag_222\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_222:\n        /* \"contracts/TikToken.sol\":5127:5182  (followers[i] / 1000) * _currentReward + _currentReward */\n      tag_223\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_223:\n        /* \"contracts/TikToken.sol\":5104:5182  uint256 amountToMint = (followers[i] / 1000) * _currentReward + _currentReward */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":5242:5261  uint256 nextHalving */\n      0x00\n        /* \"contracts/TikToken.sol\":5287:5300  _halvingCount */\n      sload(0x08)\n        /* \"contracts/TikToken.sol\":5282:5283  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":5282:5300  2 ** _halvingCount */\n      tag_224\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_224:\n        /* \"contracts/TikToken.sol\":5264:5301  _initialSupply / (2 ** _halvingCount) */\n      tag_225\n      swap1\n        /* \"contracts/TikToken.sol\":403:418  0.8192 * 10**24 */\n      0xad78ebc5ac6200000000\n        /* \"contracts/TikToken.sol\":5264:5301  _initialSupply / (2 ** _halvingCount) */\n      tag_129\n      jump\t// in\n    tag_225:\n        /* \"contracts/TikToken.sol\":5242:5301  uint256 nextHalving = _initialSupply / (2 ** _halvingCount) */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":5349:5372  uint256 amountToHalving */\n      0x00\n        /* \"contracts/TikToken.sol\":5394:5405  nextHalving */\n      dup2\n        /* \"contracts/TikToken.sol\":5375:5391  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":5375:5405  _remainingSupply - nextHalving */\n      tag_226\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_226:\n        /* \"contracts/TikToken.sol\":5349:5405  uint256 amountToHalving = _remainingSupply - nextHalving */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":5592:5604  amountToMint */\n      dup3\n        /* \"contracts/TikToken.sol\":5573:5588  amountToHalving */\n      dup2\n        /* \"contracts/TikToken.sol\":5573:5604  amountToHalving <= amountToMint */\n      gt\n      iszero\n        /* \"contracts/TikToken.sol\":5573:5635  amountToHalving <= amountToMint && _currentReward > _minReward */\n      dup1\n      iszero\n      tag_227\n      jumpi\n      pop\n        /* \"contracts/TikToken.sol\":525:560  0.000000000000000000000001 * 10**24 */\n      0x01\n        /* \"contracts/TikToken.sol\":5608:5622  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":5608:5635  _currentReward > _minReward */\n      gt\n        /* \"contracts/TikToken.sol\":5573:5635  amountToHalving <= amountToMint && _currentReward > _minReward */\n    tag_227:\n        /* \"contracts/TikToken.sol\":5569:6606  if (amountToHalving <= amountToMint && _currentReward > _minReward) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"contracts/TikToken.sol\":5671:5686  amountToHalving */\n      dup1\n        /* \"contracts/TikToken.sol\":5656:5686  amountToMint = amountToHalving */\n      swap3\n      pop\n        /* \"contracts/TikToken.sol\":5755:5781  uint256 remainingFollowers */\n      0x00\n        /* \"contracts/TikToken.sol\":5823:5837  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":5800:5812  amountToMint */\n      dup5\n        /* \"contracts/TikToken.sol\":5815:5819  1000 */\n      0x03e8\n        /* \"contracts/TikToken.sol\":5800:5819  amountToMint * 1000 */\n      tag_229\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_229:\n        /* \"contracts/TikToken.sol\":5800:5838  amountToMint * 1000 / (_currentReward) */\n      tag_230\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_230:\n        /* \"contracts/TikToken.sol\":5784:5793  followers */\n      dup10\n      dup10\n        /* \"contracts/TikToken.sol\":5794:5795  i */\n      dup8\n        /* \"contracts/TikToken.sol\":5784:5796  followers[i] */\n      dup2\n      dup2\n      lt\n      tag_232\n      jumpi\n      tag_232\n      tag_216\n      jump\t// in\n    tag_232:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/TikToken.sol\":5784:5839  followers[i] - (amountToMint * 1000 / (_currentReward)) */\n      tag_233\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_233:\n        /* \"contracts/TikToken.sol\":5755:5839  uint256 remainingFollowers = followers[i] - (amountToMint * 1000 / (_currentReward)) */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":5900:5924  uint256 additionalReward */\n      0x00\n        /* \"contracts/TikToken.sol\":5998:5999  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":5981:5995  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":5981:5999  _currentReward / 2 */\n      tag_234\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_234:\n        /* \"contracts/TikToken.sol\":5975:5976  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":5958:5972  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":5958:5976  _currentReward / 2 */\n      tag_235\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_235:\n        /* \"contracts/TikToken.sol\":5928:5953  remainingFollowers / 1000 */\n      tag_236\n        /* \"contracts/TikToken.sol\":5949:5953  1000 */\n      0x03e8\n        /* \"contracts/TikToken.sol\":5928:5946  remainingFollowers */\n      dup6\n        /* \"contracts/TikToken.sol\":5928:5953  remainingFollowers / 1000 */\n      tag_129\n      jump\t// in\n    tag_236:\n        /* \"contracts/TikToken.sol\":5927:5977  (remainingFollowers / 1000) * (_currentReward / 2) */\n      tag_237\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_237:\n        /* \"contracts/TikToken.sol\":5927:6000  (remainingFollowers / 1000) * (_currentReward / 2) + (_currentReward / 2) */\n      tag_238\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_238:\n        /* \"contracts/TikToken.sol\":5900:6000  uint256 additionalReward = (remainingFollowers / 1000) * (_currentReward / 2) + (_currentReward / 2) */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":6208:6223  nextHalving / 2 */\n      tag_239\n        /* \"contracts/TikToken.sol\":6222:6223  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":6208:6219  nextHalving */\n      dup6\n        /* \"contracts/TikToken.sol\":6208:6223  nextHalving / 2 */\n      tag_129\n      jump\t// in\n    tag_239:\n        /* \"contracts/TikToken.sol\":6188:6204  additionalReward */\n      dup2\n        /* \"contracts/TikToken.sol\":6188:6223  additionalReward >= nextHalving / 2 */\n      lt\n        /* \"contracts/TikToken.sol\":6184:6492  if (additionalReward >= nextHalving / 2) {... */\n      tag_240\n      jumpi\n        /* \"contracts/TikToken.sol\":6287:6301  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":6268:6283  nextHalving / 2 */\n      tag_241\n        /* \"contracts/TikToken.sol\":6282:6283  2 */\n      0x02\n        /* \"contracts/TikToken.sol\":6268:6279  nextHalving */\n      dup7\n        /* \"contracts/TikToken.sol\":6268:6283  nextHalving / 2 */\n      tag_129\n      jump\t// in\n    tag_241:\n        /* \"contracts/TikToken.sol\":6267:6301  (nextHalving / 2) - _currentReward */\n      tag_242\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_242:\n        /* \"contracts/TikToken.sol\":6248:6301  additionalReward = (nextHalving / 2) - _currentReward */\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":6184:6492  if (additionalReward >= nextHalving / 2) {... */\n    tag_240:\n        /* \"contracts/TikToken.sol\":6510:6542  amountToMint += additionalReward */\n      tag_243\n        /* \"contracts/TikToken.sol\":6526:6542  additionalReward */\n      dup2\n        /* \"contracts/TikToken.sol\":6510:6542  amountToMint += additionalReward */\n      dup7\n      tag_133\n      jump\t// in\n    tag_243:\n      swap5\n      pop\n        /* \"contracts/TikToken.sol\":5637:6606  {... */\n      pop\n      pop\n        /* \"contracts/TikToken.sol\":5569:6606  if (amountToHalving <= amountToMint && _currentReward > _minReward) {... */\n    tag_228:\n        /* \"contracts/TikToken.sol\":6695:6707  amountToMint */\n      dup3\n        /* \"contracts/TikToken.sol\":6676:6692  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":6676:6707  _remainingSupply < amountToMint */\n      lt\n        /* \"contracts/TikToken.sol\":6672:6775  if (_remainingSupply < amountToMint) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"contracts/TikToken.sol\":6743:6759  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":6728:6759  amountToMint = _remainingSupply */\n      swap3\n      pop\n        /* \"contracts/TikToken.sol\":6672:6775  if (_remainingSupply < amountToMint) {... */\n    tag_244:\n        /* \"contracts/TikToken.sol\":6867:6899  _mint(accounts[i], amountToMint) */\n      tag_245\n        /* \"contracts/TikToken.sol\":6873:6881  accounts */\n      dup11\n      dup11\n        /* \"contracts/TikToken.sol\":6882:6883  i */\n      dup7\n        /* \"contracts/TikToken.sol\":6873:6884  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_247\n      tag_216\n      jump\t// in\n    tag_247:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_248:\n        /* \"contracts/TikToken.sol\":6886:6898  amountToMint */\n      dup5\n        /* \"contracts/TikToken.sol\":6867:6872  _mint */\n      tag_156\n        /* \"contracts/TikToken.sol\":6867:6899  _mint(accounts[i], amountToMint) */\n      jump\t// in\n    tag_245:\n        /* \"contracts/TikToken.sol\":6934:6946  amountToMint */\n      dup3\n        /* \"contracts/TikToken.sol\":6914:6930  _remainingSupply */\n      0x06\n      0x00\n        /* \"contracts/TikToken.sol\":6914:6946  _remainingSupply -= amountToMint */\n      dup3\n      dup3\n      sload\n      tag_249\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_249:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/TikToken.sol\":6979:6983  true */\n      0x01\n      swap1\n      pop\n        /* \"contracts/TikToken.sol\":6961:6968  _minted */\n      0x09\n        /* \"contracts/TikToken.sol\":6961:6976  _minted[ids[i]] */\n      0x00\n        /* \"contracts/TikToken.sol\":6969:6972  ids */\n      dup9\n      dup9\n        /* \"contracts/TikToken.sol\":6973:6974  i */\n      dup9\n        /* \"contracts/TikToken.sol\":6969:6975  ids[i] */\n      dup2\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_251\n      tag_216\n      jump\t// in\n    tag_251:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/TikToken.sol\":6961:6976  _minted[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TikToken.sol\":6961:6983  _minted[ids[i]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TikToken.sol\":7183:7194  nextHalving */\n      dup2\n        /* \"contracts/TikToken.sol\":7163:7179  _remainingSupply */\n      sload(0x06)\n        /* \"contracts/TikToken.sol\":7163:7194  _remainingSupply <= nextHalving */\n      gt\n      iszero\n        /* \"contracts/TikToken.sol\":7163:7225  _remainingSupply <= nextHalving && _currentReward > _minReward */\n      dup1\n      iszero\n      tag_252\n      jumpi\n      pop\n        /* \"contracts/TikToken.sol\":525:560  0.000000000000000000000001 * 10**24 */\n      0x01\n        /* \"contracts/TikToken.sol\":7198:7212  _currentReward */\n      sload(0x07)\n        /* \"contracts/TikToken.sol\":7198:7225  _currentReward > _minReward */\n      gt\n        /* \"contracts/TikToken.sol\":7163:7225  _remainingSupply <= nextHalving && _currentReward > _minReward */\n    tag_252:\n        /* \"contracts/TikToken.sol\":7159:7317  if (_remainingSupply <= nextHalving && _currentReward > _minReward) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"contracts/TikToken.sol\":7264:7266  10 */\n      0x0a\n        /* \"contracts/TikToken.sol\":7246:7260  _currentReward */\n      0x07\n      0x00\n        /* \"contracts/TikToken.sol\":7246:7266  _currentReward /= 10 */\n      dup3\n      dup3\n      sload\n      tag_254\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_254:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/TikToken.sol\":7286:7299  _halvingCount */\n      0x08\n        /* \"contracts/TikToken.sol\":7286:7301  _halvingCount++ */\n      dup1\n      sload\n      swap1\n        /* \"contracts/TikToken.sol\":7286:7299  _halvingCount */\n      0x00\n        /* \"contracts/TikToken.sol\":7286:7301  _halvingCount++ */\n      tag_255\n      dup4\n      tag_162\n      jump\t// in\n    tag_255:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/TikToken.sol\":7159:7317  if (_remainingSupply <= nextHalving && _currentReward > _minReward) {... */\n    tag_253:\n        /* \"contracts/TikToken.sol\":4883:7328  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/TikToken.sol\":4878:4881  i++ */\n      dup1\n      dup1\n      tag_256\n      swap1\n      tag_162\n      jump\t// in\n    tag_256:\n      swap2\n      pop\n      pop\n        /* \"contracts/TikToken.sol\":4837:7328  for (uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"contracts/TikToken.sol\":4545:7335  function batchMint(address[] calldata accounts, uint256[] calldata followers, uint256[] calldata ids) external onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9081:9083   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9063:9084   */\n      mstore\n        /* \"#utility.yul\":9120:9122   */\n      0x26\n        /* \"#utility.yul\":9100:9118   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9093:9123   */\n      mstore\n        /* \"#utility.yul\":9159:9193   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9139:9157   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9132:9194   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":9210:9228   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9203:9239   */\n      mstore\n        /* \"#utility.yul\":9256:9275   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_123\n        /* \"#utility.yul\":8879:9281   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_266\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9488:9490   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9470:9491   */\n      mstore\n        /* \"#utility.yul\":9527:9529   */\n      0x24\n        /* \"#utility.yul\":9507:9525   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9500:9530   */\n      mstore\n        /* \"#utility.yul\":9566:9600   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":9546:9564   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9539:9601   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9617:9635   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9610:9644   */\n      mstore\n        /* \"#utility.yul\":9661:9680   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_123\n        /* \"#utility.yul\":9286:9686   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9893:9895   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9875:9896   */\n      mstore\n        /* \"#utility.yul\":9932:9934   */\n      0x22\n        /* \"#utility.yul\":9912:9930   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9905:9935   */\n      mstore\n        /* \"#utility.yul\":9971:10005   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":9951:9969   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9944:10006   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":10022:10040   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10015:10047   */\n      mstore\n        /* \"#utility.yul\":10064:10083   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_123\n        /* \"#utility.yul\":9691:10089   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":762:787   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":735:753   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10296:10298   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10278:10299   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10315:10333   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10308:10338   */\n      mstore\n        /* \"#utility.yul\":10374:10408   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10354:10372   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10347:10409   */\n      mstore\n        /* \"#utility.yul\":10426:10444   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_123\n        /* \"#utility.yul\":10094:10450   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10657:10659   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10639:10660   */\n      mstore\n        /* \"#utility.yul\":10696:10698   */\n      0x1f\n        /* \"#utility.yul\":10676:10694   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10669:10699   */\n      mstore\n        /* \"#utility.yul\":10735:10768   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":10715:10733   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10708:10769   */\n      mstore\n        /* \"#utility.yul\":10786:10804   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_123\n        /* \"#utility.yul\":10455:10810   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_288\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_288:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":762:787   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":735:753   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_298\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11017:11019   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10999:11020   */\n      mstore\n        /* \"#utility.yul\":11056:11058   */\n      0x1d\n        /* \"#utility.yul\":11036:11054   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11029:11059   */\n      mstore\n        /* \"#utility.yul\":11095:11126   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":11075:11093   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11068:11127   */\n      mstore\n        /* \"#utility.yul\":11144:11162   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_123\n        /* \"#utility.yul\":10815:11168   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11375:11377   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11357:11378   */\n      mstore\n        /* \"#utility.yul\":11414:11416   */\n      0x25\n        /* \"#utility.yul\":11394:11412   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11387:11417   */\n      mstore\n        /* \"#utility.yul\":11453:11487   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":11433:11451   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11426:11488   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":11504:11522   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11497:11532   */\n      mstore\n        /* \"#utility.yul\":11549:11568   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n        /* \"#utility.yul\":11173:11574   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11781:11783   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11763:11784   */\n      mstore\n        /* \"#utility.yul\":11820:11822   */\n      0x23\n        /* \"#utility.yul\":11800:11818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11793:11823   */\n      mstore\n        /* \"#utility.yul\":11859:11893   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":11839:11857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11832:11894   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":11910:11928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11903:11936   */\n      mstore\n        /* \"#utility.yul\":11953:11972   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n        /* \"#utility.yul\":11579:11978   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12185:12187   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12167:12188   */\n      mstore\n        /* \"#utility.yul\":12224:12226   */\n      0x26\n        /* \"#utility.yul\":12204:12222   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12197:12227   */\n      mstore\n        /* \"#utility.yul\":12263:12297   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12243:12261   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12236:12298   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":12314:12332   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12307:12343   */\n      mstore\n        /* \"#utility.yul\":12360:12379   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_123\n        /* \"#utility.yul\":11983:12385   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_307:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":762:787   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":735:753   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_298\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:611   */\n    tag_29:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_322:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_322)\n    tag_324:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_325:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":798:971   */\n    tag_315:\n        /* \"#utility.yul\":866:886   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":915:946   */\n      dup2\n      and\n        /* \"#utility.yul\":905:947   */\n      dup2\n      eq\n        /* \"#utility.yul\":895:965   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":958:959   */\n      dup1\n        /* \"#utility.yul\":951:963   */\n      revert\n        /* \"#utility.yul\":895:965   */\n    tag_328:\n        /* \"#utility.yul\":798:971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":976:1230   */\n    tag_36:\n        /* \"#utility.yul\":1044:1050   */\n      0x00\n        /* \"#utility.yul\":1052:1058   */\n      dup1\n        /* \"#utility.yul\":1105:1107   */\n      0x40\n        /* \"#utility.yul\":1093:1102   */\n      dup4\n        /* \"#utility.yul\":1084:1091   */\n      dup6\n        /* \"#utility.yul\":1080:1103   */\n      sub\n        /* \"#utility.yul\":1076:1108   */\n      slt\n        /* \"#utility.yul\":1073:1125   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":1121:1122   */\n      0x00\n        /* \"#utility.yul\":1118:1119   */\n      dup1\n        /* \"#utility.yul\":1111:1123   */\n      revert\n        /* \"#utility.yul\":1073:1125   */\n    tag_330:\n        /* \"#utility.yul\":1144:1173   */\n      tag_331\n        /* \"#utility.yul\":1163:1172   */\n      dup4\n        /* \"#utility.yul\":1144:1173   */\n      tag_315\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1134:1173   */\n      swap5\n        /* \"#utility.yul\":1220:1222   */\n      0x20\n        /* \"#utility.yul\":1205:1223   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1192:1224   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":976:1230   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1749   */\n    tag_42:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_334:\n        /* \"#utility.yul\":1612:1641   */\n      tag_335\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_315\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1602:1641   */\n      swap6\n        /* \"#utility.yul\":1688:1690   */\n      0x20\n        /* \"#utility.yul\":1673:1691   */\n      dup6\n      add\n        /* \"#utility.yul\":1660:1692   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":1739:1741   */\n      0x40\n        /* \"#utility.yul\":1724:1742   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":1711:1743   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1427:1749   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:2082   */\n    tag_49:\n        /* \"#utility.yul\":1831:1837   */\n      0x00\n        /* \"#utility.yul\":1839:1845   */\n      dup1\n        /* \"#utility.yul\":1847:1853   */\n      0x00\n        /* \"#utility.yul\":1900:1902   */\n      0x60\n        /* \"#utility.yul\":1888:1897   */\n      dup5\n        /* \"#utility.yul\":1879:1886   */\n      dup7\n        /* \"#utility.yul\":1875:1898   */\n      sub\n        /* \"#utility.yul\":1871:1903   */\n      slt\n        /* \"#utility.yul\":1868:1920   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":1916:1917   */\n      0x00\n        /* \"#utility.yul\":1913:1914   */\n      dup1\n        /* \"#utility.yul\":1906:1918   */\n      revert\n        /* \"#utility.yul\":1868:1920   */\n    tag_337:\n        /* \"#utility.yul\":1939:1968   */\n      tag_338\n        /* \"#utility.yul\":1958:1967   */\n      dup5\n        /* \"#utility.yul\":1939:1968   */\n      tag_315\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1929:1968   */\n      swap3\n      pop\n        /* \"#utility.yul\":1987:2025   */\n      tag_339\n        /* \"#utility.yul\":2021:2023   */\n      0x20\n        /* \"#utility.yul\":2010:2019   */\n      dup6\n        /* \"#utility.yul\":2006:2024   */\n      add\n        /* \"#utility.yul\":1987:2025   */\n      tag_315\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1977:2025   */\n      swap2\n      pop\n        /* \"#utility.yul\":2072:2074   */\n      0x40\n        /* \"#utility.yul\":2061:2070   */\n      dup5\n        /* \"#utility.yul\":2057:2075   */\n      add\n        /* \"#utility.yul\":2044:2076   */\n      calldataload\n        /* \"#utility.yul\":2034:2076   */\n      swap1\n      pop\n        /* \"#utility.yul\":1754:2082   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2276:2462   */\n    tag_65:\n        /* \"#utility.yul\":2335:2341   */\n      0x00\n        /* \"#utility.yul\":2388:2390   */\n      0x20\n        /* \"#utility.yul\":2376:2385   */\n      dup3\n        /* \"#utility.yul\":2367:2374   */\n      dup5\n        /* \"#utility.yul\":2363:2386   */\n      sub\n        /* \"#utility.yul\":2359:2391   */\n      slt\n        /* \"#utility.yul\":2356:2408   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2356:2408   */\n    tag_342:\n        /* \"#utility.yul\":2427:2456   */\n      tag_343\n        /* \"#utility.yul\":2446:2455   */\n      dup3\n        /* \"#utility.yul\":2427:2456   */\n      tag_315\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2417:2456   */\n      swap4\n        /* \"#utility.yul\":2276:2462   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2675:3042   */\n    tag_316:\n        /* \"#utility.yul\":2738:2746   */\n      0x00\n        /* \"#utility.yul\":2748:2754   */\n      dup1\n        /* \"#utility.yul\":2802:2805   */\n      dup4\n        /* \"#utility.yul\":2795:2799   */\n      0x1f\n        /* \"#utility.yul\":2787:2793   */\n      dup5\n        /* \"#utility.yul\":2783:2800   */\n      add\n        /* \"#utility.yul\":2779:2806   */\n      slt\n        /* \"#utility.yul\":2769:2824   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2820:2821   */\n      0x00\n        /* \"#utility.yul\":2817:2818   */\n      dup1\n        /* \"#utility.yul\":2810:2822   */\n      revert\n        /* \"#utility.yul\":2769:2824   */\n    tag_346:\n      pop\n        /* \"#utility.yul\":2843:2863   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":2886:2904   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2875:2905   */\n      dup2\n      gt\n        /* \"#utility.yul\":2872:2922   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2918:2919   */\n      0x00\n        /* \"#utility.yul\":2915:2916   */\n      dup1\n        /* \"#utility.yul\":2908:2920   */\n      revert\n        /* \"#utility.yul\":2872:2922   */\n    tag_347:\n        /* \"#utility.yul\":2955:2959   */\n      0x20\n        /* \"#utility.yul\":2947:2953   */\n      dup4\n        /* \"#utility.yul\":2943:2960   */\n      add\n        /* \"#utility.yul\":2931:2960   */\n      swap2\n      pop\n        /* \"#utility.yul\":3015:3018   */\n      dup4\n        /* \"#utility.yul\":3008:3012   */\n      0x20\n        /* \"#utility.yul\":2998:3004   */\n      dup3\n        /* \"#utility.yul\":2995:2996   */\n      0x05\n        /* \"#utility.yul\":2991:3005   */\n      shl\n        /* \"#utility.yul\":2983:2989   */\n      dup6\n        /* \"#utility.yul\":2979:3006   */\n      add\n        /* \"#utility.yul\":2975:3013   */\n      add\n        /* \"#utility.yul\":2972:3019   */\n      gt\n        /* \"#utility.yul\":2969:3036   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":3032:3033   */\n      0x00\n        /* \"#utility.yul\":3029:3030   */\n      dup1\n        /* \"#utility.yul\":3022:3034   */\n      revert\n        /* \"#utility.yul\":2969:3036   */\n    tag_348:\n        /* \"#utility.yul\":2675:3042   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3047:4135   */\n    tag_87:\n        /* \"#utility.yul\":3205:3211   */\n      0x00\n        /* \"#utility.yul\":3213:3219   */\n      dup1\n        /* \"#utility.yul\":3221:3227   */\n      0x00\n        /* \"#utility.yul\":3229:3235   */\n      dup1\n        /* \"#utility.yul\":3237:3243   */\n      0x00\n        /* \"#utility.yul\":3245:3251   */\n      dup1\n        /* \"#utility.yul\":3298:3300   */\n      0x60\n        /* \"#utility.yul\":3286:3295   */\n      dup8\n        /* \"#utility.yul\":3277:3284   */\n      dup10\n        /* \"#utility.yul\":3273:3296   */\n      sub\n        /* \"#utility.yul\":3269:3301   */\n      slt\n        /* \"#utility.yul\":3266:3318   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3314:3315   */\n      0x00\n        /* \"#utility.yul\":3311:3312   */\n      dup1\n        /* \"#utility.yul\":3304:3316   */\n      revert\n        /* \"#utility.yul\":3266:3318   */\n    tag_350:\n        /* \"#utility.yul\":3354:3363   */\n      dup7\n        /* \"#utility.yul\":3341:3364   */\n      calldataload\n        /* \"#utility.yul\":3383:3401   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3424:3426   */\n      dup1\n        /* \"#utility.yul\":3416:3422   */\n      dup3\n        /* \"#utility.yul\":3413:3427   */\n      gt\n        /* \"#utility.yul\":3410:3444   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3440:3441   */\n      0x00\n        /* \"#utility.yul\":3437:3438   */\n      dup1\n        /* \"#utility.yul\":3430:3442   */\n      revert\n        /* \"#utility.yul\":3410:3444   */\n    tag_351:\n        /* \"#utility.yul\":3479:3549   */\n      tag_352\n        /* \"#utility.yul\":3541:3548   */\n      dup11\n        /* \"#utility.yul\":3532:3538   */\n      dup4\n        /* \"#utility.yul\":3521:3530   */\n      dup12\n        /* \"#utility.yul\":3517:3539   */\n      add\n        /* \"#utility.yul\":3479:3549   */\n      tag_316\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3568:3576   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":3453:3549   */\n      swap7\n      pop\n        /* \"#utility.yul\":3656:3658   */\n      0x20\n        /* \"#utility.yul\":3641:3659   */\n      dup10\n      add\n        /* \"#utility.yul\":3628:3660   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3672:3688   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3669:3705   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":3701:3702   */\n      0x00\n        /* \"#utility.yul\":3698:3699   */\n      dup1\n        /* \"#utility.yul\":3691:3703   */\n      revert\n        /* \"#utility.yul\":3669:3705   */\n    tag_353:\n        /* \"#utility.yul\":3740:3812   */\n      tag_354\n        /* \"#utility.yul\":3804:3811   */\n      dup11\n        /* \"#utility.yul\":3793:3801   */\n      dup4\n        /* \"#utility.yul\":3782:3791   */\n      dup12\n        /* \"#utility.yul\":3778:3802   */\n      add\n        /* \"#utility.yul\":3740:3812   */\n      tag_316\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3831:3839   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":3714:3812   */\n      swap5\n      pop\n        /* \"#utility.yul\":3919:3921   */\n      0x40\n        /* \"#utility.yul\":3904:3922   */\n      dup10\n      add\n        /* \"#utility.yul\":3891:3923   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3935:3951   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3932:3968   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":3964:3965   */\n      0x00\n        /* \"#utility.yul\":3961:3962   */\n      dup1\n        /* \"#utility.yul\":3954:3966   */\n      revert\n        /* \"#utility.yul\":3932:3968   */\n    tag_355:\n      pop\n        /* \"#utility.yul\":4003:4075   */\n      tag_356\n        /* \"#utility.yul\":4067:4074   */\n      dup10\n        /* \"#utility.yul\":4056:4064   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup11\n        /* \"#utility.yul\":4041:4065   */\n      add\n        /* \"#utility.yul\":4003:4075   */\n      tag_316\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3047:4135   */\n      swap8\n      swap11\n      swap7\n      swap10\n      pop\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":4094:4102   */\n      swap4\n      swap5\n        /* \"#utility.yul\":3047:4135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4140:4400   */\n    tag_94:\n        /* \"#utility.yul\":4208:4214   */\n      0x00\n        /* \"#utility.yul\":4216:4222   */\n      dup1\n        /* \"#utility.yul\":4269:4271   */\n      0x40\n        /* \"#utility.yul\":4257:4266   */\n      dup4\n        /* \"#utility.yul\":4248:4255   */\n      dup6\n        /* \"#utility.yul\":4244:4267   */\n      sub\n        /* \"#utility.yul\":4240:4272   */\n      slt\n        /* \"#utility.yul\":4237:4289   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":4285:4286   */\n      0x00\n        /* \"#utility.yul\":4282:4283   */\n      dup1\n        /* \"#utility.yul\":4275:4287   */\n      revert\n        /* \"#utility.yul\":4237:4289   */\n    tag_358:\n        /* \"#utility.yul\":4308:4337   */\n      tag_359\n        /* \"#utility.yul\":4327:4336   */\n      dup4\n        /* \"#utility.yul\":4308:4337   */\n      tag_315\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4298:4337   */\n      swap2\n      pop\n        /* \"#utility.yul\":4356:4394   */\n      tag_360\n        /* \"#utility.yul\":4390:4392   */\n      0x20\n        /* \"#utility.yul\":4379:4388   */\n      dup5\n        /* \"#utility.yul\":4375:4393   */\n      add\n        /* \"#utility.yul\":4356:4394   */\n      tag_315\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4346:4394   */\n      swap1\n      pop\n        /* \"#utility.yul\":4140:4400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4405:4585   */\n    tag_99:\n        /* \"#utility.yul\":4464:4470   */\n      0x00\n        /* \"#utility.yul\":4517:4519   */\n      0x20\n        /* \"#utility.yul\":4505:4514   */\n      dup3\n        /* \"#utility.yul\":4496:4503   */\n      dup5\n        /* \"#utility.yul\":4492:4515   */\n      sub\n        /* \"#utility.yul\":4488:4520   */\n      slt\n        /* \"#utility.yul\":4485:4537   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":4533:4534   */\n      0x00\n        /* \"#utility.yul\":4530:4531   */\n      dup1\n        /* \"#utility.yul\":4523:4535   */\n      revert\n        /* \"#utility.yul\":4485:4537   */\n    tag_362:\n      pop\n        /* \"#utility.yul\":4556:4579   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4405:4585   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4590:4970   */\n    tag_107:\n        /* \"#utility.yul\":4669:4670   */\n      0x01\n        /* \"#utility.yul\":4665:4677   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4712:4724   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4733:4794   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":4787:4791   */\n      0x7f\n        /* \"#utility.yul\":4779:4785   */\n      dup3\n        /* \"#utility.yul\":4775:4792   */\n      and\n        /* \"#utility.yul\":4765:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4733:4794   */\n    tag_364:\n        /* \"#utility.yul\":4840:4842   */\n      0x20\n        /* \"#utility.yul\":4832:4838   */\n      dup3\n        /* \"#utility.yul\":4829:4843   */\n      lt\n        /* \"#utility.yul\":4809:4827   */\n      dup2\n        /* \"#utility.yul\":4806:4844   */\n      eq\n        /* \"#utility.yul\":4803:4964   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":4886:4896   */\n      0x4e487b71\n        /* \"#utility.yul\":4881:4884   */\n      0xe0\n        /* \"#utility.yul\":4877:4897   */\n      shl\n        /* \"#utility.yul\":4874:4875   */\n      0x00\n        /* \"#utility.yul\":4867:4898   */\n      mstore\n        /* \"#utility.yul\":4921:4925   */\n      0x22\n        /* \"#utility.yul\":4918:4919   */\n      0x04\n        /* \"#utility.yul\":4911:4926   */\n      mstore\n        /* \"#utility.yul\":4949:4953   */\n      0x24\n        /* \"#utility.yul\":4946:4947   */\n      0x00\n        /* \"#utility.yul\":4939:4954   */\n      revert\n        /* \"#utility.yul\":4803:4964   */\n    tag_365:\n      pop\n        /* \"#utility.yul\":4590:4970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5685:5812   */\n    tag_317:\n        /* \"#utility.yul\":5746:5756   */\n      0x4e487b71\n        /* \"#utility.yul\":5741:5744   */\n      0xe0\n        /* \"#utility.yul\":5737:5757   */\n      shl\n        /* \"#utility.yul\":5734:5735   */\n      0x00\n        /* \"#utility.yul\":5727:5758   */\n      mstore\n        /* \"#utility.yul\":5777:5781   */\n      0x11\n        /* \"#utility.yul\":5774:5775   */\n      0x04\n        /* \"#utility.yul\":5767:5782   */\n      mstore\n        /* \"#utility.yul\":5801:5805   */\n      0x24\n        /* \"#utility.yul\":5798:5799   */\n      0x00\n        /* \"#utility.yul\":5791:5806   */\n      revert\n        /* \"#utility.yul\":5817:6034   */\n    tag_129:\n        /* \"#utility.yul\":5857:5858   */\n      0x00\n        /* \"#utility.yul\":5883:5884   */\n      dup3\n        /* \"#utility.yul\":5873:6005   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5927:5937   */\n      0x4e487b71\n        /* \"#utility.yul\":5922:5925   */\n      0xe0\n        /* \"#utility.yul\":5918:5938   */\n      shl\n        /* \"#utility.yul\":5915:5916   */\n      0x00\n        /* \"#utility.yul\":5908:5939   */\n      mstore\n        /* \"#utility.yul\":5962:5966   */\n      0x12\n        /* \"#utility.yul\":5959:5960   */\n      0x04\n        /* \"#utility.yul\":5952:5967   */\n      mstore\n        /* \"#utility.yul\":5990:5994   */\n      0x24\n        /* \"#utility.yul\":5987:5988   */\n      0x00\n        /* \"#utility.yul\":5980:5995   */\n      revert\n        /* \"#utility.yul\":5873:6005   */\n    tag_370:\n      pop\n        /* \"#utility.yul\":6019:6028   */\n      div\n      swap1\n        /* \"#utility.yul\":5817:6034   */\n      jump\t// out\n        /* \"#utility.yul\":6039:6207   */\n    tag_131:\n        /* \"#utility.yul\":6079:6086   */\n      0x00\n        /* \"#utility.yul\":6145:6146   */\n      dup2\n        /* \"#utility.yul\":6141:6142   */\n      0x00\n        /* \"#utility.yul\":6137:6143   */\n      not\n        /* \"#utility.yul\":6133:6147   */\n      div\n        /* \"#utility.yul\":6130:6131   */\n      dup4\n        /* \"#utility.yul\":6127:6148   */\n      gt\n        /* \"#utility.yul\":6122:6123   */\n      dup3\n        /* \"#utility.yul\":6115:6124   */\n      iszero\n        /* \"#utility.yul\":6108:6125   */\n      iszero\n        /* \"#utility.yul\":6104:6149   */\n      and\n        /* \"#utility.yul\":6101:6172   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":6152:6170   */\n      tag_373\n      tag_317\n      jump\t// in\n    tag_373:\n      pop\n        /* \"#utility.yul\":6192:6201   */\n      mul\n      swap1\n        /* \"#utility.yul\":6039:6207   */\n      jump\t// out\n        /* \"#utility.yul\":6212:6340   */\n    tag_133:\n        /* \"#utility.yul\":6252:6255   */\n      0x00\n        /* \"#utility.yul\":6283:6284   */\n      dup3\n        /* \"#utility.yul\":6279:6285   */\n      not\n        /* \"#utility.yul\":6276:6277   */\n      dup3\n        /* \"#utility.yul\":6273:6286   */\n      gt\n        /* \"#utility.yul\":6270:6309   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":6289:6307   */\n      tag_376\n      tag_317\n      jump\t// in\n    tag_376:\n      pop\n        /* \"#utility.yul\":6325:6334   */\n      add\n      swap1\n        /* \"#utility.yul\":6212:6340   */\n      jump\t// out\n        /* \"#utility.yul\":6345:6767   */\n    tag_318:\n        /* \"#utility.yul\":6434:6435   */\n      0x01\n        /* \"#utility.yul\":6477:6482   */\n      dup2\n        /* \"#utility.yul\":6434:6435   */\n      dup2\n        /* \"#utility.yul\":6491:6761   */\n    tag_378:\n        /* \"#utility.yul\":6512:6519   */\n      dup1\n        /* \"#utility.yul\":6502:6510   */\n      dup6\n        /* \"#utility.yul\":6499:6520   */\n      gt\n        /* \"#utility.yul\":6491:6761   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6571:6575   */\n      dup2\n        /* \"#utility.yul\":6567:6568   */\n      0x00\n        /* \"#utility.yul\":6563:6569   */\n      not\n        /* \"#utility.yul\":6559:6576   */\n      div\n        /* \"#utility.yul\":6553:6557   */\n      dup3\n        /* \"#utility.yul\":6550:6577   */\n      gt\n        /* \"#utility.yul\":6547:6600   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":6580:6598   */\n      tag_382\n      tag_317\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":6630:6637   */\n      dup1\n        /* \"#utility.yul\":6620:6628   */\n      dup6\n        /* \"#utility.yul\":6616:6638   */\n      and\n        /* \"#utility.yul\":6613:6668   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":6650:6666   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":6613:6668   */\n    tag_383:\n        /* \"#utility.yul\":6729:6751   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":6689:6704   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":6491:6761   */\n      jump(tag_378)\n    tag_380:\n        /* \"#utility.yul\":6495:6498   */\n      pop\n        /* \"#utility.yul\":6345:6767   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6772:7578   */\n    tag_319:\n        /* \"#utility.yul\":6821:6826   */\n      0x00\n        /* \"#utility.yul\":6851:6859   */\n      dup3\n        /* \"#utility.yul\":6841:6921   */\n      tag_385\n      jumpi\n      pop\n        /* \"#utility.yul\":6892:6893   */\n      0x01\n        /* \"#utility.yul\":6906:6911   */\n      jump(tag_113)\n        /* \"#utility.yul\":6841:6921   */\n    tag_385:\n        /* \"#utility.yul\":6940:6944   */\n      dup2\n        /* \"#utility.yul\":6930:7006   */\n      tag_386\n      jumpi\n      pop\n        /* \"#utility.yul\":6977:6978   */\n      0x00\n        /* \"#utility.yul\":6991:6996   */\n      jump(tag_113)\n        /* \"#utility.yul\":6930:7006   */\n    tag_386:\n        /* \"#utility.yul\":7022:7026   */\n      dup2\n        /* \"#utility.yul\":7040:7041   */\n      0x01\n        /* \"#utility.yul\":7035:7094   */\n      dup2\n      eq\n      tag_388\n      jumpi\n        /* \"#utility.yul\":7108:7109   */\n      0x02\n        /* \"#utility.yul\":7103:7233   */\n      dup2\n      eq\n      tag_389\n      jumpi\n        /* \"#utility.yul\":7015:7233   */\n      jump(tag_387)\n        /* \"#utility.yul\":7035:7094   */\n    tag_388:\n        /* \"#utility.yul\":7065:7066   */\n      0x01\n        /* \"#utility.yul\":7056:7066   */\n      swap2\n      pop\n        /* \"#utility.yul\":7079:7084   */\n      pop\n      jump(tag_113)\n        /* \"#utility.yul\":7103:7233   */\n    tag_389:\n        /* \"#utility.yul\":7140:7143   */\n      0xff\n        /* \"#utility.yul\":7130:7138   */\n      dup5\n        /* \"#utility.yul\":7127:7144   */\n      gt\n        /* \"#utility.yul\":7124:7167   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":7147:7165   */\n      tag_391\n      tag_317\n      jump\t// in\n    tag_391:\n      pop\n      pop\n        /* \"#utility.yul\":7203:7204   */\n      0x01\n        /* \"#utility.yul\":7189:7205   */\n      dup3\n      shl\n        /* \"#utility.yul\":7218:7223   */\n      jump(tag_113)\n        /* \"#utility.yul\":7015:7233   */\n    tag_387:\n      pop\n        /* \"#utility.yul\":7317:7319   */\n      0x20\n        /* \"#utility.yul\":7307:7315   */\n      dup4\n        /* \"#utility.yul\":7304:7320   */\n      lt\n        /* \"#utility.yul\":7298:7301   */\n      0x0133\n        /* \"#utility.yul\":7292:7296   */\n      dup4\n        /* \"#utility.yul\":7289:7302   */\n      lt\n        /* \"#utility.yul\":7285:7321   */\n      and\n        /* \"#utility.yul\":7279:7281   */\n      0x4e\n        /* \"#utility.yul\":7269:7277   */\n      dup5\n        /* \"#utility.yul\":7266:7282   */\n      lt\n        /* \"#utility.yul\":7261:7263   */\n      0x0b\n        /* \"#utility.yul\":7255:7259   */\n      dup5\n        /* \"#utility.yul\":7252:7264   */\n      lt\n        /* \"#utility.yul\":7248:7283   */\n      and\n        /* \"#utility.yul\":7245:7322   */\n      or\n        /* \"#utility.yul\":7242:7401   */\n      iszero\n      tag_392\n      jumpi\n      pop\n        /* \"#utility.yul\":7354:7373   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":7386:7391   */\n      jump(tag_113)\n        /* \"#utility.yul\":7242:7401   */\n    tag_392:\n        /* \"#utility.yul\":7433:7467   */\n      tag_393\n        /* \"#utility.yul\":7458:7466   */\n      dup4\n        /* \"#utility.yul\":7452:7456   */\n      dup4\n        /* \"#utility.yul\":7433:7467   */\n      tag_318\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7503:7509   */\n      dup1\n        /* \"#utility.yul\":7499:7500   */\n      0x00\n        /* \"#utility.yul\":7495:7501   */\n      not\n        /* \"#utility.yul\":7491:7510   */\n      div\n        /* \"#utility.yul\":7482:7489   */\n      dup3\n        /* \"#utility.yul\":7479:7511   */\n      gt\n        /* \"#utility.yul\":7476:7534   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":7514:7532   */\n      tag_395\n      tag_317\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7552:7572   */\n      mul\n      swap4\n        /* \"#utility.yul\":6772:7578   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7583:7714   */\n    tag_135:\n        /* \"#utility.yul\":7643:7648   */\n      0x00\n        /* \"#utility.yul\":7672:7708   */\n      tag_343\n        /* \"#utility.yul\":7699:7707   */\n      dup4\n        /* \"#utility.yul\":7693:7697   */\n      dup4\n        /* \"#utility.yul\":7672:7708   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":7719:7844   */\n    tag_138:\n        /* \"#utility.yul\":7759:7763   */\n      0x00\n        /* \"#utility.yul\":7787:7788   */\n      dup3\n        /* \"#utility.yul\":7784:7785   */\n      dup3\n        /* \"#utility.yul\":7781:7789   */\n      lt\n        /* \"#utility.yul\":7778:7812   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7792:7810   */\n      tag_400\n      tag_317\n      jump\t// in\n    tag_400:\n      pop\n        /* \"#utility.yul\":7829:7838   */\n      sub\n      swap1\n        /* \"#utility.yul\":7719:7844   */\n      jump\t// out\n        /* \"#utility.yul\":7849:7984   */\n    tag_162:\n        /* \"#utility.yul\":7888:7891   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":7909:7926   */\n      dup3\n      eq\n        /* \"#utility.yul\":7906:7949   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7929:7947   */\n      tag_403\n      tag_317\n      jump\t// in\n    tag_403:\n      pop\n        /* \"#utility.yul\":7976:7977   */\n      0x01\n        /* \"#utility.yul\":7965:7978   */\n      add\n      swap1\n        /* \"#utility.yul\":7849:7984   */\n      jump\t// out\n        /* \"#utility.yul\":8747:8874   */\n    tag_216:\n        /* \"#utility.yul\":8808:8818   */\n      0x4e487b71\n        /* \"#utility.yul\":8803:8806   */\n      0xe0\n        /* \"#utility.yul\":8799:8819   */\n      shl\n        /* \"#utility.yul\":8796:8797   */\n      0x00\n        /* \"#utility.yul\":8789:8820   */\n      mstore\n        /* \"#utility.yul\":8839:8843   */\n      0x32\n        /* \"#utility.yul\":8836:8837   */\n      0x04\n        /* \"#utility.yul\":8829:8844   */\n      mstore\n        /* \"#utility.yul\":8863:8867   */\n      0x24\n        /* \"#utility.yul\":8860:8861   */\n      0x00\n        /* \"#utility.yul\":8853:8868   */\n      revert\n\n    auxdata: 0xa2646970667358221220a48bf51f394cc4e96b77d32e771e9066b4f33d07a29096b7bb72c6af283a59f664736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_890": {
									"entryPoint": null,
									"id": 890,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_698": {
									"entryPoint": null,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_687": {
									"entryPoint": null,
									"id": 687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_516": {
									"entryPoint": 326,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_814": {
									"entryPoint": 240,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 244,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1333:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "195:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "217:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "219:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "219:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "219:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "211:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "214:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "208:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "208:8:6"
															},
															"nodeType": "YulIf",
															"src": "205:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "248:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "260:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "263:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "256:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "248:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "177:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "180:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "186:4:6",
														"type": ""
													}
												],
												"src": "146:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "450:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "467:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "478:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "460:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "512:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "490:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "540:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "551:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "536:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "536:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "556:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "599:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "611:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "622:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "599:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "427:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "441:4:6",
														"type": ""
													}
												],
												"src": "276:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "711:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "713:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "713:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "713:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "700:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "707:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "703:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "703:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "697:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:13:6"
															},
															"nodeType": "YulIf",
															"src": "694:39:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "742:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "753:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "756:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "749:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "749:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "667:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "670:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "676:3:6",
														"type": ""
													}
												],
												"src": "636:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "870:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "880:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "892:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "888:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "888:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "880:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "922:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "933:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "915:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "915:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "850:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "861:4:6",
														"type": ""
													}
												],
												"src": "769:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1006:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1016:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1030:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1033:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1026:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1026:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1016:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1047:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1077:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1083:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1073:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1051:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1124:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1126:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1140:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1148:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1136:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1136:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1104:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1097:26:6"
															},
															"nodeType": "YulIf",
															"src": "1094:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1214:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1235:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1242:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1247:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1238:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1238:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1228:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1228:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1228:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1279:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1282:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1272:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1272:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1272:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1307:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1310:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1300:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1300:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1300:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1170:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1193:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1201:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1190:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1190:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1167:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:38:6"
															},
															"nodeType": "YulIf",
															"src": "1164:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "986:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "995:6:6",
														"type": ""
													}
												],
												"src": "951:380:6"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405269ad78ebc5ac6200000000600655678ac7230489e8000060075560016008553480156200003057600080fd5b50604051806040016040528060088152602001672a34b5aa37b5b2b760c11b8152506040518060400160405280600381526020016254494b60e81b8152508160039080519060200190620000869291906200020c565b5080516200009c9060049060208401906200020c565b505050620000b9620000b3620000f060201b60201c565b620000f4565b6000620000db69ad78ebc5ac620000000069d3c21bcecceda1000000620002c8565b9050620000e9338262000146565b506200033a565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001a15760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001b59190620002e2565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b8280546200021a90620002fd565b90600052602060002090601f0160209004810192826200023e576000855562000289565b82601f106200025957805160ff191683800117855562000289565b8280016001018555821562000289579182015b82811115620002895782518255916020019190600101906200026c565b50620002979291506200029b565b5090565b5b808211156200029757600081556001016200029c565b634e487b7160e01b600052601160045260246000fd5b600082821015620002dd57620002dd620002b2565b500390565b60008219821115620002f857620002f8620002b2565b500190565b600181811c908216806200031257607f821691505b602082108114156200033457634e487b7160e01b600052602260045260246000fd5b50919050565b611471806200034a6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063d559f05b11610071578063d559f05b14610258578063da0239a61461026b578063dd62ed3e14610273578063e5b9559514610286578063f2fde38b146102a957600080fd5b8063715018a6146102075780638da5cb5b1461020f57806395d89b411461022a578063a457c2d714610232578063a9059cbb1461024557600080fd5b806323b872dd116100f457806323b872dd146101a1578063313ce567146101b4578063331d17c1146101c357806339509351146101cb57806370a08231146101de57600080fd5b806306fdde031461013157806307621eca1461014f578063095ea7b314610161578063156e29f61461018457806318160ddd14610199575b600080fd5b6101396102bc565b6040516101469190610ffb565b60405180910390f35b6007545b604051908152602001610146565b61017461016f36600461106c565b61034e565b6040519015158152602001610146565b610197610192366004611096565b610368565b005b600254610153565b6101746101af3660046110c9565b6105da565b60405160188152602001610146565b6101536105fe565b6101746101d936600461106c565b610614565b6101536101ec366004611105565b6001600160a01b031660009081526020819052604090205490565b610197610636565b6005546040516001600160a01b039091168152602001610146565b61013961064a565b61017461024036600461106c565b610659565b61017461025336600461106c565b6106d4565b610197610266366004611173565b6106e2565b600654610153565b61015361028136600461120d565b610aaa565b610174610294366004611240565b60009081526009602052604090205460ff1690565b6101976102b7366004611105565b610ad5565b6060600380546102cb90611259565b80601f01602080910402602001604051908101604052809291908181526020018280546102f790611259565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b60003361035c818585610b4e565b60019150505b92915050565b610370610c72565b6000600654116103c05760405162461bcd60e51b8152602060048201526016602482015275139bc81b5bdc99481d1bdad95b9cc81d1bc81b5a5b9d60521b60448201526064015b60405180910390fd5b60008181526009602052604090205460ff161561041f5760405162461bcd60e51b815260206004820152601e60248201527f557365722068617320616c7265616479206d696e74656420746f6b656e73000060448201526064016103b7565b600754600090806104326103e8866112aa565b61043c91906112cc565b61044691906112eb565b90506000600854600261045991906113e7565b61046d9069ad78ebc5ac62000000006112aa565b905060008160065461047f91906113f3565b905082811115801561049357506001600754115b15610541578092506000600754846103e86104ae91906112cc565b6104b891906112aa565b6104c290876113f3565b9050600060026007546104d591906112aa565b60026007546104e491906112aa565b6104f06103e8856112aa565b6104fa91906112cc565b61050491906112eb565b90506105116002856112aa565b8110610532576007546105256002866112aa565b61052f91906113f3565b90505b61053c81866112eb565b945050505b8260065410156105515760065492505b61055b8684610ccc565b826006600082825461056d91906113f3565b90915550506000848152600960205260409020805460ff19166001179055600654821080159061059f57506001600754115b156105d257600a600760008282546105b791906112aa565b9091555050600880549060006105cc8361140a565b91905055505b505050505050565b6000336105e8858285610d8b565b6105f3858585610e05565b506001949350505050565b6000600160085461060f91906113f3565b905090565b60003361035c8185856106278383610aaa565b61063191906112eb565b610b4e565b61063e610c72565b6106486000610fa9565b565b6060600480546102cb90611259565b600033816106678286610aaa565b9050838110156106c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b7565b6105f38286868403610b4e565b60003361035c818585610e05565b6106ea610c72565b8483146107335760405162461bcd60e51b81526020600482015260176024820152764d69736d61746368656420696e7075742061727261797360481b60448201526064016103b7565b84811461077c5760405162461bcd60e51b81526020600482015260176024820152764d69736d61746368656420696e7075742061727261797360481b60448201526064016103b7565b60005b85811015610aa1576000600654116107d25760405162461bcd60e51b8152602060048201526016602482015275139bc81b5bdc99481d1bdad95b9cc81d1bc81b5a5b9d60521b60448201526064016103b7565b600960008484848181106107e8576107e8611425565b602090810292909201358352508101919091526040016000205460ff16156108525760405162461bcd60e51b815260206004820152601e60248201527f557365722068617320616c7265616479206d696e74656420746f6b656e73000060448201526064016103b7565b60006007546007546103e888888681811061086f5761086f611425565b9050602002013561088091906112aa565b61088a91906112cc565b61089491906112eb565b9050600060085460026108a791906113e7565b6108bb9069ad78ebc5ac62000000006112aa565b90506000816006546108cd91906113f3565b90508281111580156108e157506001600754115b156109a8578092506000600754846103e86108fc91906112cc565b61090691906112aa565b89898781811061091857610918611425565b9050602002013561092991906113f3565b90506000600260075461093c91906112aa565b600260075461094b91906112aa565b6109576103e8856112aa565b61096191906112cc565b61096b91906112eb565b90506109786002856112aa565b81106109995760075461098c6002866112aa565b61099691906113f3565b90505b6109a381866112eb565b945050505b8260065410156109b85760065492505b6109e88a8a868181106109cd576109cd611425565b90506020020160208101906109e29190611105565b84610ccc565b82600660008282546109fa91906113f3565b909155506001905060096000888888818110610a1857610a18611425565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508160065411158015610a5857506001600754115b15610a8b57600a60076000828254610a7091906112aa565b909155505060088054906000610a858361140a565b91905055505b5050508080610a999061140a565b91505061077f565b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610add610c72565b6001600160a01b038116610b425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b7565b610b4b81610fa9565b50565b6001600160a01b038316610bb05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b7565b6001600160a01b038216610c115760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146106485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b7565b6001600160a01b038216610d225760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b7565b8060026000828254610d3491906112eb565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610d978484610aaa565b90506000198114610dff5781811015610df25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b7565b610dff8484848403610b4e565b50505050565b6001600160a01b038316610e695760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b7565b6001600160a01b038216610ecb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b7565b6001600160a01b03831660009081526020819052604090205481811015610f435760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610dff565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156110285785810183015185820160400152820161100c565b8181111561103a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461106757600080fd5b919050565b6000806040838503121561107f57600080fd5b61108883611050565b946020939093013593505050565b6000806000606084860312156110ab57600080fd5b6110b484611050565b95602085013595506040909401359392505050565b6000806000606084860312156110de57600080fd5b6110e784611050565b92506110f560208501611050565b9150604084013590509250925092565b60006020828403121561111757600080fd5b61112082611050565b9392505050565b60008083601f84011261113957600080fd5b50813567ffffffffffffffff81111561115157600080fd5b6020830191508360208260051b850101111561116c57600080fd5b9250929050565b6000806000806000806060878903121561118c57600080fd5b863567ffffffffffffffff808211156111a457600080fd5b6111b08a838b01611127565b909850965060208901359150808211156111c957600080fd5b6111d58a838b01611127565b909650945060408901359150808211156111ee57600080fd5b506111fb89828a01611127565b979a9699509497509295939492505050565b6000806040838503121561122057600080fd5b61122983611050565b915061123760208401611050565b90509250929050565b60006020828403121561125257600080fd5b5035919050565b600181811c9082168061126d57607f821691505b6020821081141561128e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000826112c757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156112e6576112e6611294565b500290565b600082198211156112fe576112fe611294565b500190565b600181815b8085111561133e57816000190482111561132457611324611294565b8085161561133157918102915b93841c9390800290611308565b509250929050565b60008261135557506001610362565b8161136257506000610362565b816001811461137857600281146113825761139e565b6001915050610362565b60ff84111561139357611393611294565b50506001821b610362565b5060208310610133831016604e8410600b84101617156113c1575081810a610362565b6113cb8383611303565b80600019048211156113df576113df611294565b029392505050565b60006111208383611346565b60008282101561140557611405611294565b500390565b600060001982141561141e5761141e611294565b5060010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a48bf51f394cc4e96b77d32e771e9066b4f33d07a29096b7bb72c6af283a59f664736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0xAD78EBC5AC6200000000 PUSH1 0x6 SSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x7 SSTORE PUSH1 0x1 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x2A34B5AA37B5B2B7 PUSH1 0xC1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x54494B PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x86 SWAP3 SWAP2 SWAP1 PUSH3 0x20C JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x9C SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x20C JUMP JUMPDEST POP POP POP PUSH3 0xB9 PUSH3 0xB3 PUSH3 0xF0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xF4 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xDB PUSH10 0xAD78EBC5AC6200000000 PUSH10 0xD3C21BCECCEDA1000000 PUSH3 0x2C8 JUMP JUMPDEST SWAP1 POP PUSH3 0xE9 CALLER DUP3 PUSH3 0x146 JUMP JUMPDEST POP PUSH3 0x33A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1B5 SWAP2 SWAP1 PUSH3 0x2E2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x21A SWAP1 PUSH3 0x2FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x23E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x289 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x259 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x289 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x289 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x289 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x26C JUMP JUMPDEST POP PUSH3 0x297 SWAP3 SWAP2 POP PUSH3 0x29B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x297 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x29C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x2DD JUMPI PUSH3 0x2DD PUSH3 0x2B2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2F8 JUMPI PUSH3 0x2F8 PUSH3 0x2B2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x312 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x334 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1471 DUP1 PUSH3 0x34A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD559F05B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD559F05B EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xE5B95595 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x331D17C1 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x7621ECA EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x153 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x174 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x153 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x120D JUMP JUMPDEST PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x174 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0x1259 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F7 SWAP1 PUSH2 0x1259 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x344 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x319 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x344 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x327 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35C DUP2 DUP6 DUP6 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x370 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD GT PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC81B5BDC99481D1BDAD95B9CC81D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C7265616479206D696E74656420746F6B656E730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x432 PUSH2 0x3E8 DUP7 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x2 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x46D SWAP1 PUSH10 0xAD78EBC5AC6200000000 PUSH2 0x12AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD GT JUMPDEST ISZERO PUSH2 0x541 JUMPI DUP1 SWAP3 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP5 PUSH2 0x3E8 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x4C2 SWAP1 DUP8 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x7 SLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x3E8 DUP6 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP PUSH2 0x511 PUSH1 0x2 DUP6 PUSH2 0x12AA JUMP JUMPDEST DUP2 LT PUSH2 0x532 JUMPI PUSH1 0x7 SLOAD PUSH2 0x525 PUSH1 0x2 DUP7 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x53C DUP2 DUP7 PUSH2 0x12EB JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP3 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH2 0x55B DUP7 DUP5 PUSH2 0xCCC JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SLOAD DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x59F JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD GT JUMPDEST ISZERO PUSH2 0x5D2 JUMPI PUSH1 0xA PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x5CC DUP4 PUSH2 0x140A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E8 DUP6 DUP3 DUP6 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x5F3 DUP6 DUP6 DUP6 PUSH2 0xE05 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35C DUP2 DUP6 DUP6 PUSH2 0x627 DUP4 DUP4 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x63E PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x648 PUSH1 0x0 PUSH2 0xFA9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x667 DUP3 DUP7 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x5F3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35C DUP2 DUP6 DUP6 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0xC72 JUMP JUMPDEST DUP5 DUP4 EQ PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4D69736D61746368656420696E70757420617272617973 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST DUP5 DUP2 EQ PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4D69736D61746368656420696E70757420617272617973 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 PUSH1 0x6 SLOAD GT PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC81B5BDC99481D1BDAD95B9CC81D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x7E8 JUMPI PUSH2 0x7E8 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C7265616479206D696E74656420746F6B656E730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH2 0x3E8 DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x86F JUMPI PUSH2 0x86F PUSH2 0x1425 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x2 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x8BB SWAP1 PUSH10 0xAD78EBC5AC6200000000 PUSH2 0x12AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD GT JUMPDEST ISZERO PUSH2 0x9A8 JUMPI DUP1 SWAP3 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP5 PUSH2 0x3E8 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP10 DUP10 DUP8 DUP2 DUP2 LT PUSH2 0x918 JUMPI PUSH2 0x918 PUSH2 0x1425 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x7 SLOAD PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x957 PUSH2 0x3E8 DUP6 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP PUSH2 0x978 PUSH1 0x2 DUP6 PUSH2 0x12AA JUMP JUMPDEST DUP2 LT PUSH2 0x999 JUMPI PUSH1 0x7 SLOAD PUSH2 0x98C PUSH1 0x2 DUP7 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x9A3 DUP2 DUP7 PUSH2 0x12EB JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP3 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH2 0x9E8 DUP11 DUP11 DUP7 DUP2 DUP2 LT PUSH2 0x9CD JUMPI PUSH2 0x9CD PUSH2 0x1425 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x1105 JUMP JUMPDEST DUP5 PUSH2 0xCCC JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP9 DUP9 DUP9 DUP2 DUP2 LT PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0x1425 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD GT JUMPDEST ISZERO PUSH2 0xA8B JUMPI PUSH1 0xA PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xA85 DUP4 PUSH2 0x140A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xA99 SWAP1 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x77F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xADD PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0xB4B DUP2 PUSH2 0xFA9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD97 DUP5 DUP5 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDFF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0xDFF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1028 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x100C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1088 DUP4 PUSH2 0x1050 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B4 DUP5 PUSH2 0x1050 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E7 DUP5 PUSH2 0x1050 JUMP JUMPDEST SWAP3 POP PUSH2 0x10F5 PUSH1 0x20 DUP6 ADD PUSH2 0x1050 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1120 DUP3 PUSH2 0x1050 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x116C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B0 DUP11 DUP4 DUP12 ADD PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D5 DUP11 DUP4 DUP12 ADD PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11FB DUP10 DUP3 DUP11 ADD PUSH2 0x1127 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1229 DUP4 PUSH2 0x1050 JUMP JUMPDEST SWAP2 POP PUSH2 0x1237 PUSH1 0x20 DUP5 ADD PUSH2 0x1050 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x126D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x128E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12E6 JUMPI PUSH2 0x12E6 PUSH2 0x1294 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x12FE JUMPI PUSH2 0x12FE PUSH2 0x1294 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x133E JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1324 JUMPI PUSH2 0x1324 PUSH2 0x1294 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1331 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1308 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1355 JUMPI POP PUSH1 0x1 PUSH2 0x362 JUMP JUMPDEST DUP2 PUSH2 0x1362 JUMPI POP PUSH1 0x0 PUSH2 0x362 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1378 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1382 JUMPI PUSH2 0x139E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x362 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1393 JUMPI PUSH2 0x1393 PUSH2 0x1294 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x362 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x13C1 JUMPI POP DUP2 DUP2 EXP PUSH2 0x362 JUMP JUMPDEST PUSH2 0x13CB DUP4 DUP4 PUSH2 0x1303 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x13DF JUMPI PUSH2 0x13DF PUSH2 0x1294 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1120 DUP4 DUP4 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1405 JUMPI PUSH2 0x1405 PUSH2 0x1294 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x141E JUMPI PUSH2 0x141E PUSH2 0x1294 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 DUP12 CREATE2 0x1F CODECOPY 0x4C 0xC4 0xE9 PUSH12 0x77D32E771E9066B4F33D07A2 SWAP1 SWAP7 0xB7 0xBB PUSH19 0xC6AF283A59F664736F6C634300080900330000 ",
							"sourceMap": "175:7932:5:-:0;;;403:15;609:49;;737:16;704:49;;847:1;815:33;;999:260;;;;;;;;;;1980:113:1;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:1;;;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2069:17:1;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1049:25:5::1;1077:27;403:15;256:10;1077:27;:::i;:::-;1049:55:::0;-1:-1:-1;1186:36:5::1;1192:10;1049:55:::0;1186:5:::1;:36::i;:::-;1038:221;175:7932:::0;;640:96:4;719:10;;640:96::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:1:-;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;478:2:6;8595:65:1;;;460:21:6;517:2;497:18;;;490:30;556:33;536:18;;;529:61;607:18;;8595:65:1;;;;;;;;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;915:25:6;;;8952:37:1;;888:18:6;8952:37:1;;;;;;;8520:535;;:::o;175:7932:5:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;175:7932:5;;;-1:-1:-1;175:7932:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:6;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:125;186:4;214:1;211;208:8;205:34;;;219:18;;:::i;:::-;-1:-1:-1;256:9:6;;146:125::o;636:128::-;676:3;707:1;703:6;700:1;697:13;694:39;;;713:18;;:::i;:::-;-1:-1:-1;749:9:6;;636:128::o;951:380::-;1030:1;1026:12;;;;1073;;;1094:61;;1148:4;1140:6;1136:17;1126:27;;1094:61;1201:2;1193:6;1190:14;1170:18;1167:38;1164:161;;;1247:10;1242:3;1238:20;1235:1;1228:31;1282:4;1279:1;1272:15;1310:4;1307:1;1300:15;1164:161;;951:380;;;:::o;:::-;175:7932:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_698": {
									"entryPoint": null,
									"id": 698,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_633": {
									"entryPoint": 2894,
									"id": 633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_687": {
									"entryPoint": null,
									"id": 687,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 3186,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_516": {
									"entryPoint": 3276,
									"id": 516,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_814": {
									"entryPoint": null,
									"id": 814,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_676": {
									"entryPoint": 3467,
									"id": 676,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 4009,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_459": {
									"entryPoint": 3589,
									"id": 459,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_254": {
									"entryPoint": 2730,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_279": {
									"entryPoint": 846,
									"id": 279,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@batchMint_1245": {
									"entryPoint": 1762,
									"id": 1245,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@currentReward_1261": {
									"entryPoint": null,
									"id": 1261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1292": {
									"entryPoint": null,
									"id": 1292,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_382": {
									"entryPoint": 1625,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getHalvingCount_1283": {
									"entryPoint": 1534,
									"id": 1283,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasMinted_1273": {
									"entryPoint": null,
									"id": 1273,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increaseAllowance_341": {
									"entryPoint": 1556,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1046": {
									"entryPoint": 872,
									"id": 1046,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_167": {
									"entryPoint": 700,
									"id": 167,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingSupply_1253": {
									"entryPoint": null,
									"id": 1253,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1590,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_177": {
									"entryPoint": 1610,
									"id": 177,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_312": {
									"entryPoint": 1498,
									"id": 312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 2773,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_236": {
									"entryPoint": 1748,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 4176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 4391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c5a3f32c12150f5e36dce909285d00c61fc25c7a2b22dde1da6006b709a19b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e85b3bbcaf0e6fcb89de71fa23f33e073f937001216651376dba7e28e5af1d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2da833f8d7ed126839b9ef198268abdf3536c4b21ab267733d4f65a97f4c62f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12387:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:6"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:6"
															},
															"nodeType": "YulIf",
															"src": "443:91:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:597:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "717:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "727:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "739:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "750:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "735:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "727:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "769:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "762:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "762:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "686:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "697:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "708:4:6",
														"type": ""
													}
												],
												"src": "616:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "847:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "857:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "879:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "866:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "857:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "949:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "958:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "961:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "951:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "951:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "908:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "919:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "934:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "939:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "930:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "930:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "943:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "926:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "926:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "915:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "915:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "905:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:50:6"
															},
															"nodeType": "YulIf",
															"src": "895:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "826:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "837:5:6",
														"type": ""
													}
												],
												"src": "798:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1063:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1109:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1118:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1121:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1111:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1111:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1111:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1084:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1093:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1080:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1076:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:32:6"
															},
															"nodeType": "YulIf",
															"src": "1073:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1134:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1144:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1182:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1209:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1220:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1192:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1182:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1021:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1032:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1044:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1052:6:6",
														"type": ""
													}
												],
												"src": "976:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1330:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1340:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1382:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1407:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1400:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1400:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1393:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1393:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1375:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1375:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1375:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1299:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1310:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1321:4:6",
														"type": ""
													}
												],
												"src": "1235:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:218:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:6"
															},
															"nodeType": "YulIf",
															"src": "1541:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1677:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1688:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1673:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1660:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1701:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1728:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1739:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1724:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1711:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1711:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1701:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:6",
														"type": ""
													}
												],
												"src": "1427:322:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1858:224:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1904:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1913:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1906:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1906:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1906:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1879:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1888:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1875:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1875:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1900:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1871:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1871:32:6"
															},
															"nodeType": "YulIf",
															"src": "1868:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1929:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1958:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1939:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1929:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1977:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2010:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2021:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2006:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2006:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1987:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2034:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2061:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2072:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2057:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2057:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2044:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2044:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2034:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1808:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1819:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1831:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1839:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1847:6:6",
														"type": ""
													}
												],
												"src": "1754:328:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2184:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2194:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2206:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2217:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2202:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2194:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2236:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2251:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2259:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2247:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2247:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2229:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2229:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2153:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2164:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2175:4:6",
														"type": ""
													}
												],
												"src": "2087:184:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2346:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2392:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2401:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2404:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2394:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2394:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2394:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2367:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2376:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2363:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2363:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2388:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2359:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:32:6"
															},
															"nodeType": "YulIf",
															"src": "2356:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2417:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2446:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2427:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2312:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2323:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2335:6:6",
														"type": ""
													}
												],
												"src": "2276:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2568:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2578:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2590:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2601:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2586:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2586:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2578:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2620:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2635:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2651:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2656:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2647:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2647:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2660:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2643:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2643:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2631:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2631:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2613:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2613:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2537:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2548:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2559:4:6",
														"type": ""
													}
												],
												"src": "2467:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2759:283:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2808:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2817:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2820:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2810:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2810:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2810:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2787:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2795:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2783:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2783:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2802:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2772:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2772:35:6"
															},
															"nodeType": "YulIf",
															"src": "2769:55:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2833:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2833:6:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2906:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2915:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2918:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2908:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2908:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2908:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2878:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2875:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2875:30:6"
															},
															"nodeType": "YulIf",
															"src": "2872:50:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2931:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2947:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2955:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2943:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2943:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2931:8:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3020:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3029:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3032:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3022:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3022:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3022:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2983:6:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2995:1:6",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2998:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2991:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2991:14:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2979:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2979:27:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3008:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2975:38:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3015:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2972:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:47:6"
															},
															"nodeType": "YulIf",
															"src": "2969:67:6"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2722:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2730:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2738:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2748:6:6",
														"type": ""
													}
												],
												"src": "2675:367:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:879:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3302:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3311:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3314:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3304:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3304:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3277:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3286:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3298:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3269:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:32:6"
															},
															"nodeType": "YulIf",
															"src": "3266:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3327:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3354:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3341:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:23:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3331:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3373:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3383:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3377:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3428:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3437:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3440:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3430:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3430:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3430:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3416:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3424:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3413:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:14:6"
															},
															"nodeType": "YulIf",
															"src": "3410:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3453:96:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3521:9:6"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3532:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3517:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3517:22:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3541:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3479:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3479:70:6"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "3457:8:6",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "3467:8:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3558:18:6",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "3568:8:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3585:18:6",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "3595:8:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3585:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3612:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3645:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3656:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3641:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3641:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:32:6"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3616:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3689:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3698:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3701:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3691:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3691:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3691:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3675:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3685:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3672:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3672:16:6"
															},
															"nodeType": "YulIf",
															"src": "3669:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3714:98:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3782:9:6"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3793:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3778:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3778:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3804:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3740:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:72:6"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "3718:8:6",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "3728:8:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3821:18:6",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "3831:8:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3821:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3848:18:6",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "3858:8:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3848:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3875:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3908:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3919:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3904:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3904:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3891:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:32:6"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3879:8:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3952:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3961:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3964:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3954:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3954:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3954:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3938:8:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3948:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3935:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3935:16:6"
															},
															"nodeType": "YulIf",
															"src": "3932:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3977:98:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4045:9:6"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4056:8:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4041:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4041:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4067:7:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4003:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:72:6"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "3981:8:6",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "3991:8:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4084:18:6",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "4094:8:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4111:18:6",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "4121:8:6"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4111:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3182:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3193:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3205:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3213:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3221:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3229:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3237:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3245:6:6",
														"type": ""
													}
												],
												"src": "3047:1088:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4227:173:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4273:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4282:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4285:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4275:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4275:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4275:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4248:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4257:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4244:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4244:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4269:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4240:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:32:6"
															},
															"nodeType": "YulIf",
															"src": "4237:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4298:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4327:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4308:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4298:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4346:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4379:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4390:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4375:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4375:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4356:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4356:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4346:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4185:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4196:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4208:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4216:6:6",
														"type": ""
													}
												],
												"src": "4140:260:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4475:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4521:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4530:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4533:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4523:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4523:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4523:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4496:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4505:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4492:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4492:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4517:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4488:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4488:32:6"
															},
															"nodeType": "YulIf",
															"src": "4485:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4546:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4569:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4556:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4556:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4546:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4441:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4452:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4464:6:6",
														"type": ""
													}
												],
												"src": "4405:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4645:325:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4655:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4669:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4672:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4655:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4686:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4716:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4712:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4690:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4763:31:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4765:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4779:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4787:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4775:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4775:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4765:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4743:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4736:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4736:26:6"
															},
															"nodeType": "YulIf",
															"src": "4733:61:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4853:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4874:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4881:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4886:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4877:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4877:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4867:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4867:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4867:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4918:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4921:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4911:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4911:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4911:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4946:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4949:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4939:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4939:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4939:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4809:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4832:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4840:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4829:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4829:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4806:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:38:6"
															},
															"nodeType": "YulIf",
															"src": "4803:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4625:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4634:6:6",
														"type": ""
													}
												],
												"src": "4590:380:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5149:172:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5166:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5177:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5159:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5159:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5159:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5200:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5211:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5196:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5196:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5189:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5239:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5250:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5235:18:6"
																	},
																	{
																		"hexValue": "4e6f206d6f726520746f6b656e7320746f206d696e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5255:24:6",
																		"type": "",
																		"value": "No more tokens to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5228:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5228:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5228:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5289:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5301:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5312:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5297:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5297:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5289:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e85b3bbcaf0e6fcb89de71fa23f33e073f937001216651376dba7e28e5af1d1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5126:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5140:4:6",
														"type": ""
													}
												],
												"src": "4975:346:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5500:180:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5517:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5528:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5510:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5510:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5510:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5551:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5562:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5547:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5547:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5567:2:6",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5540:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5540:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5540:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5590:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5601:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5586:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5586:18:6"
																	},
																	{
																		"hexValue": "557365722068617320616c7265616479206d696e74656420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5606:32:6",
																		"type": "",
																		"value": "User has already minted tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:60:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5579:60:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5648:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5656:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c5a3f32c12150f5e36dce909285d00c61fc25c7a2b22dde1da6006b709a19b8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5477:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5491:4:6",
														"type": ""
													}
												],
												"src": "5326:354:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5717:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5734:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5741:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5746:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5737:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5727:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5727:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5774:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5777:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5767:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5767:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5798:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5801:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5791:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5685:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5863:171:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5894:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5915:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5922:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5927:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5918:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5918:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5908:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5908:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5908:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5959:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5962:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5952:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5952:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5952:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5987:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5990:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5980:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5980:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5980:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5883:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5876:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5876:9:6"
															},
															"nodeType": "YulIf",
															"src": "5873:132:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6023:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6026:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6019:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6019:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6014:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5848:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5851:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5857:1:6",
														"type": ""
													}
												],
												"src": "5817:217:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6091:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6150:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6152:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6152:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6152:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6122:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6115:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6115:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6108:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6108:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6130:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6141:1:6",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6137:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6137:6:6"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6145:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6133:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6133:14:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6127:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:21:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6104:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6104:45:6"
															},
															"nodeType": "YulIf",
															"src": "6101:71:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6181:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6196:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6199:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6192:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6181:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6070:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6073:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6079:7:6",
														"type": ""
													}
												],
												"src": "6039:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6260:80:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6287:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6289:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6289:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6289:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6276:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6283:1:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6273:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6273:13:6"
															},
															"nodeType": "YulIf",
															"src": "6270:39:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6318:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6329:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6332:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6325:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6318:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6243:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6246:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6252:3:6",
														"type": ""
													}
												],
												"src": "6212:128:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6409:358:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6419:16:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6434:1:6",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "6423:7:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6444:16:6",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "6453:7:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "6444:5:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6469:13:6",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "6477:5:6"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6469:4:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6533:228:6",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6578:22:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "6580:16:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6580:18:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6580:18:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6553:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6567:1:6",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6563:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6563:6:6"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "6571:4:6"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "6559:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6559:17:6"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "6550:2:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6550:27:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6547:53:6"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6639:29:6",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6641:25:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "6654:5:6"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "6661:4:6"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "6650:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6650:16:6"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "6641:5:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6620:8:6"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "6630:7:6"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6616:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6616:22:6"
																		},
																		"nodeType": "YulIf",
																		"src": "6613:55:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6681:23:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6693:4:6"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "6699:4:6"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "6689:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6689:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6681:4:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6717:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "6733:7:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "6742:8:6"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "6729:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6729:22:6"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "6717:8:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6502:8:6"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "6512:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6499:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6499:21:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6521:3:6",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6495:3:6",
																"statements": []
															},
															"src": "6491:270:6"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "6373:5:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6380:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6393:5:6",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6400:4:6",
														"type": ""
													}
												],
												"src": "6345:422:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6831:747:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6869:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6883:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6892:1:6",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6883:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6906:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "6851:8:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6844:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6844:16:6"
															},
															"nodeType": "YulIf",
															"src": "6841:80:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6954:52:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6968:10:6",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6977:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6968:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "6991:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "6940:4:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6933:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6933:12:6"
															},
															"nodeType": "YulIf",
															"src": "6930:76:6"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7042:52:6",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "7056:10:6",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7065:1:6",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7056:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7079:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7035:59:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7040:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7110:123:6",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7145:22:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "7147:16:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7147:18:6"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7147:18:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7130:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7140:3:6",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "7127:2:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7127:17:6"
																				},
																				"nodeType": "YulIf",
																				"src": "7124:43:6"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "7180:25:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "7193:8:6"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7203:1:6",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "7189:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7189:16:6"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "7180:5:6"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "7218:5:6"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7103:130:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7108:1:6",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7022:4:6"
															},
															"nodeType": "YulSwitch",
															"src": "7015:218:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7331:70:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7345:28:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7358:4:6"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7364:8:6"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "7354:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7354:19:6"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "7345:5:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "7386:5:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7255:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7261:2:6",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7252:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7252:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7269:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7279:2:6",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7266:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7266:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:35:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "7292:4:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7298:3:6",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7289:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7289:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "7307:8:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7317:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "7304:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7304:16:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7285:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7285:36:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7245:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:77:6"
															},
															"nodeType": "YulIf",
															"src": "7242:159:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7410:57:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7452:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7458:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "7433:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7433:34:6"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "7414:7:6",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "7423:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7512:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7514:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7514:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7514:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "7482:7:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7499:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7495:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7495:6:6"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "7503:6:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "7491:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7491:19:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7479:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:32:6"
															},
															"nodeType": "YulIf",
															"src": "7476:58:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7543:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "7556:7:6"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "7565:6:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7552:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:20:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7543:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "6802:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "6808:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "6821:5:6",
														"type": ""
													}
												],
												"src": "6772:806:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7653:61:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7663:45:6",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7693:4:6"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7699:8:6"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "7672:20:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7672:36:6"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7663:5:6"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7624:4:6",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7630:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7643:5:6",
														"type": ""
													}
												],
												"src": "7583:131:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7768:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7790:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7792:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7792:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7792:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7784:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7787:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7781:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:8:6"
															},
															"nodeType": "YulIf",
															"src": "7778:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7821:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7833:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7836:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7829:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7829:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7821:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7750:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7753:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7759:4:6",
														"type": ""
													}
												],
												"src": "7719:125:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7896:88:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7927:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7929:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7929:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7929:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7912:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7923:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7919:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7919:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7909:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:17:6"
															},
															"nodeType": "YulIf",
															"src": "7906:43:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7958:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7969:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7976:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7965:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7965:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7958:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7878:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7888:3:6",
														"type": ""
													}
												],
												"src": "7849:135:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8163:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8180:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8191:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8173:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8173:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8173:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8214:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8225:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8210:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8230:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8203:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8203:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8203:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8253:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8264:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8249:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8249:18:6"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8269:34:6",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8242:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8242:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8242:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8324:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8335:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8320:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8320:18:6"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8340:7:6",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8313:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8313:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8313:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8357:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8369:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8380:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8365:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8365:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8357:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8140:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8154:4:6",
														"type": ""
													}
												],
												"src": "7989:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8569:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8586:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8597:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8579:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8579:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8579:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8620:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8631:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8616:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8616:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8636:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8609:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8609:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8609:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8659:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8670:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8655:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8655:18:6"
																	},
																	{
																		"hexValue": "4d69736d61746368656420696e70757420617272617973",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8675:25:6",
																		"type": "",
																		"value": "Mismatched input arrays"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8648:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8648:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8648:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8710:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8722:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8733:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8718:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8718:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8710:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2da833f8d7ed126839b9ef198268abdf3536c4b21ab267733d4f65a97f4c62f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8546:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8560:4:6",
														"type": ""
													}
												],
												"src": "8395:347:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8779:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8796:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8803:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8808:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8799:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8799:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8789:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8789:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8789:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8836:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8839:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8829:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8829:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8829:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8860:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8863:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8853:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8853:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8853:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8747:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9053:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9070:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9081:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9063:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9063:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9063:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9104:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9115:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9100:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9100:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9120:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9093:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9093:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9093:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9143:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9154:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9139:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9139:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9159:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9132:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9132:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9214:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9225:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9210:18:6"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9230:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9203:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9203:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9248:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9260:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9271:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9256:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9256:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9248:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9030:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9044:4:6",
														"type": ""
													}
												],
												"src": "8879:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9460:226:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9477:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9488:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9470:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9470:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9470:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9511:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9522:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9507:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9507:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9527:2:6",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9500:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9500:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9500:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9550:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9561:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9546:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9546:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9566:34:6",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9539:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9539:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9539:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9621:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9632:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9617:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9617:18:6"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9637:6:6",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9610:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9610:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9610:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9653:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9665:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9676:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9661:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9653:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9437:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9451:4:6",
														"type": ""
													}
												],
												"src": "9286:400:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9865:224:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9882:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9893:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9875:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9875:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9875:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9916:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9927:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9912:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9912:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9932:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9905:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9905:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9905:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9955:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9966:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9951:18:6"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9971:34:6",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9944:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9944:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9944:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10026:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10037:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10022:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10022:18:6"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10042:4:6",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10015:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10015:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10015:32:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10056:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10068:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10079:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10064:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10064:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10056:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9842:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9856:4:6",
														"type": ""
													}
												],
												"src": "9691:398:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10268:182:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10285:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10296:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10278:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10278:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10278:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10319:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10330:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10315:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10315:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10335:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10308:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10308:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10308:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10358:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10369:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10354:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10354:18:6"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10374:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10347:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10347:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10347:62:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10418:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10430:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10441:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10426:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10426:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10418:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10245:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10259:4:6",
														"type": ""
													}
												],
												"src": "10094:356:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10629:181:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10646:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10657:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10639:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10639:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10639:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10680:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10691:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10676:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10696:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10669:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10669:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10669:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10719:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10730:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10715:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10715:18:6"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10735:33:6",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10708:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10708:61:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10708:61:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10778:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10790:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10801:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10786:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10786:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10778:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10606:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10620:4:6",
														"type": ""
													}
												],
												"src": "10455:355:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10989:179:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11006:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11017:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10999:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10999:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10999:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11040:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11051:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11036:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11036:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11056:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11029:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11029:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11029:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11079:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11090:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11075:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11075:18:6"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11095:31:6",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11068:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11068:59:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11068:59:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11136:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11148:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11159:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11144:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11144:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11136:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10966:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10980:4:6",
														"type": ""
													}
												],
												"src": "10815:353:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11347:227:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11364:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11375:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11357:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11357:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11357:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11398:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11409:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11394:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11394:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11414:2:6",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11387:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11387:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11387:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11437:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11448:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11433:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11433:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11453:34:6",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11426:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11426:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11426:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11508:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11519:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11504:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11504:18:6"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11524:7:6",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11497:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11497:35:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11497:35:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11541:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11553:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11564:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11549:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11549:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11541:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11324:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11338:4:6",
														"type": ""
													}
												],
												"src": "11173:401:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11753:225:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11770:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11781:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11763:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11763:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11763:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11804:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11815:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11800:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11800:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11820:2:6",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11793:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11793:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11793:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11843:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11854:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11839:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11839:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11859:34:6",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11832:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11832:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11832:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11914:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11925:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11910:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11910:18:6"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11930:5:6",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11903:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11903:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11903:33:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11945:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11957:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11968:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11953:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11945:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11730:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11744:4:6",
														"type": ""
													}
												],
												"src": "11579:399:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12157:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12174:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12185:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12167:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12167:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12167:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12208:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12219:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12204:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12204:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12224:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12197:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12197:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12197:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12247:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12258:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12243:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12243:18:6"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12263:34:6",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12236:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12236:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12236:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12318:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12329:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12314:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12314:18:6"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12334:8:6",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12307:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12307:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12307:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12352:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12364:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12375:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12360:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12360:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12352:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12134:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12148:4:6",
														"type": ""
													}
												],
												"src": "11983:402:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_3e85b3bbcaf0e6fcb89de71fa23f33e073f937001216651376dba7e28e5af1d1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"No more tokens to mint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3c5a3f32c12150f5e36dce909285d00c61fc25c7a2b22dde1da6006b709a19b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"User has already minted tokens\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2da833f8d7ed126839b9ef198268abdf3536c4b21ab267733d4f65a97f4c62f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Mismatched input arrays\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063715018a6116100ad578063d559f05b11610071578063d559f05b14610258578063da0239a61461026b578063dd62ed3e14610273578063e5b9559514610286578063f2fde38b146102a957600080fd5b8063715018a6146102075780638da5cb5b1461020f57806395d89b411461022a578063a457c2d714610232578063a9059cbb1461024557600080fd5b806323b872dd116100f457806323b872dd146101a1578063313ce567146101b4578063331d17c1146101c357806339509351146101cb57806370a08231146101de57600080fd5b806306fdde031461013157806307621eca1461014f578063095ea7b314610161578063156e29f61461018457806318160ddd14610199575b600080fd5b6101396102bc565b6040516101469190610ffb565b60405180910390f35b6007545b604051908152602001610146565b61017461016f36600461106c565b61034e565b6040519015158152602001610146565b610197610192366004611096565b610368565b005b600254610153565b6101746101af3660046110c9565b6105da565b60405160188152602001610146565b6101536105fe565b6101746101d936600461106c565b610614565b6101536101ec366004611105565b6001600160a01b031660009081526020819052604090205490565b610197610636565b6005546040516001600160a01b039091168152602001610146565b61013961064a565b61017461024036600461106c565b610659565b61017461025336600461106c565b6106d4565b610197610266366004611173565b6106e2565b600654610153565b61015361028136600461120d565b610aaa565b610174610294366004611240565b60009081526009602052604090205460ff1690565b6101976102b7366004611105565b610ad5565b6060600380546102cb90611259565b80601f01602080910402602001604051908101604052809291908181526020018280546102f790611259565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b60003361035c818585610b4e565b60019150505b92915050565b610370610c72565b6000600654116103c05760405162461bcd60e51b8152602060048201526016602482015275139bc81b5bdc99481d1bdad95b9cc81d1bc81b5a5b9d60521b60448201526064015b60405180910390fd5b60008181526009602052604090205460ff161561041f5760405162461bcd60e51b815260206004820152601e60248201527f557365722068617320616c7265616479206d696e74656420746f6b656e73000060448201526064016103b7565b600754600090806104326103e8866112aa565b61043c91906112cc565b61044691906112eb565b90506000600854600261045991906113e7565b61046d9069ad78ebc5ac62000000006112aa565b905060008160065461047f91906113f3565b905082811115801561049357506001600754115b15610541578092506000600754846103e86104ae91906112cc565b6104b891906112aa565b6104c290876113f3565b9050600060026007546104d591906112aa565b60026007546104e491906112aa565b6104f06103e8856112aa565b6104fa91906112cc565b61050491906112eb565b90506105116002856112aa565b8110610532576007546105256002866112aa565b61052f91906113f3565b90505b61053c81866112eb565b945050505b8260065410156105515760065492505b61055b8684610ccc565b826006600082825461056d91906113f3565b90915550506000848152600960205260409020805460ff19166001179055600654821080159061059f57506001600754115b156105d257600a600760008282546105b791906112aa565b9091555050600880549060006105cc8361140a565b91905055505b505050505050565b6000336105e8858285610d8b565b6105f3858585610e05565b506001949350505050565b6000600160085461060f91906113f3565b905090565b60003361035c8185856106278383610aaa565b61063191906112eb565b610b4e565b61063e610c72565b6106486000610fa9565b565b6060600480546102cb90611259565b600033816106678286610aaa565b9050838110156106c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b7565b6105f38286868403610b4e565b60003361035c818585610e05565b6106ea610c72565b8483146107335760405162461bcd60e51b81526020600482015260176024820152764d69736d61746368656420696e7075742061727261797360481b60448201526064016103b7565b84811461077c5760405162461bcd60e51b81526020600482015260176024820152764d69736d61746368656420696e7075742061727261797360481b60448201526064016103b7565b60005b85811015610aa1576000600654116107d25760405162461bcd60e51b8152602060048201526016602482015275139bc81b5bdc99481d1bdad95b9cc81d1bc81b5a5b9d60521b60448201526064016103b7565b600960008484848181106107e8576107e8611425565b602090810292909201358352508101919091526040016000205460ff16156108525760405162461bcd60e51b815260206004820152601e60248201527f557365722068617320616c7265616479206d696e74656420746f6b656e73000060448201526064016103b7565b60006007546007546103e888888681811061086f5761086f611425565b9050602002013561088091906112aa565b61088a91906112cc565b61089491906112eb565b9050600060085460026108a791906113e7565b6108bb9069ad78ebc5ac62000000006112aa565b90506000816006546108cd91906113f3565b90508281111580156108e157506001600754115b156109a8578092506000600754846103e86108fc91906112cc565b61090691906112aa565b89898781811061091857610918611425565b9050602002013561092991906113f3565b90506000600260075461093c91906112aa565b600260075461094b91906112aa565b6109576103e8856112aa565b61096191906112cc565b61096b91906112eb565b90506109786002856112aa565b81106109995760075461098c6002866112aa565b61099691906113f3565b90505b6109a381866112eb565b945050505b8260065410156109b85760065492505b6109e88a8a868181106109cd576109cd611425565b90506020020160208101906109e29190611105565b84610ccc565b82600660008282546109fa91906113f3565b909155506001905060096000888888818110610a1857610a18611425565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055508160065411158015610a5857506001600754115b15610a8b57600a60076000828254610a7091906112aa565b909155505060088054906000610a858361140a565b91905055505b5050508080610a999061140a565b91505061077f565b50505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610add610c72565b6001600160a01b038116610b425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103b7565b610b4b81610fa9565b50565b6001600160a01b038316610bb05760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b7565b6001600160a01b038216610c115760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b7565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6005546001600160a01b031633146106485760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103b7565b6001600160a01b038216610d225760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b7565b8060026000828254610d3491906112eb565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6000610d978484610aaa565b90506000198114610dff5781811015610df25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b7565b610dff8484848403610b4e565b50505050565b6001600160a01b038316610e695760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b7565b6001600160a01b038216610ecb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b7565b6001600160a01b03831660009081526020819052604090205481811015610f435760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b7565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610dff565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b818110156110285785810183015185820160400152820161100c565b8181111561103a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461106757600080fd5b919050565b6000806040838503121561107f57600080fd5b61108883611050565b946020939093013593505050565b6000806000606084860312156110ab57600080fd5b6110b484611050565b95602085013595506040909401359392505050565b6000806000606084860312156110de57600080fd5b6110e784611050565b92506110f560208501611050565b9150604084013590509250925092565b60006020828403121561111757600080fd5b61112082611050565b9392505050565b60008083601f84011261113957600080fd5b50813567ffffffffffffffff81111561115157600080fd5b6020830191508360208260051b850101111561116c57600080fd5b9250929050565b6000806000806000806060878903121561118c57600080fd5b863567ffffffffffffffff808211156111a457600080fd5b6111b08a838b01611127565b909850965060208901359150808211156111c957600080fd5b6111d58a838b01611127565b909650945060408901359150808211156111ee57600080fd5b506111fb89828a01611127565b979a9699509497509295939492505050565b6000806040838503121561122057600080fd5b61122983611050565b915061123760208401611050565b90509250929050565b60006020828403121561125257600080fd5b5035919050565b600181811c9082168061126d57607f821691505b6020821081141561128e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000826112c757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156112e6576112e6611294565b500290565b600082198211156112fe576112fe611294565b500190565b600181815b8085111561133e57816000190482111561132457611324611294565b8085161561133157918102915b93841c9390800290611308565b509250929050565b60008261135557506001610362565b8161136257506000610362565b816001811461137857600281146113825761139e565b6001915050610362565b60ff84111561139357611393611294565b50506001821b610362565b5060208310610133831016604e8410600b84101617156113c1575081810a610362565b6113cb8383611303565b80600019048211156113df576113df611294565b029392505050565b60006111208383611346565b60008282101561140557611405611294565b500390565b600060001982141561141e5761141e611294565b5060010190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220a48bf51f394cc4e96b77d32e771e9066b4f33d07a29096b7bb72c6af283a59f664736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD559F05B GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD559F05B EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xDA0239A6 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xE5B95595 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x331D17C1 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x7621ECA EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x156E29F6 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x1096 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x153 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x10C9 JUMP JUMPDEST PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x174 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x174 PUSH2 0x240 CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x174 PUSH2 0x253 CALLDATASIZE PUSH1 0x4 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x6D4 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x153 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x120D JUMP JUMPDEST PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x174 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x197 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1105 JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0x1259 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F7 SWAP1 PUSH2 0x1259 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x344 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x319 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x344 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x327 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35C DUP2 DUP6 DUP6 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x370 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD GT PUSH2 0x3C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC81B5BDC99481D1BDAD95B9CC81D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C7265616479206D696E74656420746F6B656E730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x432 PUSH2 0x3E8 DUP7 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x2 PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x46D SWAP1 PUSH10 0xAD78EBC5AC6200000000 PUSH2 0x12AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH2 0x47F SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x493 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD GT JUMPDEST ISZERO PUSH2 0x541 JUMPI DUP1 SWAP3 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP5 PUSH2 0x3E8 PUSH2 0x4AE SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x4C2 SWAP1 DUP8 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x7 SLOAD PUSH2 0x4D5 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x4F0 PUSH2 0x3E8 DUP6 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x504 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP PUSH2 0x511 PUSH1 0x2 DUP6 PUSH2 0x12AA JUMP JUMPDEST DUP2 LT PUSH2 0x532 JUMPI PUSH1 0x7 SLOAD PUSH2 0x525 PUSH1 0x2 DUP7 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x52F SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x53C DUP2 DUP7 PUSH2 0x12EB JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP3 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH2 0x55B DUP7 DUP5 PUSH2 0xCCC JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SLOAD DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x59F JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD GT JUMPDEST ISZERO PUSH2 0x5D2 JUMPI PUSH1 0xA PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x5CC DUP4 PUSH2 0x140A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E8 DUP6 DUP3 DUP6 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x5F3 DUP6 DUP6 DUP6 PUSH2 0xE05 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x8 SLOAD PUSH2 0x60F SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35C DUP2 DUP6 DUP6 PUSH2 0x627 DUP4 DUP4 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0xB4E JUMP JUMPDEST PUSH2 0x63E PUSH2 0xC72 JUMP JUMPDEST PUSH2 0x648 PUSH1 0x0 PUSH2 0xFA9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2CB SWAP1 PUSH2 0x1259 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x667 DUP3 DUP7 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x6C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0x5F3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35C DUP2 DUP6 DUP6 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x6EA PUSH2 0xC72 JUMP JUMPDEST DUP5 DUP4 EQ PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4D69736D61746368656420696E70757420617272617973 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST DUP5 DUP2 EQ PUSH2 0x77C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x4D69736D61746368656420696E70757420617272617973 PUSH1 0x48 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xAA1 JUMPI PUSH1 0x0 PUSH1 0x6 SLOAD GT PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC81B5BDC99481D1BDAD95B9CC81D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x7E8 JUMPI PUSH2 0x7E8 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722068617320616C7265616479206D696E74656420746F6B656E730000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH2 0x3E8 DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x86F JUMPI PUSH2 0x86F PUSH2 0x1425 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x88A SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x2 PUSH2 0x8A7 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0x8BB SWAP1 PUSH10 0xAD78EBC5AC6200000000 PUSH2 0x12AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x6 SLOAD PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD GT JUMPDEST ISZERO PUSH2 0x9A8 JUMPI DUP1 SWAP3 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP5 PUSH2 0x3E8 PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST DUP10 DUP10 DUP8 DUP2 DUP2 LT PUSH2 0x918 JUMPI PUSH2 0x918 PUSH2 0x1425 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x7 SLOAD PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x957 PUSH2 0x3E8 DUP6 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x961 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 POP PUSH2 0x978 PUSH1 0x2 DUP6 PUSH2 0x12AA JUMP JUMPDEST DUP2 LT PUSH2 0x999 JUMPI PUSH1 0x7 SLOAD PUSH2 0x98C PUSH1 0x2 DUP7 PUSH2 0x12AA JUMP JUMPDEST PUSH2 0x996 SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x9A3 DUP2 DUP7 PUSH2 0x12EB JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP3 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x9B8 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH2 0x9E8 DUP11 DUP11 DUP7 DUP2 DUP2 LT PUSH2 0x9CD JUMPI PUSH2 0x9CD PUSH2 0x1425 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x1105 JUMP JUMPDEST DUP5 PUSH2 0xCCC JUMP JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9FA SWAP2 SWAP1 PUSH2 0x13F3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP9 DUP9 DUP9 DUP2 DUP2 LT PUSH2 0xA18 JUMPI PUSH2 0xA18 PUSH2 0x1425 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 SLOAD GT ISZERO DUP1 ISZERO PUSH2 0xA58 JUMPI POP PUSH1 0x1 PUSH1 0x7 SLOAD GT JUMPDEST ISZERO PUSH2 0xA8B JUMPI PUSH1 0xA PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA70 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xA85 DUP4 PUSH2 0x140A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0xA99 SWAP1 PUSH2 0x140A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x77F JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xADD PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0xB4B DUP2 PUSH2 0xFA9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x12EB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD97 DUP5 DUP5 PUSH2 0xAAA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDFF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xDF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH2 0xDFF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xB4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE69 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xECB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xF43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1028 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x100C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1067 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1088 DUP4 PUSH2 0x1050 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B4 DUP5 PUSH2 0x1050 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10E7 DUP5 PUSH2 0x1050 JUMP JUMPDEST SWAP3 POP PUSH2 0x10F5 PUSH1 0x20 DUP6 ADD PUSH2 0x1050 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1120 DUP3 PUSH2 0x1050 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x116C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x118C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B0 DUP11 DUP4 DUP12 ADD PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11D5 DUP11 DUP4 DUP12 ADD PUSH2 0x1127 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11FB DUP10 DUP3 DUP11 ADD PUSH2 0x1127 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1229 DUP4 PUSH2 0x1050 JUMP JUMPDEST SWAP2 POP PUSH2 0x1237 PUSH1 0x20 DUP5 ADD PUSH2 0x1050 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x126D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x128E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12E6 JUMPI PUSH2 0x12E6 PUSH2 0x1294 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x12FE JUMPI PUSH2 0x12FE PUSH2 0x1294 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x133E JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1324 JUMPI PUSH2 0x1324 PUSH2 0x1294 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1331 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1308 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1355 JUMPI POP PUSH1 0x1 PUSH2 0x362 JUMP JUMPDEST DUP2 PUSH2 0x1362 JUMPI POP PUSH1 0x0 PUSH2 0x362 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1378 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1382 JUMPI PUSH2 0x139E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x362 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1393 JUMPI PUSH2 0x1393 PUSH2 0x1294 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x362 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x13C1 JUMPI POP DUP2 DUP2 EXP PUSH2 0x362 JUMP JUMPDEST PUSH2 0x13CB DUP4 DUP4 PUSH2 0x1303 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x13DF JUMPI PUSH2 0x13DF PUSH2 0x1294 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1120 DUP4 DUP4 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1405 JUMPI PUSH2 0x1405 PUSH2 0x1294 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x141E JUMPI PUSH2 0x141E PUSH2 0x1294 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 DUP12 CREATE2 0x1F CODECOPY 0x4C 0xC4 0xE9 PUSH12 0x77D32E771E9066B4F33D07A2 SWAP1 SWAP7 0xB7 0xBB PUSH19 0xC6AF283A59F664736F6C634300080900330000 ",
							"sourceMap": "175:7932:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7497:172:5;7572:14;;7497:172;;;762:25:6;;;750:2;735:18;7497:172:5;616:177:6;4444:197:1;;;;;;:::i;:::-;;:::i;:::-;;;1400:14:6;;1393:22;1375:41;;1363:2;1348:18;4444:197:1;1235:187:6;2115:2388:5;;;;;;:::i;:::-;;:::i;:::-;;3255:106:1;3342:12;;3255:106;;5203:256;;;;;;:::i;:::-;;:::i;8011:93:5:-;;;8094:2;2229:36:6;;2217:2;2202:18;8011:93:5;2087:184:6;7826:173:5;;;:::i;5854:234:1:-;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:1;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:0;;;:::i;1201:85::-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:0;;;2613:51:6;;2601:2;2586:18;1201:85:0;2467:203:6;2369:102:1;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;4545:2790:5:-;;;;;;:::i;:::-;;:::i;7343:146::-;7420:16;;7343:146;;3987:149:1;;;;;;:::i;:::-;;:::i;7677:141:5:-;;;;;;:::i;:::-;7731:4;7755:11;;;:7;:11;;;;;;;;;7677:141;2074:198:0;;;;;;:::i;:::-;;:::i;2158:98:1:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:4;4581:32:1;719:10:4;4597:7:1;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;2115:2388:5:-;1094:13:0;:11;:13::i;:::-;2234:1:5::1;2215:16;;:20;2207:55;;;::::0;-1:-1:-1;;;2207:55:5;;5177:2:6;2207:55:5::1;::::0;::::1;5159:21:6::0;5216:2;5196:18;;;5189:30;-1:-1:-1;;;5235:18:6;;;5228:52;5297:18;;2207:55:5::1;;;;;;;;;2306:11;::::0;;;:7:::1;:11;::::0;;;;;::::1;;2305:12;2297:55;;;::::0;-1:-1:-1;;;2297:55:5;;5528:2:6;2297:55:5::1;::::0;::::1;5510:21:6::0;5567:2;5547:18;;;5540:30;5606:32;5586:18;;;5579:60;5656:18;;2297:55:5::1;5326:354:6::0;2297:55:5::1;2462:14;::::0;2401:20:::1;::::0;2462:14;2425:16:::1;2437:4;2425:9:::0;:16:::1;:::i;:::-;2424:35;;;;:::i;:::-;:52;;;;:::i;:::-;2401:75;;2532:19;2577:13;;2572:1;:18;;;;:::i;:::-;2554:37;::::0;403:15:::1;2554:37;:::i;:::-;2532:59;;2635:23;2680:11;2661:16;;:30;;;;:::i;:::-;2635:56;;2870:12;2851:15;:31;;:62;;;;;525:35;2886:14;;:27;2851:62;2847:998;;;2945:15;2930:30;;3025:26;3090:14;;3067:12;3082:4;3067:19;;;;:::i;:::-;:38;;;;:::i;:::-;3054:52;::::0;:9;:52:::1;:::i;:::-;3025:81;;3163:24;3261:1;3244:14;;:18;;;;:::i;:::-;3238:1;3221:14;;:18;;;;:::i;:::-;3191:25;3212:4;3191:18:::0;:25:::1;:::i;:::-;3190:50;;;;:::i;:::-;:73;;;;:::i;:::-;3163:100:::0;-1:-1:-1;3463:15:5::1;3477:1;3463:11:::0;:15:::1;:::i;:::-;3443:16;:35;3439:300;;3538:14;::::0;3519:15:::1;3533:1;3519:11:::0;:15:::1;:::i;:::-;3518:34;;;;:::i;:::-;3499:53;;3439:300;3753:32;3769:16:::0;3753:32;::::1;:::i;:::-;;;2915:930;;2847:998;3926:12;3907:16;;:31;3903:95;;;3970:16;;3955:31;;3903:95;4082:28;4088:7;4097:12;4082:5;:28::i;:::-;4141:12;4121:16;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4164:11:5::1;::::0;;;:7:::1;:11;::::0;;;;:18;;-1:-1:-1;;4164:18:5::1;4178:4;4164:18;::::0;;4354:16:::1;::::0;:31;-1:-1:-1;4354:31:5;::::1;::::0;:62:::1;;;525:35;4389:14;;:27;4354:62;4350:146;;;4451:2;4433:14;;:20;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4469:13:5::1;:15:::0;;;:13:::1;:15;::::0;::::1;:::i;:::-;;;;;;4350:146;2196:2307;;;2115:2388:::0;;;:::o;5203:256:1:-;5300:4;719:10:4;5356:38:1;5372:4;719:10:4;5387:6:1;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:1;;5203:256;-1:-1:-1;;;;5203:256:1:o;7826:173:5:-;7876:7;7919:1;7903:13;;:17;;;;:::i;:::-;7896:24;;7826:173;:::o;5854:234:1:-;5942:4;719:10:4;5996:64:1;719:10:4;6012:7:1;6049:10;6021:25;719:10:4;6012:7:1;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;2369:102:1:-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:4;6668:4:1;6749:25;719:10:4;6766:7:1;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:1;;8191:2:6;6784:85:1;;;8173:21:6;8230:2;8210:18;;;8203:30;8269:34;8249:18;;;8242:62;-1:-1:-1;;;8320:18:6;;;8313:35;8365:19;;6784:85:1;7989:401:6;6784:85:1;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:4;3873:28:1;719:10:4;3890:2:1;3894:6;3873:9;:28::i;4545:2790:5:-;1094:13:0;:11;:13::i;:::-;4685:35:5;;::::1;4677:71;;;::::0;-1:-1:-1;;;4677:71:5;;8597:2:6;4677:71:5::1;::::0;::::1;8579:21:6::0;8636:2;8616:18;;;8609:30;-1:-1:-1;;;8655:18:6;;;8648:53;8718:18;;4677:71:5::1;8395:347:6::0;4677:71:5::1;4767:29:::0;;::::1;4759:65;;;::::0;-1:-1:-1;;;4759:65:5;;8597:2:6;4759:65:5::1;::::0;::::1;8579:21:6::0;8636:2;8616:18;;;8609:30;-1:-1:-1;;;8655:18:6;;;8648:53;8718:18;;4759:65:5::1;8395:347:6::0;4759:65:5::1;4842:9;4837:2491;4857:19:::0;;::::1;4837:2491;;;4925:1;4906:16;;:20;4898:55;;;::::0;-1:-1:-1;;;4898:55:5;;5177:2:6;4898:55:5::1;::::0;::::1;5159:21:6::0;5216:2;5196:18;;;5189:30;-1:-1:-1;;;5235:18:6;;;5228:52;5297:18;;4898:55:5::1;4975:346:6::0;4898:55:5::1;5001:7;:15;5009:3;;5013:1;5009:6;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;5001:15:::0;;-1:-1:-1;5001:15:5;::::1;::::0;;;;;;-1:-1:-1;5001:15:5;;::::1;;5000:16;4992:59;;;::::0;-1:-1:-1;;;4992:59:5;;5528:2:6;4992:59:5::1;::::0;::::1;5510:21:6::0;5567:2;5547:18;;;5540:30;5606:32;5586:18;;;5579:60;5656:18;;4992:59:5::1;5326:354:6::0;4992:59:5::1;5104:20;5168:14;;5151;;5143:4;5128:9;;5138:1;5128:12;;;;;;;:::i;:::-;;;;;;;:19;;;;:::i;:::-;5127:38;;;;:::i;:::-;:55;;;;:::i;:::-;5104:78;;5242:19;5287:13;;5282:1;:18;;;;:::i;:::-;5264:37;::::0;403:15:::1;5264:37;:::i;:::-;5242:59;;5349:23;5394:11;5375:16;;:30;;;;:::i;:::-;5349:56;;5592:12;5573:15;:31;;:62;;;;;525:35;5608:14;;:27;5573:62;5569:1037;;;5671:15;5656:30;;5755:26;5823:14;;5800:12;5815:4;5800:19;;;;:::i;:::-;:38;;;;:::i;:::-;5784:9;;5794:1;5784:12;;;;;;;:::i;:::-;;;;;;;:55;;;;:::i;:::-;5755:84;;5900:24;5998:1;5981:14;;:18;;;;:::i;:::-;5975:1;5958:14;;:18;;;;:::i;:::-;5928:25;5949:4;5928:18:::0;:25:::1;:::i;:::-;5927:50;;;;:::i;:::-;:73;;;;:::i;:::-;5900:100:::0;-1:-1:-1;6208:15:5::1;6222:1;6208:11:::0;:15:::1;:::i;:::-;6188:16;:35;6184:308;;6287:14;::::0;6268:15:::1;6282:1;6268:11:::0;:15:::1;:::i;:::-;6267:34;;;;:::i;:::-;6248:53;;6184:308;6510:32;6526:16:::0;6510:32;::::1;:::i;:::-;;;5637:969;;5569:1037;6695:12;6676:16;;:31;6672:103;;;6743:16;;6728:31;;6672:103;6867:32;6873:8;;6882:1;6873:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6886:12;6867:5;:32::i;:::-;6934:12;6914:16;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;6979:4:5::1;::::0;-1:-1:-1;6961:7:5::1;:15;6969:3:::0;;6973:1;6969:6;;::::1;;;;;:::i;:::-;;;;;;;6961:15;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;7183:11;7163:16;;:31;;:62;;;;;525:35;7198:14;;:27;7163:62;7159:158;;;7264:2;7246:14;;:20;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7286:13:5::1;:15:::0;;;:13:::1;:15;::::0;::::1;:::i;:::-;;;;;;7159:158;4883:2445;;;4878:3;;;;;:::i;:::-;;;;4837:2491;;;;4545:2790:::0;;;;;;:::o;3987:149:1:-;-1:-1:-1;;;;;4102:18:1;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;9081:2:6;2154:73:0::1;::::0;::::1;9063:21:6::0;9120:2;9100:18;;;9093:30;9159:34;9139:18;;;9132:62;-1:-1:-1;;;9210:18:6;;;9203:36;9256:19;;2154:73:0::1;8879:402:6::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;10457:340:1:-;-1:-1:-1;;;;;10558:19:1;;10550:68;;;;-1:-1:-1;;;10550:68:1;;9488:2:6;10550:68:1;;;9470:21:6;9527:2;9507:18;;;9500:30;9566:34;9546:18;;;9539:62;-1:-1:-1;;;9617:18:6;;;9610:34;9661:19;;10550:68:1;9286:400:6;10550:68:1;-1:-1:-1;;;;;10636:21:1;;10628:68;;;;-1:-1:-1;;;10628:68:1;;9893:2:6;10628:68:1;;;9875:21:6;9932:2;9912:18;;;9905:30;9971:34;9951:18;;;9944:62;-1:-1:-1;;;10022:18:6;;;10015:32;10064:19;;10628:68:1;9691:398:6;10628:68:1;-1:-1:-1;;;;;10707:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;762:25:6;;;10758:32:1;;735:18:6;10758:32:1;;;;;;;10457:340;;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;10296:2:6;1414:68:0;;;10278:21:6;;;10315:18;;;10308:30;10374:34;10354:18;;;10347:62;10426:18;;1414:68:0;10094:356:6;8520:535:1;-1:-1:-1;;;;;8603:21:1;;8595:65;;;;-1:-1:-1;;;8595:65:1;;10657:2:6;8595:65:1;;;10639:21:6;10696:2;10676:18;;;10669:30;10735:33;10715:18;;;10708:61;10786:18;;8595:65:1;10455:355:6;8595:65:1;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:1;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;762:25:6;;;8952:37:1;;735:18:6;8952:37:1;;;;;;;8520:535;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:1;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:1;;11017:2:6;11297:68:1;;;10999:21:6;11056:2;11036:18;;;11029:30;11095:31;11075:18;;;11068:59;11144:18;;11297:68:1;10815:353:6;11297:68:1;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:1;;7544:68;;;;-1:-1:-1;;;7544:68:1;;11375:2:6;7544:68:1;;;11357:21:6;11414:2;11394:18;;;11387:30;11453:34;11433:18;;;11426:62;-1:-1:-1;;;11504:18:6;;;11497:35;11549:19;;7544:68:1;11173:401:6;7544:68:1;-1:-1:-1;;;;;7630:16:1;;7622:64;;;;-1:-1:-1;;;7622:64:1;;11781:2:6;7622:64:1;;;11763:21:6;11820:2;11800:18;;;11793:30;11859:34;11839:18;;;11832:62;-1:-1:-1;;;11910:18:6;;;11903:33;11953:19;;7622:64:1;11579:399:6;7622:64:1;-1:-1:-1;;;;;7768:15:1;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:1;;12185:2:6;7793:72:1;;;12167:21:6;12224:2;12204:18;;;12197:30;12263:34;12243:18;;;12236:62;-1:-1:-1;;;12314:18:6;;;12307:36;12360:19;;7793:72:1;11983:402:6;7793:72:1;-1:-1:-1;;;;;7899:15:1;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;762:25:6;;;8114:13:1;;8163:26;;735:18:6;8163:26:1;;;;;;;8200:37;12073:91;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:597:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:6;574:15;-1:-1:-1;;570:29:6;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:6:o;798:173::-;866:20;;-1:-1:-1;;;;;915:31:6;;905:42;;895:70;;961:1;958;951:12;895:70;798:173;;;:::o;976:254::-;1044:6;1052;1105:2;1093:9;1084:7;1080:23;1076:32;1073:52;;;1121:1;1118;1111:12;1073:52;1144:29;1163:9;1144:29;:::i;:::-;1134:39;1220:2;1205:18;;;;1192:32;;-1:-1:-1;;;976:254:6:o;1427:322::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;1688:2;1673:18;;1660:32;;-1:-1:-1;1739:2:6;1724:18;;;1711:32;;1427:322;-1:-1:-1;;;1427:322:6:o;1754:328::-;1831:6;1839;1847;1900:2;1888:9;1879:7;1875:23;1871:32;1868:52;;;1916:1;1913;1906:12;1868:52;1939:29;1958:9;1939:29;:::i;:::-;1929:39;;1987:38;2021:2;2010:9;2006:18;1987:38;:::i;:::-;1977:48;;2072:2;2061:9;2057:18;2044:32;2034:42;;1754:328;;;;;:::o;2276:186::-;2335:6;2388:2;2376:9;2367:7;2363:23;2359:32;2356:52;;;2404:1;2401;2394:12;2356:52;2427:29;2446:9;2427:29;:::i;:::-;2417:39;2276:186;-1:-1:-1;;;2276:186:6:o;2675:367::-;2738:8;2748:6;2802:3;2795:4;2787:6;2783:17;2779:27;2769:55;;2820:1;2817;2810:12;2769:55;-1:-1:-1;2843:20:6;;2886:18;2875:30;;2872:50;;;2918:1;2915;2908:12;2872:50;2955:4;2947:6;2943:17;2931:29;;3015:3;3008:4;2998:6;2995:1;2991:14;2983:6;2979:27;2975:38;2972:47;2969:67;;;3032:1;3029;3022:12;2969:67;2675:367;;;;;:::o;3047:1088::-;3205:6;3213;3221;3229;3237;3245;3298:2;3286:9;3277:7;3273:23;3269:32;3266:52;;;3314:1;3311;3304:12;3266:52;3354:9;3341:23;3383:18;3424:2;3416:6;3413:14;3410:34;;;3440:1;3437;3430:12;3410:34;3479:70;3541:7;3532:6;3521:9;3517:22;3479:70;:::i;:::-;3568:8;;-1:-1:-1;3453:96:6;-1:-1:-1;3656:2:6;3641:18;;3628:32;;-1:-1:-1;3672:16:6;;;3669:36;;;3701:1;3698;3691:12;3669:36;3740:72;3804:7;3793:8;3782:9;3778:24;3740:72;:::i;:::-;3831:8;;-1:-1:-1;3714:98:6;-1:-1:-1;3919:2:6;3904:18;;3891:32;;-1:-1:-1;3935:16:6;;;3932:36;;;3964:1;3961;3954:12;3932:36;;4003:72;4067:7;4056:8;4045:9;4041:24;4003:72;:::i;:::-;3047:1088;;;;-1:-1:-1;3047:1088:6;;-1:-1:-1;3047:1088:6;;4094:8;;3047:1088;-1:-1:-1;;;3047:1088:6:o;4140:260::-;4208:6;4216;4269:2;4257:9;4248:7;4244:23;4240:32;4237:52;;;4285:1;4282;4275:12;4237:52;4308:29;4327:9;4308:29;:::i;:::-;4298:39;;4356:38;4390:2;4379:9;4375:18;4356:38;:::i;:::-;4346:48;;4140:260;;;;;:::o;4405:180::-;4464:6;4517:2;4505:9;4496:7;4492:23;4488:32;4485:52;;;4533:1;4530;4523:12;4485:52;-1:-1:-1;4556:23:6;;4405:180;-1:-1:-1;4405:180:6:o;4590:380::-;4669:1;4665:12;;;;4712;;;4733:61;;4787:4;4779:6;4775:17;4765:27;;4733:61;4840:2;4832:6;4829:14;4809:18;4806:38;4803:161;;;4886:10;4881:3;4877:20;4874:1;4867:31;4921:4;4918:1;4911:15;4949:4;4946:1;4939:15;4803:161;;4590:380;;;:::o;5685:127::-;5746:10;5741:3;5737:20;5734:1;5727:31;5777:4;5774:1;5767:15;5801:4;5798:1;5791:15;5817:217;5857:1;5883;5873:132;;5927:10;5922:3;5918:20;5915:1;5908:31;5962:4;5959:1;5952:15;5990:4;5987:1;5980:15;5873:132;-1:-1:-1;6019:9:6;;5817:217::o;6039:168::-;6079:7;6145:1;6141;6137:6;6133:14;6130:1;6127:21;6122:1;6115:9;6108:17;6104:45;6101:71;;;6152:18;;:::i;:::-;-1:-1:-1;6192:9:6;;6039:168::o;6212:128::-;6252:3;6283:1;6279:6;6276:1;6273:13;6270:39;;;6289:18;;:::i;:::-;-1:-1:-1;6325:9:6;;6212:128::o;6345:422::-;6434:1;6477:5;6434:1;6491:270;6512:7;6502:8;6499:21;6491:270;;;6571:4;6567:1;6563:6;6559:17;6553:4;6550:27;6547:53;;;6580:18;;:::i;:::-;6630:7;6620:8;6616:22;6613:55;;;6650:16;;;;6613:55;6729:22;;;;6689:15;;;;6491:270;;;6495:3;6345:422;;;;;:::o;6772:806::-;6821:5;6851:8;6841:80;;-1:-1:-1;6892:1:6;6906:5;;6841:80;6940:4;6930:76;;-1:-1:-1;6977:1:6;6991:5;;6930:76;7022:4;7040:1;7035:59;;;;7108:1;7103:130;;;;7015:218;;7035:59;7065:1;7056:10;;7079:5;;;7103:130;7140:3;7130:8;7127:17;7124:43;;;7147:18;;:::i;:::-;-1:-1:-1;;7203:1:6;7189:16;;7218:5;;7015:218;;7317:2;7307:8;7304:16;7298:3;7292:4;7289:13;7285:36;7279:2;7269:8;7266:16;7261:2;7255:4;7252:12;7248:35;7245:77;7242:159;;;-1:-1:-1;7354:19:6;;;7386:5;;7242:159;7433:34;7458:8;7452:4;7433:34;:::i;:::-;7503:6;7499:1;7495:6;7491:19;7482:7;7479:32;7476:58;;;7514:18;;:::i;:::-;7552:20;;6772:806;-1:-1:-1;;;6772:806:6:o;7583:131::-;7643:5;7672:36;7699:8;7693:4;7672:36;:::i;7719:125::-;7759:4;7787:1;7784;7781:8;7778:34;;;7792:18;;:::i;:::-;-1:-1:-1;7829:9:6;;7719:125::o;7849:135::-;7888:3;-1:-1:-1;;7909:17:6;;7906:43;;;7929:18;;:::i;:::-;-1:-1:-1;7976:1:6;7965:13;;7849:135::o;8747:127::-;8808:10;8803:3;8799:20;8796:1;8789:31;8839:4;8836:1;8829:15;8863:4;8860:1;8853:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1046600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24673",
								"balanceOf(address)": "2651",
								"batchMint(address[],uint256[],uint256[])": "infinite",
								"currentReward()": "2327",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "27039",
								"getHalvingCount()": "2452",
								"hasMinted(uint256)": "2538",
								"increaseAllowance(address,uint256)": "27071",
								"mint(address,uint256,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2346",
								"remainingSupply()": "2336",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2404",
								"transfer(address,uint256)": "51161",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28446"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 403,
									"end": 418,
									"name": "PUSH",
									"source": 5,
									"value": "AD78EBC5AC6200000000"
								},
								{
									"begin": 609,
									"end": 658,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 609,
									"end": 658,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 737,
									"end": 753,
									"name": "PUSH",
									"source": 5,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 704,
									"end": 753,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 704,
									"end": 753,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 847,
									"end": 848,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 815,
									"end": 848,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 815,
									"end": 848,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 999,
									"end": 1259,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2A34B5AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "54494B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1049,
									"end": 1074,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1104,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 403,
									"end": 418,
									"name": "PUSH",
									"source": 5,
									"value": "AD78EBC5AC6200000000"
								},
								{
									"begin": 256,
									"end": 266,
									"name": "PUSH",
									"source": 5,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 1077,
									"end": 1104,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 1077,
									"end": 1104,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1077,
									"end": 1104,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1077,
									"end": 1104,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1049,
									"end": 1104,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1186,
									"end": 1222,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1192,
									"end": 1202,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1049,
									"end": 1104,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1191,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 1186,
									"end": 1222,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1186,
									"end": 1222,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1186,
									"end": 1222,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1038,
									"end": 1259,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 478,
									"end": 480,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 460,
									"end": 481,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 517,
									"end": 519,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 497,
									"end": 515,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 497,
									"end": 515,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 497,
									"end": 515,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 490,
									"end": 520,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 556,
									"end": 589,
									"name": "PUSH",
									"source": 6,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 536,
									"end": 554,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 536,
									"end": 554,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 536,
									"end": 554,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 529,
									"end": 590,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 607,
									"end": 625,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 607,
									"end": 625,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 915,
									"end": 940,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 915,
									"end": 940,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 915,
									"end": 940,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 888,
									"end": 906,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 146,
									"end": 271,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 146,
									"end": 271,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 186,
									"end": 190,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 215,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 211,
									"end": 212,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 208,
									"end": 216,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 205,
									"end": 239,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 205,
									"end": 239,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 205,
									"end": 239,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 219,
									"end": 237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 219,
									"end": 237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 219,
									"end": 237,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 219,
									"end": 237,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 219,
									"end": 237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 256,
									"end": 265,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 256,
									"end": 265,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 146,
									"end": 271,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 636,
									"end": 764,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 636,
									"end": 764,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 676,
									"end": 679,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 708,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 703,
									"end": 709,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 700,
									"end": 701,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 697,
									"end": 710,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 694,
									"end": 733,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 694,
									"end": 733,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 694,
									"end": 733,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 713,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 749,
									"end": 758,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 749,
									"end": 758,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 636,
									"end": 764,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1331,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 951,
									"end": 1331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1031,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1026,
									"end": 1038,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1026,
									"end": 1038,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1026,
									"end": 1038,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1026,
									"end": 1038,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1073,
									"end": 1085,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1073,
									"end": 1085,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1073,
									"end": 1085,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1094,
									"end": 1155,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1094,
									"end": 1155,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1148,
									"end": 1152,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1140,
									"end": 1146,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1136,
									"end": 1153,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1126,
									"end": 1153,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1094,
									"end": 1155,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 1094,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1201,
									"end": 1203,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1193,
									"end": 1199,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1190,
									"end": 1204,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1170,
									"end": 1188,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1205,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1325,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1325,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1164,
									"end": 1325,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1247,
									"end": 1257,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 1242,
									"end": 1245,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 1238,
									"end": 1258,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1235,
									"end": 1236,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1228,
									"end": 1259,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1282,
									"end": 1286,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1279,
									"end": 1280,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1272,
									"end": 1287,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1310,
									"end": 1314,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1307,
									"end": 1308,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1300,
									"end": 1315,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1325,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1164,
									"end": 1325,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1164,
									"end": 1325,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 951,
									"end": 1331,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 951,
									"end": 1331,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 951,
									"end": 1331,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 951,
									"end": 1331,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1331,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 951,
									"end": 1331,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 175,
									"end": 8107,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a48bf51f394cc4e96b77d32e771e9066b4f33d07a29096b7bb72c6af283a59f664736f6c63430008090033",
									".code": [
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "D559F05B"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "D559F05B"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "DA0239A6"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "E5B95595"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "A457C2D7"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "331D17C1"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "39509351"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "7621ECA"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "156E29F6"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 175,
											"end": 8107,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7497,
											"end": 7669,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7497,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7586,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7572,
											"end": 7586,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7497,
											"end": 7669,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 7497,
											"end": 7669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7497,
											"end": 7669,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7497,
											"end": 7669,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 762,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 762,
											"end": 787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 750,
											"end": 752,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 616,
											"end": 793,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1414,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1393,
											"end": 1415,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1375,
											"end": 1416,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1375,
											"end": 1416,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1235,
											"end": 1422,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8011,
											"end": 8104,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 8011,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8011,
											"end": 8104,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8011,
											"end": 8104,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8094,
											"end": 8096,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2087,
											"end": 2271,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2613,
											"end": 2664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2467,
											"end": 2670,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7343,
											"end": 7489,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 7343,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 7436,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7420,
											"end": 7436,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 7343,
											"end": 7489,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7735,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7762,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7755,
											"end": 7766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7677,
											"end": 7818,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2231,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2215,
											"end": 2231,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2215,
											"end": 2235,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81B5BDC99481D1BDAD95B9CC81D1BC81B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5297,
											"end": 5315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2207,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2313,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2306,
											"end": 2317,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2305,
											"end": 2317,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5510,
											"end": 5531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5638,
											"name": "PUSH",
											"source": 6,
											"value": "557365722068617320616C7265616479206D696E74656420746F6B656E730000"
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5326,
											"end": 5680,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2297,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2462,
											"end": 2476,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2421,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2476,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2437,
											"end": 2441,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2425,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2424,
											"end": 2459,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2424,
											"end": 2459,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2424,
											"end": 2459,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2424,
											"end": 2459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2424,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2577,
											"end": 2590,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2572,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2554,
											"end": 2591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 418,
											"name": "PUSH",
											"source": 5,
											"value": "AD78EBC5AC6200000000"
										},
										{
											"begin": 2554,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2554,
											"end": 2591,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2554,
											"end": 2591,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2554,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2532,
											"end": 2591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2658,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2661,
											"end": 2677,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2661,
											"end": 2691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2661,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2661,
											"end": 2691,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2661,
											"end": 2691,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 2661,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2635,
											"end": 2691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2870,
											"end": 2882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2882,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2882,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 560,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2886,
											"end": 2900,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2886,
											"end": 2900,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2886,
											"end": 2913,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2851,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 3845,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2847,
											"end": 3845,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 2960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2960,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3090,
											"end": 3104,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3082,
											"end": 3086,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3067,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3067,
											"end": 3105,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3067,
											"end": 3105,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3067,
											"end": 3105,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3067,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3063,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3054,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3244,
											"end": 3258,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3244,
											"end": 3258,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3244,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3238,
											"end": 3239,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3221,
											"end": 3235,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3221,
											"end": 3235,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3212,
											"end": 3216,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 3191,
											"end": 3209,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3191,
											"end": 3216,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3216,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3191,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3190,
											"end": 3240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3190,
											"end": 3240,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3190,
											"end": 3240,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3190,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3190,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3163,
											"end": 3263,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3463,
											"end": 3474,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3478,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3439,
											"end": 3739,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3538,
											"end": 3552,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3533,
											"end": 3534,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3519,
											"end": 3530,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3519,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3518,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3499,
											"end": 3552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3739,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3439,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 3845,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 3845,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2847,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 3938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3923,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3907,
											"end": 3923,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3938,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3998,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3903,
											"end": 3998,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3970,
											"end": 3986,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3970,
											"end": 3986,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3955,
											"end": 3986,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3955,
											"end": 3986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3903,
											"end": 3998,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3903,
											"end": 3998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4082,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4088,
											"end": 4095,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4097,
											"end": 4109,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4082,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4082,
											"end": 4110,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4082,
											"end": 4110,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4082,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4153,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4175,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4178,
											"end": 4182,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4385,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4385,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4385,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4354,
											"end": 4416,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 560,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4389,
											"end": 4403,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4389,
											"end": 4403,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4389,
											"end": 4416,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4354,
											"end": 4416,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4354,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4496,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4350,
											"end": 4496,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4453,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4433,
											"end": 4447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4453,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4469,
											"end": 4484,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4496,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4350,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 4503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 4503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 4503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 4503,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7876,
											"end": 7883,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7920,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7903,
											"end": 7916,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7903,
											"end": 7916,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7903,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7826,
											"end": 7999,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1888,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8193,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8230,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8203,
											"end": 8233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8303,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 8249,
											"end": 8267,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8249,
											"end": 8267,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8242,
											"end": 8304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8320,
											"end": 8338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8313,
											"end": 8348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8384,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 8365,
											"end": 8384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7989,
											"end": 8390,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4685,
											"end": 4720,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4720,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4720,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8597,
											"end": 8599,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8579,
											"end": 8600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D69736D61746368656420696E70757420617272617973"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8648,
											"end": 8701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 8395,
											"end": 8742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4677,
											"end": 4748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4796,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4767,
											"end": 4796,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8597,
											"end": 8599,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8579,
											"end": 8600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D69736D61746368656420696E70757420617272617973"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8673,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8648,
											"end": 8701,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 8395,
											"end": 8742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4759,
											"end": 4824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4876,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4876,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4857,
											"end": 4876,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4922,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4906,
											"end": 4922,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4926,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5159,
											"end": 5180,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5216,
											"end": 5218,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5196,
											"end": 5214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5189,
											"end": 5219,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81B5BDC99481D1BDAD95B9CC81D1BC81B5A5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5280,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5315,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5297,
											"end": 5315,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4975,
											"end": 5321,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4898,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5008,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5012,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5012,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5001,
											"end": 5016,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5016,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5510,
											"end": 5531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "1E"
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5570,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5606,
											"end": 5638,
											"name": "PUSH",
											"source": 6,
											"value": "557365722068617320616C7265616479206D696E74656420746F6B656E730000"
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5586,
											"end": 5604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5639,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5326,
											"end": 5680,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4992,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5182,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5168,
											"end": 5182,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5151,
											"end": 5165,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5151,
											"end": 5165,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5143,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 5128,
											"end": 5137,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5137,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5139,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5140,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5128,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5127,
											"end": 5182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5127,
											"end": 5182,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5127,
											"end": 5182,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5127,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5104,
											"end": 5182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5104,
											"end": 5182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5287,
											"end": 5300,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 5287,
											"end": 5300,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5283,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5264,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5264,
											"end": 5301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 403,
											"end": 418,
											"name": "PUSH",
											"source": 5,
											"value": "AD78EBC5AC6200000000"
										},
										{
											"begin": 5264,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5264,
											"end": 5301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5301,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5264,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5391,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 5375,
											"end": 5391,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 5375,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5604,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5573,
											"end": 5635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 560,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5608,
											"end": 5622,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5608,
											"end": 5622,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5608,
											"end": 5635,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5573,
											"end": 5635,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5573,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5569,
											"end": 6606,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5569,
											"end": 6606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5569,
											"end": 6606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5671,
											"end": 5686,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5686,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5656,
											"end": 5686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5823,
											"end": 5837,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5823,
											"end": 5837,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5812,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5815,
											"end": 5819,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 5800,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5800,
											"end": 5819,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5800,
											"end": 5819,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5819,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5800,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5800,
											"end": 5838,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5800,
											"end": 5838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5800,
											"end": 5838,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5838,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5800,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5793,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5793,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5796,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5784,
											"end": 5839,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5784,
											"end": 5839,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5784,
											"end": 5839,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 5784,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5839,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5755,
											"end": 5839,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5981,
											"end": 5995,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5981,
											"end": 5995,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5981,
											"end": 5999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5975,
											"end": 5976,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5958,
											"end": 5972,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 5958,
											"end": 5972,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5949,
											"end": 5953,
											"name": "PUSH",
											"source": 5,
											"value": "3E8"
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 5928,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5927,
											"end": 5977,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5927,
											"end": 5977,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5927,
											"end": 5977,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5927,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 5927,
											"end": 6000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 6000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6222,
											"end": 6223,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6208,
											"end": 6219,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6188,
											"end": 6223,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6184,
											"end": 6492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6287,
											"end": 6301,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 6287,
											"end": 6301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6282,
											"end": 6283,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6268,
											"end": 6279,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6268,
											"end": 6283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6268,
											"end": 6283,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 6268,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6267,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6267,
											"end": 6301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6267,
											"end": 6301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6267,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 6267,
											"end": 6301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6267,
											"end": 6301,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 6267,
											"end": 6301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6248,
											"end": 6301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6248,
											"end": 6301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6492,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6184,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6526,
											"end": 6542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 6606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5637,
											"end": 6606,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5569,
											"end": 6606,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5569,
											"end": 6606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6695,
											"end": 6707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6692,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6676,
											"end": 6692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6707,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6775,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6672,
											"end": 6775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6743,
											"end": 6759,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6759,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6728,
											"end": 6759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6672,
											"end": 6775,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 6672,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6867,
											"end": 6899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6873,
											"end": 6881,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6881,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 6882,
											"end": 6883,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6886,
											"end": 6898,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6867,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6867,
											"end": 6899,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6867,
											"end": 6899,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 6867,
											"end": 6899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6934,
											"end": 6946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6930,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 6914,
											"end": 6930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6914,
											"end": 6946,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6979,
											"end": 6983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6961,
											"end": 6968,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6969,
											"end": 6972,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6972,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6961,
											"end": 6983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7179,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 7163,
											"end": 7179,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7194,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7194,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 525,
											"end": 560,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 7198,
											"end": 7212,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7198,
											"end": 7212,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7198,
											"end": 7225,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 7163,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7159,
											"end": 7317,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7159,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7159,
											"end": 7317,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 7246,
											"end": 7260,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 7246,
											"end": 7260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7246,
											"end": 7266,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7286,
											"end": 7299,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7299,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7159,
											"end": 7317,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 7159,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 7328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 7328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 7328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 7328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4545,
											"end": 7335,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9081,
											"end": 9083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9063,
											"end": 9084,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9120,
											"end": 9122,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9118,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9093,
											"end": 9123,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9159,
											"end": 9193,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9139,
											"end": 9157,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9132,
											"end": 9194,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9210,
											"end": 9228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9203,
											"end": 9239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9256,
											"end": 9275,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9256,
											"end": 9275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8879,
											"end": 9281,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2256,
											"end": 2264,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2237,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9490,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9470,
											"end": 9491,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9527,
											"end": 9529,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9507,
											"end": 9525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9500,
											"end": 9530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9566,
											"end": 9600,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 9546,
											"end": 9564,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9546,
											"end": 9564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9601,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9617,
											"end": 9635,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9610,
											"end": 9644,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9661,
											"end": 9680,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 9661,
											"end": 9680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 9286,
											"end": 9686,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9875,
											"end": 9896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9932,
											"end": 9934,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9912,
											"end": 9930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9905,
											"end": 9935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9971,
											"end": 10005,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 9951,
											"end": 9969,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9951,
											"end": 9969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 9969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9944,
											"end": 10006,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10047,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 10064,
											"end": 10083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 9691,
											"end": 10089,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 762,
											"end": 787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10298,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10278,
											"end": 10299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10278,
											"end": 10299,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10278,
											"end": 10299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10308,
											"end": 10338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10374,
											"end": 10408,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10347,
											"end": 10409,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10426,
											"end": 10444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10094,
											"end": 10450,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10659,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10639,
											"end": 10660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10698,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 10676,
											"end": 10694,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10676,
											"end": 10694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10676,
											"end": 10694,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10669,
											"end": 10699,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10735,
											"end": 10768,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10708,
											"end": 10769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10455,
											"end": 10810,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 762,
											"end": 787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11017,
											"end": 11019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11056,
											"end": 11058,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 11036,
											"end": 11054,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11036,
											"end": 11054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11036,
											"end": 11054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11029,
											"end": 11059,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11095,
											"end": 11126,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 11075,
											"end": 11093,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 11075,
											"end": 11093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11075,
											"end": 11093,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11144,
											"end": 11162,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 11144,
											"end": 11162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10815,
											"end": 11168,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11375,
											"end": 11377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11414,
											"end": 11416,
											"name": "PUSH",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 11394,
											"end": 11412,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11394,
											"end": 11412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11394,
											"end": 11412,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11387,
											"end": 11417,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11453,
											"end": 11487,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 11433,
											"end": 11451,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 11433,
											"end": 11451,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11433,
											"end": 11451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11426,
											"end": 11488,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11504,
											"end": 11522,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 11504,
											"end": 11522,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11504,
											"end": 11522,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11497,
											"end": 11532,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11549,
											"end": 11568,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11549,
											"end": 11568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 11173,
											"end": 11574,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11781,
											"end": 11783,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11820,
											"end": 11822,
											"name": "PUSH",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11793,
											"end": 11823,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11859,
											"end": 11893,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 11839,
											"end": 11857,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 11839,
											"end": 11857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11839,
											"end": 11857,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11903,
											"end": 11936,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11953,
											"end": 11972,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11953,
											"end": 11972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 11579,
											"end": 11978,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12187,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12224,
											"end": 12226,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12204,
											"end": 12222,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12197,
											"end": 12227,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12263,
											"end": 12297,
											"name": "PUSH",
											"source": 6,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12243,
											"end": 12261,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 12243,
											"end": 12261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12243,
											"end": 12261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12236,
											"end": 12298,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12307,
											"end": 12343,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12360,
											"end": 12379,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 12360,
											"end": 12379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 11983,
											"end": 12385,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 762,
											"end": 787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 762,
											"end": 787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 735,
											"end": 753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 798,
											"end": 971,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 798,
											"end": 971,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 866,
											"end": 886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 866,
											"end": 886,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 915,
											"end": 946,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 915,
											"end": 946,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 905,
											"end": 947,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 905,
											"end": 947,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 895,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 895,
											"end": 965,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 951,
											"end": 963,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 895,
											"end": 965,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 895,
											"end": 965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 798,
											"end": 971,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 798,
											"end": 971,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 798,
											"end": 971,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 798,
											"end": 971,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 976,
											"end": 1230,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 976,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1084,
											"end": 1091,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1080,
											"end": 1103,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1123,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1173,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1224,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1230,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1749,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1427,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1688,
											"end": 1690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1692,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1692,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 1741,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1724,
											"end": 1742,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1742,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1742,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1743,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1711,
											"end": 1743,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1749,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1427,
											"end": 1749,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1754,
											"end": 2082,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1754,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1888,
											"end": 1897,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1886,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1898,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1903,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 1868,
											"end": 1920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1918,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1920,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 1868,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 1958,
											"end": 1967,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1939,
											"end": 1968,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1939,
											"end": 1968,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 1939,
											"end": 1968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2021,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2019,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1987,
											"end": 2025,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1987,
											"end": 2025,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 1987,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2025,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2070,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2044,
											"end": 2076,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 2082,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 2082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 2082,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 2082,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 2082,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 2082,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2276,
											"end": 2462,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2276,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2376,
											"end": 2385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2374,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2386,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2408,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2356,
											"end": 2408,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2356,
											"end": 2408,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2356,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2446,
											"end": 2455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2427,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 2427,
											"end": 2456,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2427,
											"end": 2456,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2427,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2456,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2276,
											"end": 2462,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2462,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2675,
											"end": 3042,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2675,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2754,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2805,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2799,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2787,
											"end": 2793,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2800,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 2806,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 2769,
											"end": 2824,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2818,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2822,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2824,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 2769,
											"end": 2824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2905,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2922,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 2872,
											"end": 2922,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2922,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 2872,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 2959,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2931,
											"end": 2960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2998,
											"end": 3004,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2991,
											"end": 3005,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 2989,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3006,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 3013,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3019,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3030,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 2969,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 3042,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 3042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 3042,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 3042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 3042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 3042,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3205,
											"end": 3211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3213,
											"end": 3219,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3300,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3301,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3314,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3383,
											"end": 3401,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3427,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3440,
											"end": 3441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 3410,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3541,
											"end": 3548,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3538,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3530,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 3517,
											"end": 3539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3479,
											"end": 3549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3479,
											"end": 3549,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 3479,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 3576,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3453,
											"end": 3549,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3660,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3628,
											"end": 3660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3672,
											"end": 3688,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3688,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3672,
											"end": 3688,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3705,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 3669,
											"end": 3705,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 3703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3705,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 3669,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3793,
											"end": 3801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3791,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 3740,
											"end": 3812,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3812,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 3740,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3839,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3714,
											"end": 3812,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3935,
											"end": 3951,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3935,
											"end": 3951,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3935,
											"end": 3951,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 3965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3962,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3966,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3932,
											"end": 3968,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4067,
											"end": 4074,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4056,
											"end": 4064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 4003,
											"end": 4075,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4003,
											"end": 4075,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4003,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP11",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4102,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4102,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3047,
											"end": 4135,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4140,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4140,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4271,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4257,
											"end": 4266,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4255,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4267,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4272,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4289,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4237,
											"end": 4289,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4283,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4287,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4237,
											"end": 4289,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4237,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4327,
											"end": 4336,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4308,
											"end": 4337,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4308,
											"end": 4337,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4308,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4390,
											"end": 4392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4379,
											"end": 4388,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4356,
											"end": 4394,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4356,
											"end": 4394,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4356,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4346,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4400,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4400,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4405,
											"end": 4585,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 4405,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4464,
											"end": 4470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4517,
											"end": 4519,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4496,
											"end": 4503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4515,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4488,
											"end": 4520,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4533,
											"end": 4534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4531,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4535,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 4485,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4556,
											"end": 4579,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4579,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4405,
											"end": 4585,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4590,
											"end": 4970,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 4590,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4670,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 4665,
											"end": 4677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 4733,
											"end": 4794,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4787,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 4779,
											"end": 4785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4792,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4765,
											"end": 4792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4733,
											"end": 4794,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 4733,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 4842,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4832,
											"end": 4838,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4843,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4806,
											"end": 4844,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4964,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 4803,
											"end": 4964,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4896,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4881,
											"end": 4884,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4877,
											"end": 4897,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4874,
											"end": 4875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4898,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4918,
											"end": 4919,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4949,
											"end": 4953,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 4954,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4964,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 4803,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4803,
											"end": 4964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4970,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5685,
											"end": 5812,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 5685,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5746,
											"end": 5756,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5741,
											"end": 5744,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5737,
											"end": 5757,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5727,
											"end": 5758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5777,
											"end": 5781,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 5774,
											"end": 5775,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5767,
											"end": 5782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5801,
											"end": 5805,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5798,
											"end": 5799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5791,
											"end": 5806,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 6034,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5817,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 5858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5884,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 5873,
											"end": 6005,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5927,
											"end": 5937,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 5922,
											"end": 5925,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5918,
											"end": 5938,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5915,
											"end": 5916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5908,
											"end": 5939,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5959,
											"end": 5960,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5952,
											"end": 5967,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5990,
											"end": 5994,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5987,
											"end": 5988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 5995,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5873,
											"end": 6005,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 5873,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6019,
											"end": 6028,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5817,
											"end": 6034,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6039,
											"end": 6207,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 6039,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6141,
											"end": 6142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6143,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6133,
											"end": 6147,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6131,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6127,
											"end": 6148,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6122,
											"end": 6123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6125,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6104,
											"end": 6149,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6101,
											"end": 6172,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 6152,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6039,
											"end": 6207,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6212,
											"end": 6340,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 6212,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6252,
											"end": 6255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6273,
											"end": 6286,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6309,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 6270,
											"end": 6309,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 6289,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6289,
											"end": 6307,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6289,
											"end": 6307,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 6289,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6340,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6345,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 6345,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6477,
											"end": 6482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6512,
											"end": 6519,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6502,
											"end": 6510,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6520,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6563,
											"end": 6569,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6576,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6557,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6550,
											"end": 6577,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 6580,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6620,
											"end": 6628,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6638,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6668,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 6613,
											"end": 6668,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6666,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6668,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 6613,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6751,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6751,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6751,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6729,
											"end": 6751,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6704,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 6491,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6767,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6772,
											"end": 7578,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 6772,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6821,
											"end": 6826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6859,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 6841,
											"end": 6921,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6892,
											"end": 6893,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6906,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6906,
											"end": 6911,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6921,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 6841,
											"end": 6921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 6944,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 6930,
											"end": 7006,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6991,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6991,
											"end": 6996,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 7006,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 6930,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7040,
											"end": 7041,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7035,
											"end": 7094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7094,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 7035,
											"end": 7094,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7108,
											"end": 7109,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7103,
											"end": 7233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7233,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 7103,
											"end": 7233,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 7015,
											"end": 7233,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7094,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 7035,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7065,
											"end": 7066,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7056,
											"end": 7066,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7056,
											"end": 7066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7079,
											"end": 7084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7079,
											"end": 7084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7079,
											"end": 7084,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7233,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 7103,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7140,
											"end": 7143,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7130,
											"end": 7138,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7144,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7167,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7124,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 7124,
											"end": 7167,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 7147,
											"end": 7165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7203,
											"end": 7204,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7218,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7218,
											"end": 7223,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7233,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 7015,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7317,
											"end": 7319,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7307,
											"end": 7315,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7304,
											"end": 7320,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7298,
											"end": 7301,
											"name": "PUSH",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 7292,
											"end": 7296,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7302,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7285,
											"end": 7321,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7279,
											"end": 7281,
											"name": "PUSH",
											"source": 6,
											"value": "4E"
										},
										{
											"begin": 7269,
											"end": 7277,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7266,
											"end": 7282,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 7255,
											"end": 7259,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7264,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7248,
											"end": 7283,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7322,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 7242,
											"end": 7401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7354,
											"end": 7373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7354,
											"end": 7373,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7354,
											"end": 7373,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7386,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7386,
											"end": 7391,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7401,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 7242,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 7458,
											"end": 7466,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7452,
											"end": 7456,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7433,
											"end": 7467,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7433,
											"end": 7467,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 7433,
											"end": 7467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7503,
											"end": 7509,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7495,
											"end": 7501,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7491,
											"end": 7510,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7482,
											"end": 7489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7479,
											"end": 7511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7534,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 7476,
											"end": 7534,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 7514,
											"end": 7532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7552,
											"end": 7572,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7552,
											"end": 7572,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 7578,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6772,
											"end": 7578,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7583,
											"end": 7714,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 7583,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7643,
											"end": 7648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 7699,
											"end": 7707,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7672,
											"end": 7708,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7719,
											"end": 7844,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7719,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7759,
											"end": 7763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7788,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7784,
											"end": 7785,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7781,
											"end": 7789,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7812,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7778,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 7778,
											"end": 7812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 7792,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7829,
											"end": 7838,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7719,
											"end": 7844,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7849,
											"end": 7984,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 7849,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 7891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7926,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7949,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 7906,
											"end": 7949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 7929,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7965,
											"end": 7978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 7978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7984,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8747,
											"end": 8874,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 8747,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8818,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8799,
											"end": 8819,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8789,
											"end": 8820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8839,
											"end": 8843,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 8836,
											"end": 8837,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8829,
											"end": 8844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8863,
											"end": 8867,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8860,
											"end": 8861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8853,
											"end": 8868,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"batchMint(address[],uint256[],uint256[])": "d559f05b",
							"currentReward()": "07621eca",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getHalvingCount()": "331d17c1",
							"hasMinted(uint256)": "e5b95595",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256,uint256)": "156e29f6",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"remainingSupply()": "da0239a6",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"followers\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHalvingCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"hasMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"followers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256,uint256)\":{\"notice\":\"The minting function is designed to give a large amount of tokens to early adopters and cut the rewards so that there is a fair distribution of tokens and that even if people are late to the party they can earn some TikTokens. At the time of contract deployment there will be 0.8192 tokens remaining and every time this number halves (until it reaches 0.0001) the rewards get cut by 1 decimal place Every user will have the opportunity to earn 0.00001 tokens per 1000 followers (0.01 per 1M followers) before the first halving cycle.  After the first halving cycle the rewards will be 0.000001 per 1000 followers (0.001 per 1M followers) and this process will continue every time the remaining supply halves until the rewards get to be 0.000000000000000000000001 per 1000 followers as the minimum rewards.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TikToken.sol\":\"TikToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/TikToken.sol\":{\"keccak256\":\"0xada065b5f1d776048e3eade3b21d9a8a10e14b9a7f9c96d7a8d595dc9f5abd47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c21b07eac734187221ec503e5ea4578fde7f67f15ac6e055525245301f2c57a7\",\"dweb:/ipfs/QmNw5qVYxyPM9Em5EHez5jYPidsQYqHMcLtqVW396VBPVr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 128,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 134,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 136,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 138,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 140,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 856,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_remainingSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 863,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_currentReward",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 866,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_halvingCount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 870,
								"contract": "contracts/TikToken.sol:TikToken",
								"label": "_minted",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint(address,uint256,uint256)": {
								"notice": "The minting function is designed to give a large amount of tokens to early adopters and cut the rewards so that there is a fair distribution of tokens and that even if people are late to the party they can earn some TikTokens. At the time of contract deployment there will be 0.8192 tokens remaining and every time this number halves (until it reaches 0.0001) the rewards get cut by 1 decimal place Every user will have the opportunity to earn 0.00001 tokens per 1000 followers (0.01 per 1M followers) before the first halving cycle.  After the first halving cycle the rewards will be 0.000001 per 1000 followers (0.001 per 1M followers) and this process will continue every time the remaining supply halves until the rewards get to be 0.000000000000000000000001 per 1000 followers as the minimum rewards."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 825,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								824
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"ERC20": [
							699
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						]
					},
					"id": 700,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 778,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 803,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 700,
							"sourceUnit": 825,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 119,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 824,
										"src": "1550:7:1"
									},
									"id": 120,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:1"
								},
								{
									"baseName": {
										"id": 121,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1559:6:1"
									},
									"id": 122,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:1"
								},
								{
									"baseName": {
										"id": 123,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 802,
										"src": "1567:14:1"
									},
									"id": 124,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 118,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 699,
							"linearizedBaseContracts": [
								699,
								802,
								777,
								824
							],
							"name": "ERC20",
							"nameLocation": "1541:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1588:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 127,
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 126,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 134,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1640:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 133,
										"keyType": {
											"id": 129,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 132,
											"keyType": {
												"id": 130,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 131,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 136,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1714:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1749:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 137,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 699,
									"src": "1775:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 139,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2036:57:1",
										"statements": [
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2046:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "2054:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2069:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1992:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 142,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "2013:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 144,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:1"
									},
									"scope": 699,
									"src": "1980:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										789
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "2227:29:1",
										"statements": [
											{
												"expression": {
													"id": 164,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2244:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 163,
												"id": 165,
												"nodeType": "Return",
												"src": "2237:12:1"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 160,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:1"
									},
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "2212:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 161,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:1"
									},
									"scope": 699,
									"src": "2158:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2440:31:1",
										"statements": [
											{
												"expression": {
													"id": 174,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 140,
													"src": "2457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 173,
												"id": 175,
												"nodeType": "Return",
												"src": "2450:14:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 170,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:1"
									},
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2425:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 171,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:1"
									},
									"scope": 699,
									"src": "2369:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										801
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "3169:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 183,
												"id": 185,
												"nodeType": "Return",
												"src": "3179:9:1"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 180,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:1"
									},
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "3162:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 181,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:1"
									},
									"scope": 699,
									"src": "3104:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "3325:36:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 136,
													"src": "3342:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "3335:19:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:1"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "3316:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:1"
									},
									"scope": 699,
									"src": "3255:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										734
									],
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3502:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 206,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3519:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 208,
													"indexExpression": {
														"id": 207,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "3529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3512:25:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 202,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:1"
									},
									"scope": 699,
									"src": "3419:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										744
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "3825:104:1",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "3835:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 222,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 226,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 224,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "3851:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "3883:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 229,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3890:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 230,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "3894:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 227,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3873:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 221,
												"id": 234,
												"nodeType": "Return",
												"src": "3911:11:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 218,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:1"
									},
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3758:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3770:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "3819:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:1"
									},
									"scope": 699,
									"src": "3740:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "4085:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4102:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "4114:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 251,
													"indexExpression": {
														"id": 250,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "4121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 252,
												"nodeType": "Return",
												"src": "4095:34:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 243,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:1"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4006:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4021:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "4076:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:1"
									},
									"scope": 699,
									"src": "3987:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										764
									],
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "4533:108:1",
										"statements": [
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 278,
														"src": "4543:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 265,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 267,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "4559:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4590:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 272,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 273,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "4606:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 270,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "4581:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 264,
												"id": 277,
												"nodeType": "Return",
												"src": "4623:11:1"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 261,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:1"
									},
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4461:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4478:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "4527:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:1"
									},
									"scope": 699,
									"src": "4444:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										776
									],
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "5306:153:1",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 311,
														"src": "5316:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 292,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 294,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "5334:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 298,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5372:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 293,
															"src": "5378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 300,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5387:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 297,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "5356:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 304,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "5414:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 305,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "5420:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 306,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "5424:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 303,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "5404:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 291,
												"id": 310,
												"nodeType": "Return",
												"src": "5441:11:1"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:1"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5225:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5239:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5251:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "5300:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:1"
									},
									"scope": 699,
									"src": "5203:256:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5948:140:1",
										"statements": [
											{
												"assignments": [
													323
												],
												"declarations": [
													{
														"constant": false,
														"id": 323,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 340,
														"src": "5958:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 322,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "5974:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "6005:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6012:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 331,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 323,
																		"src": "6031:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 332,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6038:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 330,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "6021:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 334,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "6049:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 327,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "5996:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 321,
												"id": 339,
												"nodeType": "Return",
												"src": "6070:11:1"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5881:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5898:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:1"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "5942:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:1"
									},
									"scope": 699,
									"src": "5854:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "6674:328:1",
										"statements": [
											{
												"assignments": [
													352
												],
												"declarations": [
													{
														"constant": false,
														"id": 352,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6684:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 351,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "6700:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:1"
											},
											{
												"assignments": [
													357
												],
												"declarations": [
													{
														"constant": false,
														"id": 357,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 381,
														"src": "6722:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 362,
												"initialValue": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "6759:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 358,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "6749:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "6792:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 365,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "6812:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:1"
											},
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "6912:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6919:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "6928:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 374,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "6947:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 370,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "6903:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 377,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 350,
												"id": 380,
												"nodeType": "Return",
												"src": "6984:11:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6619:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "6668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:1"
									},
									"scope": 699,
									"src": "6575:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "7534:710:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "7552:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 394,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 403,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 387,
																"src": "7630:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 404,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "7718:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "7724:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "7728:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 412,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "7697:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:1"
											},
											{
												"assignments": [
													419
												],
												"declarations": [
													{
														"constant": false,
														"id": 419,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "7746:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 418,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"baseExpression": {
														"id": 420,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "7768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 422,
													"indexExpression": {
														"id": 421,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "7778:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 425,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "7801:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "7816:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 424,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:1"
											},
											{
												"id": 445,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:1",
												"statements": [
													{
														"expression": {
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 431,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "7899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 433,
																"indexExpression": {
																	"id": 432,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "7909:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 434,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "7917:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 435,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "7931:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 438,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:1"
													},
													{
														"expression": {
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 439,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8114:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 440,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8124:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "8131:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 444,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8172:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8178:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8182:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8163:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "EmitStatement",
												"src": "8158:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 453,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8220:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "8226:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 389,
															"src": "8230:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "8200:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:1"
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7475:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7489:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "7501:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:1"
									},
									"scope": 699,
									"src": "7456:788:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "8585:470:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 468,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "8603:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 469,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 478,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 482,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8704:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8713:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "8671:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:1"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "8731:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 487,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "8747:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:1"
											},
											{
												"id": 496,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:1",
												"statements": [
													{
														"expression": {
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 490,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "8899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 492,
																"indexExpression": {
																	"id": 491,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "8909:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 493,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "8921:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 495,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8973:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "8982:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "8952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "8947:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 507,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "9032:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "9041:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9000:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:1"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8535:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "8552:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:1"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:1"
									},
									"scope": 699,
									"src": "8520:535:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "9440:594:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 525,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "9458:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 526,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9549:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9570:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 534,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "9528:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:1"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 587,
														"src": "9588:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"baseExpression": {
														"id": 545,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9613:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 547,
													"indexExpression": {
														"id": 546,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "9623:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 550,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9649:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 551,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9667:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 549,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 555,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:1"
											},
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:1",
												"statements": [
													{
														"expression": {
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 556,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "9746:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 558,
																"indexExpression": {
																	"id": 557,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "9756:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 559,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "9767:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 560,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "9784:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 563,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:1"
													},
													{
														"expression": {
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 564,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 136,
																"src": "9883:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 565,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "9899:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9940:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "9961:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "9931:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "EmitStatement",
												"src": "9926:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "9999:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "10020:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "9979:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:1"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9390:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "9407:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:1"
									},
									"scope": 699,
									"src": "9375:659:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 632,
										"nodeType": "Block",
										"src": "10540:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 599,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10558:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 600,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 609,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "10636:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 610,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:1"
											},
											{
												"expression": {
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 618,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "10707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "10719:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 622,
														"indexExpression": {
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 623,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "10737:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 625,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "10767:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "10774:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 629,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "10783:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "10758:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "EmitStatement",
												"src": "10753:37:1"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10475:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10490:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "10507:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:1"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:1"
									},
									"scope": 699,
									"src": "10457:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "11168:321:1",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "11178:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [
														{
															"id": 646,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "11215:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "11222:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 645,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "11205:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 650,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "11244:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 651,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 674,
												"nodeType": "IfStatement",
												"src": "11240:243:1",
												"trueBody": {
													"id": 673,
													"nodeType": "Block",
													"src": "11283:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 658,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 644,
																			"src": "11305:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 659,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "11325:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 657,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:1"
														},
														{
															"id": 672,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 665,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "11416:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 666,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "11423:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 667,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 644,
																					"src": "11432:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 668,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 640,
																					"src": "11451:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 664,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "11407:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 671,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11103:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "11135:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:1"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:1"
									},
									"scope": 699,
									"src": "11078:411:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "12162:2:1",
										"statements": []
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12103:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12117:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "12129:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:1"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:1"
									},
									"scope": 699,
									"src": "12073:91:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "12840:2:1",
										"statements": []
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12781:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12795:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "12807:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:1"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:1"
									},
									"scope": 699,
									"src": "12752:90:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 700,
							"src": "1532:11312:1",
							"usedErrors": []
						}
					],
					"src": "105:12740:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 701,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 702,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 711,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 720,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 777,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 777,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 741,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 777,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 777,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 777,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 777,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 778,
							"src": "202:2534:2",
							"usedErrors": []
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						]
					},
					"id": 803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 803,
							"sourceUnit": 778,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 782,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "305:6:3"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 781,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 802,
							"linearizedBaseContracts": [
								802,
								777
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 786,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 802,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 792,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 802,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 798,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 802,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 803,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							824
						]
					},
					"id": 825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 805,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 824,
							"linearizedBaseContracts": [
								824
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 810,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 809,
												"id": 812,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 824,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 822,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 819,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 818,
												"id": 821,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 824,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 825,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"contracts/TikToken.sol": {
				"ast": {
					"absolutePath": "contracts/TikToken.sol",
					"exportedSymbols": {
						"Context": [
							824
						],
						"ERC20": [
							699
						],
						"IERC20": [
							777
						],
						"IERC20Metadata": [
							802
						],
						"Ownable": [
							112
						],
						"TikToken": [
							1293
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 826,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 700,
							"src": "62:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 828,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 113,
							"src": "119:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 829,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 699,
										"src": "196:5:5"
									},
									"id": 830,
									"nodeType": "InheritanceSpecifier",
									"src": "196:5:5"
								},
								{
									"baseName": {
										"id": 831,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "203:7:5"
									},
									"id": 832,
									"nodeType": "InheritanceSpecifier",
									"src": "203:7:5"
								}
							],
							"canonicalName": "TikToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								112,
								699,
								802,
								777,
								824
							],
							"name": "TikToken",
							"nameLocation": "184:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 839,
									"mutability": "constant",
									"name": "_maxSupply",
									"nameLocation": "243:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "218:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 833,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "218:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 838,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 834,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "256:1:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000000000"
											},
											"id": 837,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 835,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "260:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3234",
												"id": 836,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "264:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"src": "260:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000000000"
											}
										},
										"src": "256:10:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 846,
									"mutability": "constant",
									"name": "_initialSupply",
									"nameLocation": "386:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "361:57:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 840,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_819200000000000000000000_by_1",
											"typeString": "int_const 819200000000000000000000"
										},
										"id": 845,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e38313932",
											"id": 841,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "403:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_512_by_625",
												"typeString": "rational_const 512 / 625"
											},
											"value": "0.8192"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000000000"
											},
											"id": 844,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 842,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "412:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3234",
												"id": 843,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "416:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"src": "412:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000000000"
											}
										},
										"src": "403:15:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_819200000000000000000000_by_1",
											"typeString": "int_const 819200000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 853,
									"mutability": "constant",
									"name": "_minReward",
									"nameLocation": "512:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "487:73:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 847,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"id": 852,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e303030303030303030303030303030303030303030303031",
											"id": 848,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "525:26:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1000000000000000000000000",
												"typeString": "rational_const 1 / 1000000000000000000000000"
											},
											"value": "0.000000000000000000000001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000000000"
											},
											"id": 851,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 849,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "554:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3234",
												"id": 850,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "558:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"src": "554:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000000000"
											}
										},
										"src": "525:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 856,
									"mutability": "mutable",
									"name": "_remainingSupply",
									"nameLocation": "625:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "609:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "609:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 855,
										"name": "_initialSupply",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 846,
										"src": "644:14:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 863,
									"mutability": "mutable",
									"name": "_currentReward",
									"nameLocation": "720:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "704:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 857,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "704:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"id": 862,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "302e3030303031",
											"id": 858,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "737:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_100000",
												"typeString": "rational_const 1 / 100000"
											},
											"value": "0.00001"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000000000"
											},
											"id": 861,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 859,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "747:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3234",
												"id": 860,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "751:2:5",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"src": "747:6:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000000000"
											}
										},
										"src": "737:16:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 866,
									"mutability": "mutable",
									"name": "_halvingCount",
									"nameLocation": "831:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "815:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 864,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "815:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 865,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "847:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 870,
									"mutability": "mutable",
									"name": "_minted",
									"nameLocation": "937:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1293,
									"src": "904:40:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 869,
										"keyType": {
											"id": 867,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "912:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "904:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 868,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "923:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "1038:221:5",
										"statements": [
											{
												"assignments": [
													878
												],
												"declarations": [
													{
														"constant": false,
														"id": 878,
														"mutability": "mutable",
														"name": "initialMintAmount",
														"nameLocation": "1057:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 889,
														"src": "1049:25:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 877,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1049:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"id": 879,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "1077:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 880,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "1090:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1077:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1049:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 884,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1192:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1192:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "initialMintAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "1204:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 883,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "1186:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "1186:36:5"
											}
										]
									},
									"id": 890,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "54696b546f6b656e",
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1019:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a0815e1c560b661bebd4bd78e2c63d3a5d46aa99e875d75d49e27ac108551bcf",
														"typeString": "literal_string \"TikToken\""
													},
													"value": "TikToken"
												},
												{
													"hexValue": "54494b",
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1031:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9ab526517c07846182faf75ede197ee0c44b45c3208b3c71dee15216c7d89af8",
														"typeString": "literal_string \"TIK\""
													},
													"value": "TIK"
												}
											],
											"id": 875,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 872,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 699,
												"src": "1013:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1013:24:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:2:5"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:0:5"
									},
									"scope": 1293,
									"src": "999:260:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "2196:2307:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 903,
																"name": "_remainingSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "2215:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2234:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2215:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206d6f726520746f6b656e7320746f206d696e74",
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2237:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e85b3bbcaf0e6fcb89de71fa23f33e073f937001216651376dba7e28e5af1d1",
																"typeString": "literal_string \"No more tokens to mint\""
															},
															"value": "No more tokens to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e85b3bbcaf0e6fcb89de71fa23f33e073f937001216651376dba7e28e5af1d1",
																"typeString": "literal_string \"No more tokens to mint\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2207:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2207:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "2207:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2305:12:5",
															"subExpression": {
																"baseExpression": {
																	"id": 910,
																	"name": "_minted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 870,
																	"src": "2306:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 912,
																"indexExpression": {
																	"id": 911,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "2314:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2306:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "557365722068617320616c7265616479206d696e74656420746f6b656e73",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2319:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c5a3f32c12150f5e36dce909285d00c61fc25c7a2b22dde1da6006b709a19b8",
																"typeString": "literal_string \"User has already minted tokens\""
															},
															"value": "User has already minted tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c5a3f32c12150f5e36dce909285d00c61fc25c7a2b22dde1da6006b709a19b8",
																"typeString": "literal_string \"User has already minted tokens\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2297:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "2297:55:5"
											},
											{
												"assignments": [
													918
												],
												"declarations": [
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "amountToMint",
														"nameLocation": "2409:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "2401:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2401:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 919,
																		"name": "followers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 895,
																		"src": "2425:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2437:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "2425:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 922,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2424:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 923,
															"name": "_currentReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2445:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2424:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 925,
														"name": "_currentReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "2462:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2424:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2401:75:5"
											},
											{
												"assignments": [
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "nextHalving",
														"nameLocation": "2540:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "2532:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 928,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2532:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 936,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "2554:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2572:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 932,
																	"name": "_halvingCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "2577:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2572:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 934,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2571:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2554:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2532:59:5"
											},
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "amountToHalving",
														"nameLocation": "2643:15:5",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "2635:23:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2635:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 942,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 939,
														"name": "_remainingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2661:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 940,
														"name": "nextHalving",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "2680:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2661:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2635:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 943,
															"name": "amountToHalving",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "2851:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 944,
															"name": "amountToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "2870:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2851:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 946,
															"name": "_currentReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2886:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 947,
															"name": "_minReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "2903:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2886:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2851:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "2847:998:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "2915:930:5",
													"statements": [
														{
															"expression": {
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 950,
																	"name": "amountToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "2930:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 951,
																	"name": "amountToHalving",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "2945:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2930:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 953,
															"nodeType": "ExpressionStatement",
															"src": "2930:30:5"
														},
														{
															"assignments": [
																955
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 955,
																	"mutability": "mutable",
																	"name": "remainingFollowers",
																	"nameLocation": "3033:18:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1003,
																	"src": "3025:26:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3025:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 965,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 956,
																	"name": "followers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "3054:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 959,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 957,
																					"name": "amountToMint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 918,
																					"src": "3067:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 958,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3082:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "3067:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"components": [
																					{
																						"id": 960,
																						"name": "_currentReward",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 863,
																						"src": "3090:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 961,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3089:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3067:38:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 963,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3066:40:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3054:52:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3025:81:5"
														},
														{
															"assignments": [
																967
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 967,
																	"mutability": "mutable",
																	"name": "additionalReward",
																	"nameLocation": "3171:16:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1003,
																	"src": "3163:24:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 966,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3163:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 982,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 968,
																					"name": "remainingFollowers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "3191:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3212:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "3191:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 971,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3190:27:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 972,
																					"name": "_currentReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "3221:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 973,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3238:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "3221:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 975,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3220:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3190:50:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 977,
																				"name": "_currentReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "3244:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3261:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "3244:18:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 980,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3243:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3190:73:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3163:100:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 983,
																	"name": "additionalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "3443:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 984,
																		"name": "nextHalving",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "3463:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3477:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "3463:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3443:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 998,
															"nodeType": "IfStatement",
															"src": "3439:300:5",
															"trueBody": {
																"id": 997,
																"nodeType": "Block",
																"src": "3480:259:5",
																"statements": [
																	{
																		"expression": {
																			"id": 995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 988,
																				"name": "additionalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 967,
																				"src": "3499:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 994,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 991,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 989,
																								"name": "nextHalving",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 929,
																								"src": "3519:11:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 990,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "3533:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "3519:15:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 992,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3518:17:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 993,
																					"name": "_currentReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "3538:14:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3518:34:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3499:53:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 996,
																		"nodeType": "ExpressionStatement",
																		"src": "3499:53:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 999,
																	"name": "amountToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "3753:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1000,
																	"name": "additionalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "3769:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3753:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1002,
															"nodeType": "ExpressionStatement",
															"src": "3753:32:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1005,
														"name": "_remainingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "3907:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1006,
														"name": "amountToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3926:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3907:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "3903:95:5",
												"trueBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "3940:58:5",
													"statements": [
														{
															"expression": {
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1008,
																	"name": "amountToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "3955:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1009,
																	"name": "_remainingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3970:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3955:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1011,
															"nodeType": "ExpressionStatement",
															"src": "3955:31:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "4088:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "amountToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 918,
															"src": "4097:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1014,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "4082:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4082:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "4082:28:5"
											},
											{
												"expression": {
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1019,
														"name": "_remainingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "4121:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1020,
														"name": "amountToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "4141:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4121:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "4121:32:5"
											},
											{
												"expression": {
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1023,
															"name": "_minted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "4164:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1025,
														"indexExpression": {
															"id": 1024,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "4172:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4164:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4178:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4164:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "4164:18:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1029,
															"name": "_remainingSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "4354:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 1030,
															"name": "nextHalving",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "4374:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4354:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1032,
															"name": "_currentReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "4389:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1033,
															"name": "_minReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "4406:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4389:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4354:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1044,
												"nodeType": "IfStatement",
												"src": "4350:146:5",
												"trueBody": {
													"id": 1043,
													"nodeType": "Block",
													"src": "4418:78:5",
													"statements": [
														{
															"expression": {
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1036,
																	"name": "_currentReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "4433:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4451:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "4433:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1039,
															"nodeType": "ExpressionStatement",
															"src": "4433:20:5"
														},
														{
															"expression": {
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4469:15:5",
																"subExpression": {
																	"id": 1040,
																	"name": "_halvingCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 866,
																	"src": "4469:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1042,
															"nodeType": "ExpressionStatement",
															"src": "4469:15:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1267:842:5",
										"text": "The minting function is designed to give a large amount of tokens to early adopters and cut the rewards so that there is a fair\ndistribution of tokens and that even if people are late to the party they can earn some TikTokens. At the time of contract deployment\nthere will be 0.8192 tokens remaining and every time this number halves (until it reaches 0.0001) the rewards get cut by 1 decimal place\nEvery user will have the opportunity to earn 0.00001 tokens per 1000 followers (0.01 per 1M followers) before the first halving cycle. \nAfter the first halving cycle the rewards will be 0.000001 per 1000 followers (0.001 per 1M followers) and this process will continue\nevery time the remaining supply halves until the rewards get to be 0.000000000000000000000001 per 1000 followers as the minimum rewards."
									},
									"functionSelector": "156e29f6",
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2186:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2186:9:5"
										}
									],
									"name": "mint",
									"nameLocation": "2124:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2137:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2129:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2129:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "followers",
												"nameLocation": "2154:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2146:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2173:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2165:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:48:5"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2196:0:5"
									},
									"scope": 1293,
									"src": "2115:2388:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "4666:2669:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1061,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "4685:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4685:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1063,
																	"name": "followers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "4704:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4704:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4685:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d61746368656420696e70757420617272617973",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4722:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2da833f8d7ed126839b9ef198268abdf3536c4b21ab267733d4f65a97f4c62f",
																"typeString": "literal_string \"Mismatched input arrays\""
															},
															"value": "Mismatched input arrays"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2da833f8d7ed126839b9ef198268abdf3536c4b21ab267733d4f65a97f4c62f",
																"typeString": "literal_string \"Mismatched input arrays\""
															}
														],
														"id": 1060,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4677:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4677:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "4677:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1070,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "4767:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4767:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1072,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "4786:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4786:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4767:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d61746368656420696e70757420617272617973",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4798:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2da833f8d7ed126839b9ef198268abdf3536c4b21ab267733d4f65a97f4c62f",
																"typeString": "literal_string \"Mismatched input arrays\""
															},
															"value": "Mismatched input arrays"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2da833f8d7ed126839b9ef198268abdf3536c4b21ab267733d4f65a97f4c62f",
																"typeString": "literal_string \"Mismatched input arrays\""
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4759:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:65:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "4759:65:5"
											},
											{
												"body": {
													"id": 1242,
													"nodeType": "Block",
													"src": "4883:2445:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1090,
																			"name": "_remainingSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "4906:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4925:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4906:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f206d6f726520746f6b656e7320746f206d696e74",
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4928:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3e85b3bbcaf0e6fcb89de71fa23f33e073f937001216651376dba7e28e5af1d1",
																			"typeString": "literal_string \"No more tokens to mint\""
																		},
																		"value": "No more tokens to mint"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3e85b3bbcaf0e6fcb89de71fa23f33e073f937001216651376dba7e28e5af1d1",
																			"typeString": "literal_string \"No more tokens to mint\""
																		}
																	],
																	"id": 1089,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4898:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4898:55:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "4898:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "5000:16:5",
																		"subExpression": {
																			"baseExpression": {
																				"id": 1097,
																				"name": "_minted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 870,
																				"src": "5001:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																					"typeString": "mapping(uint256 => bool)"
																				}
																			},
																			"id": 1101,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1098,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1055,
																					"src": "5009:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 1100,
																				"indexExpression": {
																					"id": 1099,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "5013:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5009:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5001:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "557365722068617320616c7265616479206d696e74656420746f6b656e73",
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5018:32:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3c5a3f32c12150f5e36dce909285d00c61fc25c7a2b22dde1da6006b709a19b8",
																			"typeString": "literal_string \"User has already minted tokens\""
																		},
																		"value": "User has already minted tokens"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3c5a3f32c12150f5e36dce909285d00c61fc25c7a2b22dde1da6006b709a19b8",
																			"typeString": "literal_string \"User has already minted tokens\""
																		}
																	],
																	"id": 1096,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4992:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4992:59:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1105,
															"nodeType": "ExpressionStatement",
															"src": "4992:59:5"
														},
														{
															"assignments": [
																1107
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1107,
																	"mutability": "mutable",
																	"name": "amountToMint",
																	"nameLocation": "5112:12:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1242,
																	"src": "5104:20:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1106,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5104:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1118,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 1108,
																						"name": "followers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1052,
																						"src": "5128:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																							"typeString": "uint256[] calldata"
																						}
																					},
																					"id": 1110,
																					"indexExpression": {
																						"id": 1109,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1079,
																						"src": "5138:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5128:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "31303030",
																					"id": 1111,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5143:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000_by_1",
																						"typeString": "int_const 1000"
																					},
																					"value": "1000"
																				},
																				"src": "5128:19:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1113,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5127:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1114,
																		"name": "_currentReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5151:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5127:38:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1116,
																	"name": "_currentReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 863,
																	"src": "5168:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5127:55:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5104:78:5"
														},
														{
															"assignments": [
																1120
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1120,
																	"mutability": "mutable",
																	"name": "nextHalving",
																	"nameLocation": "5250:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1242,
																	"src": "5242:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1119,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5242:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1127,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1121,
																	"name": "_initialSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "5264:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5282:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"id": 1123,
																				"name": "_halvingCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 866,
																				"src": "5287:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5282:18:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1125,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5281:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5264:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5242:59:5"
														},
														{
															"assignments": [
																1129
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1129,
																	"mutability": "mutable",
																	"name": "amountToHalving",
																	"nameLocation": "5357:15:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1242,
																	"src": "5349:23:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1128,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5349:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1133,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1130,
																	"name": "_remainingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "5375:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1131,
																	"name": "nextHalving",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "5394:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5375:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5349:56:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1134,
																		"name": "amountToHalving",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "5573:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1135,
																		"name": "amountToMint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "5592:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5573:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1137,
																		"name": "_currentReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5608:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1138,
																		"name": "_minReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "5625:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5608:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5573:62:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1197,
															"nodeType": "IfStatement",
															"src": "5569:1037:5",
															"trueBody": {
																"id": 1196,
																"nodeType": "Block",
																"src": "5637:969:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1141,
																				"name": "amountToMint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "5656:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1142,
																				"name": "amountToHalving",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1129,
																				"src": "5671:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5656:30:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1144,
																		"nodeType": "ExpressionStatement",
																		"src": "5656:30:5"
																	},
																	{
																		"assignments": [
																			1146
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1146,
																				"mutability": "mutable",
																				"name": "remainingFollowers",
																				"nameLocation": "5763:18:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1196,
																				"src": "5755:26:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1145,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5755:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1158,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 1147,
																					"name": "followers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "5784:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 1149,
																				"indexExpression": {
																					"id": 1148,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1079,
																					"src": "5794:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5784:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1152,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1150,
																								"name": "amountToMint",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1107,
																								"src": "5800:12:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"hexValue": "31303030",
																								"id": 1151,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5815:4:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000_by_1",
																									"typeString": "int_const 1000"
																								},
																								"value": "1000"
																							},
																							"src": "5800:19:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"components": [
																								{
																									"id": 1153,
																									"name": "_currentReward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 863,
																									"src": "5823:14:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1154,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "5822:16:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5800:38:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1156,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5799:40:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5784:55:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5755:84:5"
																	},
																	{
																		"assignments": [
																			1160
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1160,
																				"mutability": "mutable",
																				"name": "additionalReward",
																				"nameLocation": "5908:16:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1196,
																				"src": "5900:24:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1159,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5900:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1175,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1163,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1161,
																								"name": "remainingFollowers",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1146,
																								"src": "5928:18:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"hexValue": "31303030",
																								"id": 1162,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5949:4:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1000_by_1",
																									"typeString": "int_const 1000"
																								},
																								"value": "1000"
																							},
																							"src": "5928:25:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1164,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5927:27:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1167,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1165,
																								"name": "_currentReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 863,
																								"src": "5958:14:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"hexValue": "32",
																								"id": 1166,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "5975:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_2_by_1",
																									"typeString": "int_const 2"
																								},
																								"value": "2"
																							},
																							"src": "5958:18:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1168,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5957:20:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5927:50:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1172,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1170,
																							"name": "_currentReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 863,
																							"src": "5981:14:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "32",
																							"id": 1171,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5998:1:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_2_by_1",
																								"typeString": "int_const 2"
																							},
																							"value": "2"
																						},
																						"src": "5981:18:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1173,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5980:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5927:73:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5900:100:5"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1176,
																				"name": "additionalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "6188:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1177,
																					"name": "nextHalving",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1120,
																					"src": "6208:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6222:1:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "6208:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6188:35:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1191,
																		"nodeType": "IfStatement",
																		"src": "6184:308:5",
																		"trueBody": {
																			"id": 1190,
																			"nodeType": "Block",
																			"src": "6225:267:5",
																			"statements": [
																				{
																					"expression": {
																						"id": 1188,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1181,
																							"name": "additionalReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1160,
																							"src": "6248:16:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1187,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1184,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 1182,
																											"name": "nextHalving",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1120,
																											"src": "6268:11:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "/",
																										"rightExpression": {
																											"hexValue": "32",
																											"id": 1183,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "6282:1:5",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_2_by_1",
																												"typeString": "int_const 2"
																											},
																											"value": "2"
																										},
																										"src": "6268:15:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1185,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "6267:17:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 1186,
																								"name": "_currentReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 863,
																								"src": "6287:14:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6267:34:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6248:53:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1189,
																					"nodeType": "ExpressionStatement",
																					"src": "6248:53:5"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1192,
																				"name": "amountToMint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "6510:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1193,
																				"name": "additionalReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "6526:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6510:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1195,
																		"nodeType": "ExpressionStatement",
																		"src": "6510:32:5"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1198,
																	"name": "_remainingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "6676:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1199,
																	"name": "amountToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "6695:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6676:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1206,
															"nodeType": "IfStatement",
															"src": "6672:103:5",
															"trueBody": {
																"id": 1205,
																"nodeType": "Block",
																"src": "6709:66:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1201,
																				"name": "amountToMint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "6728:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1202,
																				"name": "_remainingSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 856,
																				"src": "6743:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6728:31:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1204,
																		"nodeType": "ExpressionStatement",
																		"src": "6728:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1208,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1049,
																			"src": "6873:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1210,
																		"indexExpression": {
																			"id": 1209,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "6882:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6873:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1211,
																		"name": "amountToMint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "6886:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1207,
																	"name": "_mint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "6867:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6867:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1213,
															"nodeType": "ExpressionStatement",
															"src": "6867:32:5"
														},
														{
															"expression": {
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1214,
																	"name": "_remainingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "6914:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1215,
																	"name": "amountToMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "6934:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6914:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1217,
															"nodeType": "ExpressionStatement",
															"src": "6914:32:5"
														},
														{
															"expression": {
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1218,
																		"name": "_minted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "6961:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 1222,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1219,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1055,
																			"src": "6969:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1221,
																		"indexExpression": {
																			"id": 1220,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "6973:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6969:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6961:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6979:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6961:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1225,
															"nodeType": "ExpressionStatement",
															"src": "6961:22:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1226,
																		"name": "_remainingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "7163:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1227,
																		"name": "nextHalving",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "7183:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7163:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1229,
																		"name": "_currentReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "7198:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1230,
																		"name": "_minReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "7215:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7198:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7163:62:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1241,
															"nodeType": "IfStatement",
															"src": "7159:158:5",
															"trueBody": {
																"id": 1240,
																"nodeType": "Block",
																"src": "7227:90:5",
																"statements": [
																	{
																		"expression": {
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1233,
																				"name": "_currentReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 863,
																				"src": "7246:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "/=",
																			"rightHandSide": {
																				"hexValue": "3130",
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7264:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"src": "7246:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1236,
																		"nodeType": "ExpressionStatement",
																		"src": "7246:20:5"
																	},
																	{
																		"expression": {
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "7286:15:5",
																			"subExpression": {
																				"id": 1237,
																				"name": "_halvingCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 866,
																				"src": "7286:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1239,
																		"nodeType": "ExpressionStatement",
																		"src": "7286:15:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1082,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "4857:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1083,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "4861:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4861:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4857:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1243,
												"initializationExpression": {
													"assignments": [
														1079
													],
													"declarations": [
														{
															"constant": false,
															"id": 1079,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4850:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1243,
															"src": "4842:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4842:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1081,
													"initialValue": {
														"hexValue": "30",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4854:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4842:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4878:3:5",
														"subExpression": {
															"id": 1086,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "4878:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1088,
													"nodeType": "ExpressionStatement",
													"src": "4878:3:5"
												},
												"nodeType": "ForStatement",
												"src": "4837:2491:5"
											}
										]
									},
									"functionSelector": "d559f05b",
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1058,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1057,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4656:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4656:9:5"
										}
									],
									"name": "batchMint",
									"nameLocation": "4554:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "4583:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "4564:27:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1047,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4564:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1048,
													"nodeType": "ArrayTypeName",
													"src": "4564:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "followers",
												"nameLocation": "4612:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "4593:28:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1050,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4593:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1051,
													"nodeType": "ArrayTypeName",
													"src": "4593:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4642:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "4623:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1053,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4623:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1054,
													"nodeType": "ArrayTypeName",
													"src": "4623:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4563:83:5"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4666:0:5"
									},
									"scope": 1293,
									"src": "4545:2790:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "7402:87:5",
										"statements": [
											{
												"expression": {
													"id": 1250,
													"name": "_remainingSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 856,
													"src": "7420:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1251,
												"nodeType": "Return",
												"src": "7413:23:5"
											}
										]
									},
									"functionSelector": "da0239a6",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingSupply",
									"nameLocation": "7352:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7367:2:5"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "7393:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7393:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7392:9:5"
									},
									"scope": 1293,
									"src": "7343:146:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "7554:115:5",
										"statements": [
											{
												"expression": {
													"id": 1258,
													"name": "_currentReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 863,
													"src": "7572:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1259,
												"nodeType": "Return",
												"src": "7565:21:5"
											}
										]
									},
									"functionSelector": "07621eca",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currentReward",
									"nameLocation": "7506:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7519:2:5"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "7545:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7544:9:5"
									},
									"scope": 1293,
									"src": "7497:172:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "7737:81:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1268,
														"name": "_minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "7755:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
															"typeString": "mapping(uint256 => bool)"
														}
													},
													"id": 1270,
													"indexExpression": {
														"id": 1269,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "7763:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7755:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1267,
												"id": 1271,
												"nodeType": "Return",
												"src": "7748:18:5"
											}
										]
									},
									"functionSelector": "e5b95595",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasMinted",
									"nameLocation": "7686:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7704:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "7696:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7695:12:5"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "7731:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7731:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7730:6:5"
									},
									"scope": 1293,
									"src": "7677:141:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "7885:114:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1278,
														"name": "_halvingCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "7903:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7919:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7903:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1277,
												"id": 1281,
												"nodeType": "Return",
												"src": "7896:24:5"
											}
										]
									},
									"functionSelector": "331d17c1",
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHalvingCount",
									"nameLocation": "7835:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7850:2:5"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "7876:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7876:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7875:9:5"
									},
									"scope": 1293,
									"src": "7826:173:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										187
									],
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "8076:28:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3234",
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8094:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_24_by_1",
														"typeString": "int_const 24"
													},
													"value": "24"
												},
												"functionReturnParameters": 1288,
												"id": 1290,
												"nodeType": "Return",
												"src": "8087:9:5"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "8020:8:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8051:8:5"
									},
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8028:2:5"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "8069:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1286,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8069:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8068:7:5"
									},
									"scope": 1293,
									"src": "8011:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1294,
							"src": "175:7932:5",
							"usedErrors": []
						}
					],
					"src": "35:8072:5"
				},
				"id": 5
			}
		}
	}
}